/* @flow */
import React from 'react';
import dedent from 'dedent';
import { createThemedComponent } from '../src/library/themes';
import renderComponentStylesToString from './renderComponentStylesToString';
import logDiff from './logDiff';

class ThemeOverrideError extends Error {
  constructor(key = '', message = '', ...args) {
    super(message, ...args);

    this.message =
      message ||
      dedent(`
        Theme variable override failed for "${key}".

        Generated styles were unaffected. This could mean that the override was
        not applicable in the state in which the component was rendered or it
        could be symptomatic of a problem with the component implementation.
      `);
  }
}

/**
 * This function compares the generated styles for the supplied component to a
 * themed version of the same component wherein each supplied themeKey has been
 * overridden in a separate expectation.  Expectations will fail when there is
 * no change in the themed component styles indicating that the theme override
 * had no effect.
 *
 * Note that this test is only able to compare the styles generated by the
 * rendered state of the supplied component.  Props may need to be applied
 * test additional states.
 *
 * e.g Testing `Button_backgroundColor_primary` on `<Button />` would give a
 * false failure but testing it on `<Button primary />` would pass.
 *
 * Use the showDiffs option to verify expected style changes.
 */
export default function testThemeOverrides(
  component: React$Element<*>,
  themeKeys: Array<string>,
  options?: {
    showDiffs?: boolean
  } = {}
) {
  const { showDiffs } = options;
  const defaultStyles = renderComponentStylesToString(component);
  themeKeys.forEach((key) => {
    it(`"${key}" override affects styles`, () => {
      const ThemedComponent = createThemedComponent(component.type, {
        [key]: null
      });
      const themedStyles = renderComponentStylesToString(
        <ThemedComponent {...component.props} />
      );
      const styleChanged = themedStyles !== defaultStyles;

      if (styleChanged) {
        showDiffs && logDiff(key, defaultStyles, themedStyles);
      } else {
        throw new ThemeOverrideError(key);
      }

      expect(styleChanged).toEqual(true);
    });
  });
}
