// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly 1`] = `
<glamorous(div)>
  <ThemeProvider
    theme={
      Object {
        "backgroundColor": "#f6f6f6",
      }
    }
  >
    <glamorous(Nav)
      demos={
        Object {
          "button": Object {
            "behavior": "behavior dummy text for the Button component",
            "design": "Lofty design theory about Button",
            "doc": Object {
              "default": Object {},
            },
            "examples": Array [
              Object {
                "component": [Function],
                "description": "Regular button.",
                "source": "<Button>Do Something</Button>",
                "title": "Button",
              },
              Object {
                "component": [Function],
                "description": "Use once per page, for the primary action.",
                "source": "<Button primary>Do Something</Button>",
                "title": "Primary",
              },
              Object {
                "component": [Function],
                "description": "Use for less-important actions.",
                "source": "<Button minimal>Do Something</Button>",
                "title": "Minimal",
              },
              Object {
                "component": [Function],
                "description": "Use for destructive or potentially-dangerous actions.",
                "source": "<div>
          <Button variant=\\"danger\\">Regular</Button>
          <Button variant=\\"danger\\" primary>Primary</Button>
          <Button variant=\\"danger\\" minimal>Minimal</Button>
        </div>",
                "title": "Danger",
              },
              Object {
                "component": [Function],
                "description": "Use for positive actions, like when creating something.",
                "source": "<div>
          <Button variant=\\"success\\">Regular</Button>
          <Button variant=\\"success\\" primary>Primary</Button>
          <Button variant=\\"success\\" minimal>Minimal</Button>
        </div>",
                "title": "Success",
              },
              Object {
                "component": [Function],
                "description": "Use for potentially-destructive actions.",
                "source": "<div>
          <Button variant=\\"warning\\">Regular</Button>
          <Button variant=\\"warning\\" primary>Primary</Button>
          <Button variant=\\"warning\\" minimal>Minimal</Button>
        </div>",
                "title": "Warning",
              },
              Object {
                "component": [Function],
                "source": "<div>
          <Button size=\\"small\\">Small</Button>
          <Button>Medium</Button>
          <Button size=\\"large\\">Large</Button>
        </div>",
                "title": "Sizes",
              },
              Object {
                "component": [Function],
                "source": "<div>
          <Button disabled>Regular</Button>
          <Button disabled primary>Primary</Button>
          <Button disabled minimal>Minimal</Button>
        </div>",
                "title": "Disabled",
              },
              Object {
                "component": [Function],
                "source": "<Button fullWidth>Do Something</Button>",
                "title": "Full Width",
              },
              Object {
                "component": [Function],
                "description": "Long button text is truncated when necessary",
                "source": "<Button>Do Something</Button>",
                "title": "Truncation",
              },
              Object {
                "component": [Function],
                "source": "",
                "title": "States",
              },
            ],
            "slug": "button",
            "title": "Button",
          },
          "component-utils": Object {
            "behavior": "some cool behavior info",
            "design": "Lofty design theory about the component-utils",
            "doc": Object {
              "description": "Sample implementations of various methods of styling and style overrides.",
            },
            "examples": Array [
              Object {
                "component": [Function],
                "description": "Just a simple sample component to demonstrate the styling below.",
                "title": "Default",
              },
              Object {
                "component": [Function],
                "description": "This will affect all components inside this ThemeProvider that use this variable.",
                "source": "<ThemeProvider theme={{ color_primary: 'mediumvioletred' }}>
        <Sample />
        </ThemeProvider>",
                "title": "Global theme var override",
              },
              Object {
                "component": [Function],
                "description": "This will affect all components inside this ThemeProvider that use this variable, which should only be Sample components due to the namespace.",
                "source": "<ThemeProvider theme={{ Sample_color: 'mediumvioletred' }}>
        <Sample />
        </ThemeProvider>",
                "title": "Component theme var override",
              },
              Object {
                "component": [Function],
                "description": "When a nested ThemeProvider provides the same variable, the merge works as expected and the most deeply-nested theme wins.",
                "source": "<ThemeProvider theme={{ color_primary: 'cyan' }}>
        <ThemeProvider theme={{ color_primary: 'mediumvioletred' }}>
          <Sample />
        </ThemeProvider>
        </ThemeProvider>",
                "title": "Nested global theme var override",
              },
              Object {
                "component": [Function],
                "description": "When a nested ThemeProvider provides a different variable, the merge works as expected.",
                "source": "<ThemeProvider theme={{ color_primary: 'mediumvioletred' }}>
        <ThemeProvider theme={{ color_warning: 'tomato' }}>
          <Sample />
        </ThemeProvider>
        </ThemeProvider>",
                "title": "Shallow merged global theme var override",
              },
              Object {
                "component": [Function],
                "description": "If you need to overwrite a theme variable, either global or component-specific, for a specific component.",
                "source": "const MyThemedSample = createThemedComponent(Sample, {
        color_primary: 'mediumvioletred'
        });
        
        <MyThemedSample />",
                "title": "Local theme var override via createThemedComponent",
              },
              Object {
                "component": [Function],
                "description": "If you need to use completely custom styles (which can still reference the props & theme) on a component.",
                "source": "const MyStyledSample = createStyledComponent(Sample, (props, theme) => ({
          outline: '3px dashed mediumvioletred',
          fontSize: theme.fontSize_h1
        }));
        
        <MyStyledSample />",
                "title": "Style override via createStyledComponent",
              },
            ],
            "slug": "component-utils",
            "title": "ComponentUtils",
          },
          "hello": Object {
            "behavior": "behavior dummy text for the hello component",
            "design": "Lofty design theory about hello",
            "doc": Object {
              "default": Object {},
            },
            "examples": Array [
              Object {
                "component": [Function],
                "source": "<Hello />",
                "title": "Default",
              },
            ],
            "slug": "hello",
            "title": "Hello",
          },
          "hello-world": Object {
            "behavior": "behavior dummy text for the HelloWorld component",
            "design": "Lofty design theory about the helloworld",
            "doc": Object {
              "default": Object {},
            },
            "examples": Array [
              Object {
                "component": [Function],
                "source": "<HelloWorld />",
                "title": "Default",
              },
            ],
            "slug": "hello-world",
            "title": "HelloWorld",
          },
          "icon": Object {
            "behavior": "behavior dummy text for the Icon component",
            "design": "Lofty design theory about Icon",
            "doc": Object {
              "default": Object {},
            },
            "examples": Array [
              Object {
                "component": [Function],
                "source": "<IconSentimentSatisfied />",
                "title": "Icon",
              },
              Object {
                "component": [Function],
                "description": "You can apply a color to any icon.",
                "source": "<IconSentimentSatisfied color=\\"currentColor\\" />",
                "title": "Color",
              },
              Object {
                "component": [Function],
                "description": "Icons are available in three preset sizes, or you can supply your own custom size.",
                "source": "<IconSentimentSatisfied size=\\"small\\" />
        <IconSentimentSatisfied />
        <IconSentimentSatisfied size=\\"large\\" />
        <IconSentimentSatisfied size=\\"7em\\" />",
                "title": "Sizes",
              },
              Object {
                "component": [Function],
                "description": "Standalone icons need a title as opposed to decorative icons (those that repeat the information conveyed by text or do not add significant value).",
                "source": "<IconSentimentSatisfied title=\\"smiley-face\\" />",
                "title": "Title",
              },
              Object {
                "component": [Function],
                "description": "Some icons will be automatically mirrored for (right-to-left) RTL languages",
                "source": "<ThemeProvider theme={{ direction: 'rtl' }}>
          <IconHelp />
        </ThemeProvider>",
                "title": "RTL",
              },
              Object {
                "component": [Function],
                "description": "You can render a custom icon by supplying an SVG as a child.",
                "source": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
          <svg viewBox=\\"0 0 16 16\\">
            <path
              className=\\"trademark\\"
              d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
            />
            <g className=\\"technologies\\">
              <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
              <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
              <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
              <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
              <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
              <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
              <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
              <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
              <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
              <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
              <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
              <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
            </g>
            <g className=\\"ca\\">
              <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
              <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
            </g>
          </svg>
        </Icon>",
                "title": "Custom",
              },
              Object {
                "component": [Function],
                "source": "<CategoryIndex />",
                "title": "Icons by Category",
              },
            ],
            "slug": "icon",
            "title": "Icon",
          },
          "world": Object {
            "behavior": "behavior dummy text for the world component",
            "design": "Lofty design theory about the world",
            "doc": Object {
              "default": Object {},
            },
            "examples": Array [
              Object {
                "component": [Function],
                "title": "Default",
              },
              Object {
                "component": [Function],
                "title": "Custom Text",
              },
            ],
            "slug": "world",
            "title": "World",
          },
        }
      }
    />
  </ThemeProvider>
  <glamorous(main)>
    <Switch>
      <Route
        path="/components/:componentId"
        render={[Function]}
      />
      <Redirect
        from="/"
        push={false}
        to="/components/button"
      />
    </Switch>
    <Footer />
  </glamorous(main)>
</glamorous(div)>
`;
