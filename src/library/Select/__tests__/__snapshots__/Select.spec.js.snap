// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select demo examples controlled 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Component": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <MyForm>
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  onChange={[Function]}
                  placeholder="Select..."
                  placement="bottom-start"
                  selectedItem={undefined}
                  size="large"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-78"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onChange={[Function]}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    selectedItem={undefined}
                  >
                    <ThemedComponent
                      className="glamor-11"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-78"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onChange={[Function]}
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                      selectedItem={undefined}
                    >
                      <Themed(Dropdown)
                        className="glamor-11"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-78"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onChange={[Function]}
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                        selectedItem={undefined}
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-78"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onChange={[Function]}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                              selectedItem={undefined}
                            >
                              <Popover
                                className="glamor-11"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-78-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-78"
                                isOpen={false}
                                onChange={[Function]}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                selectedItem={undefined}
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-11"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-78-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-78"
                                  isOpen={false}
                                  onChange={[Function]}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  selectedItem={undefined}
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-9"
                                    id="select-78"
                                    onChange={[Function]}
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-9"
                                      id="select-78"
                                      onChange={[Function]}
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-78-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-78-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-78-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-78-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Select..."
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-78-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-78-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-78-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-78-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-78-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-78-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-78-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-78-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-1"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Select...
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
              </MyForm>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples data 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Button": [Function],
            "CustomRender": [Function],
            "IconCloud": [Function],
            "Select": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <Select
                data={
                  Array [
                    Object {
                      "secondaryText": "Secondary text",
                      "text": "Menu item",
                      "value": "basic",
                    },
                    Object {
                      "iconStart": <IconCloud />,
                      "text": "Icon at start",
                      "value": "iconStart",
                    },
                    Object {
                      "iconEnd": <IconCloud />,
                      "text": "Icon at end",
                      "value": "iconEnd",
                    },
                    Object {
                      "divider": true,
                    },
                    Object {
                      "text": "Danger variant",
                      "value": "variant",
                      "variant": "danger",
                    },
                    Object {
                      "disabled": true,
                      "onClick": [Function],
                      "text": "Disabled menu item",
                      "value": "disabled",
                    },
                    Object {
                      "avatar": "/images/avatar.svg",
                      "render": [Function],
                      "text": "Custom render",
                      "value": "custom",
                    },
                  ]
                }
                placeholder="Select..."
                placement="bottom-start"
                size="large"
              >
                <Select
                  data={
                    Array [
                      Object {
                        "secondaryText": "Secondary text",
                        "text": "Menu item",
                        "value": "basic",
                      },
                      Object {
                        "iconStart": <IconCloud />,
                        "text": "Icon at start",
                        "value": "iconStart",
                      },
                      Object {
                        "iconEnd": <IconCloud />,
                        "text": "Icon at end",
                        "value": "iconEnd",
                      },
                      Object {
                        "divider": true,
                      },
                      Object {
                        "text": "Danger variant",
                        "value": "variant",
                        "variant": "danger",
                      },
                      Object {
                        "disabled": true,
                        "onClick": [Function],
                        "text": "Disabled menu item",
                        "value": "disabled",
                      },
                      Object {
                        "avatar": "/images/avatar.svg",
                        "render": [Function],
                        "text": "Custom render",
                        "value": "custom",
                      },
                    ]
                  }
                  disabled={undefined}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-80"
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                >
                  <ThemedComponent
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "secondaryText": "Secondary text",
                          "text": "Menu item",
                          "value": "basic",
                        },
                        Object {
                          "iconStart": <IconCloud />,
                          "text": "Icon at start",
                          "value": "iconStart",
                        },
                        Object {
                          "iconEnd": <IconCloud />,
                          "text": "Icon at end",
                          "value": "iconEnd",
                        },
                        Object {
                          "divider": true,
                        },
                        Object {
                          "text": "Danger variant",
                          "value": "variant",
                          "variant": "danger",
                        },
                        Object {
                          "disabled": true,
                          "onClick": [Function],
                          "text": "Disabled menu item",
                          "value": "disabled",
                        },
                        Object {
                          "avatar": "/images/avatar.svg",
                          "render": [Function],
                          "text": "Custom render",
                          "value": "custom",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-80"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <Themed(Dropdown)
                      className="glamor-11"
                      data={
                        Array [
                          Object {
                            "secondaryText": "Secondary text",
                            "text": "Menu item",
                            "value": "basic",
                          },
                          Object {
                            "iconStart": <IconCloud />,
                            "text": "Icon at start",
                            "value": "iconStart",
                          },
                          Object {
                            "iconEnd": <IconCloud />,
                            "text": "Icon at end",
                            "value": "iconEnd",
                          },
                          Object {
                            "divider": true,
                          },
                          Object {
                            "text": "Danger variant",
                            "value": "variant",
                            "variant": "danger",
                          },
                          Object {
                            "disabled": true,
                            "onClick": [Function],
                            "text": "Disabled menu item",
                            "value": "disabled",
                          },
                          Object {
                            "avatar": "/images/avatar.svg",
                            "render": [Function],
                            "text": "Custom render",
                            "value": "custom",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-80"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <Dropdown
                            className="glamor-11"
                            data={
                              Array [
                                Object {
                                  "secondaryText": "Secondary text",
                                  "text": "Menu item",
                                  "value": "basic",
                                },
                                Object {
                                  "iconStart": <IconCloud />,
                                  "text": "Icon at start",
                                  "value": "iconStart",
                                },
                                Object {
                                  "iconEnd": <IconCloud />,
                                  "text": "Icon at end",
                                  "value": "iconEnd",
                                },
                                Object {
                                  "divider": true,
                                },
                                Object {
                                  "text": "Danger variant",
                                  "value": "variant",
                                  "variant": "danger",
                                },
                                Object {
                                  "disabled": true,
                                  "onClick": [Function],
                                  "text": "Disabled menu item",
                                  "value": "disabled",
                                },
                                Object {
                                  "avatar": "/images/avatar.svg",
                                  "render": [Function],
                                  "text": "Custom render",
                                  "value": "custom",
                                },
                              ]
                            }
                            disabled={undefined}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            highlightedIndex={undefined}
                            id="select-80"
                            isOpen={false}
                            modifiers={
                              Object {
                                "contentWidth": Object {
                                  "enabled": true,
                                  "fn": [Function],
                                },
                              }
                            }
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom-start"
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "secondaryText": "Secondary text",
                                        "text": "Menu item",
                                        "value": "basic",
                                      },
                                      Object {
                                        "iconStart": <IconCloud />,
                                        "text": "Icon at start",
                                        "value": "iconStart",
                                      },
                                      Object {
                                        "iconEnd": <IconCloud />,
                                        "text": "Icon at end",
                                        "value": "iconEnd",
                                      },
                                      Object {
                                        "divider": true,
                                      },
                                      Object {
                                        "text": "Danger variant",
                                        "value": "variant",
                                        "variant": "danger",
                                      },
                                      Object {
                                        "disabled": true,
                                        "onClick": [Function],
                                        "text": "Disabled menu item",
                                        "value": "disabled",
                                      },
                                      Object {
                                        "avatar": "/images/avatar.svg",
                                        "render": [Function],
                                        "text": "Custom render",
                                        "value": "custom",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-80-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              disabled={undefined}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-80"
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Popover
                                className="glamor-11"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "secondaryText": "Secondary text",
                                          "text": "Menu item",
                                          "value": "basic",
                                        },
                                        Object {
                                          "iconStart": <IconCloud />,
                                          "text": "Icon at start",
                                          "value": "iconStart",
                                        },
                                        Object {
                                          "iconEnd": <IconCloud />,
                                          "text": "Icon at end",
                                          "value": "iconEnd",
                                        },
                                        Object {
                                          "divider": true,
                                        },
                                        Object {
                                          "text": "Danger variant",
                                          "value": "variant",
                                          "variant": "danger",
                                        },
                                        Object {
                                          "disabled": true,
                                          "onClick": [Function],
                                          "text": "Disabled menu item",
                                          "value": "disabled",
                                        },
                                        Object {
                                          "avatar": "/images/avatar.svg",
                                          "render": [Function],
                                          "text": "Custom render",
                                          "value": "custom",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-80-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-80"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                tag="span"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Manager
                                  className="glamor-9"
                                  id="select-80"
                                  tag="span"
                                >
                                  <span
                                    className="glamor-9"
                                    id="select-80"
                                  >
                                    <PopoverTrigger
                                      aria-activedescendant={undefined}
                                      aria-describedby="select-80-content"
                                      aria-disabled={undefined}
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-invalid={undefined}
                                      aria-owns="select-80-content"
                                      aria-readonly={undefined}
                                      aria-required={undefined}
                                      disabled={undefined}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      <PopoverTrigger
                                        component="span"
                                      >
                                        <Target
                                          className="glamor-7"
                                          component="span"
                                        >
                                          <span
                                            className="glamor-7"
                                          >
                                            <SelectTrigger
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-80-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-80-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              disabled={undefined}
                                              isOpen={false}
                                              item={undefined}
                                              name={undefined}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              placeholder="Select..."
                                              readOnly={undefined}
                                              role="button"
                                              size="large"
                                              tabIndex={0}
                                              triggerRef={[Function]}
                                              variant={undefined}
                                            >
                                              <SelectTrigger
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-80-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-80-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": true,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={undefined}
                                                fauxControlRef={[Function]}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                readOnly={undefined}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={0}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-80-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-80-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-80-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-80-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    disabled={undefined}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <div
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-80-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-80-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-4"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <glamorous(Trigger)
                                                        controlPropsIn={
                                                          Object {
                                                            "hasPlaceholder": true,
                                                            "variant": undefined,
                                                          }
                                                        }
                                                        disabled={undefined}
                                                        hasPlaceholder={true}
                                                        iconEnd={undefined}
                                                        iconStart={undefined}
                                                        innerRef={undefined}
                                                        key="control"
                                                        prefix={undefined}
                                                        readOnly={undefined}
                                                        size="large"
                                                        suffix={undefined}
                                                        variant={undefined}
                                                      >
                                                        <div
                                                          className="glamor-1"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                        >
                                                          <TriggerContent>
                                                            <span
                                                              className="glamor-0"
                                                            >
                                                              Select...
                                                            </span>
                                                          </TriggerContent>
                                                        </div>
                                                      </glamorous(Trigger)>
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        key="arrow"
                                                        size="1.5em"
                                                      >
                                                        <Icon
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          rtl={false}
                                                          size="1.5em"
                                                        >
                                                          <glamorous(svg)
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            role="img"
                                                            rtl={false}
                                                            size="1.5em"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              className="glamor-2"
                                                              role="img"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <g>
                                                                <path
                                                                  d="M12 17.5l-8-8h16z"
                                                                />
                                                              </g>
                                                            </svg>
                                                          </glamorous(svg)>
                                                        </Icon>
                                                      </IconArrowDropdownDown>
                                                      <input
                                                        key="input"
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />
                                                      <Underlay
                                                        disabled={undefined}
                                                        readOnly={undefined}
                                                        variant={undefined}
                                                      >
                                                        <div
                                                          className="glamor-3"
                                                          readOnly={undefined}
                                                        />
                                                      </Underlay>
                                                    </div>
                                                  </FauxControl>
                                                </FauxControl>
                                              </SelectTrigger>
                                            </SelectTrigger>
                                          </span>
                                        </Target>
                                      </PopoverTrigger>
                                    </PopoverTrigger>
                                  </span>
                                </Manager>
                              </Popover>
                            </Popover>
                          </Dropdown>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(Dropdown)>
                  </ThemedComponent>
                </Select>
              </Select>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples disabled 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #afbacc;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #afbacc;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #afbacc;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #afbacc;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #afbacc;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #afbacc;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #afbacc;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3,
[data-glamor-3] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <Select
              data={
                Array [
                  Object {
                    "text": "Alpha",
                    "value": "alpha",
                  },
                  Object {
                    "text": "Beta",
                    "value": "beta",
                  },
                  Object {
                    "text": "Gamma",
                    "value": "gamma",
                  },
                ]
              }
              disabled={true}
              placeholder="Select..."
              placement="bottom-start"
              size="large"
            >
              <Select
                data={
                  Array [
                    Object {
                      "text": "Alpha",
                      "value": "alpha",
                    },
                    Object {
                      "text": "Beta",
                      "value": "beta",
                    },
                    Object {
                      "text": "Gamma",
                      "value": "gamma",
                    },
                  ]
                }
                disabled={true}
                getItemProps={[Function]}
                getMenuProps={[Function]}
                getTriggerProps={[Function]}
                highlightedIndex={undefined}
                id="select-84"
                isOpen={false}
                modifiers={
                  Object {
                    "contentWidth": Object {
                      "enabled": true,
                      "fn": [Function],
                    },
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom-start"
              >
                <ThemedComponent
                  className="glamor-11"
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  disabled={true}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-84"
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                >
                  <Themed(Dropdown)
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={true}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-84"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Dropdown
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alpha",
                                "value": "alpha",
                              },
                              Object {
                                "text": "Beta",
                                "value": "beta",
                              },
                              Object {
                                "text": "Gamma",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={true}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-84"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <Popover
                            className="glamor-11"
                            content={
                              <DropdownContent
                                data={
                                  Array [
                                    Object {
                                      "text": "Alpha",
                                      "value": "alpha",
                                    },
                                    Object {
                                      "text": "Beta",
                                      "value": "beta",
                                    },
                                    Object {
                                      "text": "Gamma",
                                      "value": "gamma",
                                    },
                                  ]
                                }
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                id="select-84-content"
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                placement="bottom-start"
                                wide={undefined}
                              />
                            }
                            disabled={true}
                            focusTriggerOnClose={true}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            hasArrow={true}
                            highlightedIndex={undefined}
                            id="select-84"
                            isOpen={false}
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom"
                            triggerRef={[Function]}
                            wrapContent={false}
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-84-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              disabled={true}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-84"
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              tag="span"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Manager
                                className="glamor-9"
                                id="select-84"
                                tag="span"
                              >
                                <span
                                  className="glamor-9"
                                  id="select-84"
                                >
                                  <PopoverTrigger
                                    aria-activedescendant={undefined}
                                    aria-describedby="select-84-content"
                                    aria-disabled={true}
                                    aria-expanded={false}
                                    aria-haspopup="listbox"
                                    aria-invalid={undefined}
                                    aria-owns="select-84-content"
                                    aria-readonly={undefined}
                                    aria-required={undefined}
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={undefined}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    tabIndex={undefined}
                                  >
                                    <PopoverTrigger
                                      component="span"
                                    >
                                      <Target
                                        className="glamor-7"
                                        component="span"
                                      >
                                        <span
                                          className="glamor-7"
                                        >
                                          <SelectTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-84-content"
                                            aria-disabled={true}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={undefined}
                                            aria-owns="select-84-content"
                                            aria-readonly={undefined}
                                            aria-required={undefined}
                                            disabled={true}
                                            isOpen={false}
                                            item={undefined}
                                            name={undefined}
                                            onBlur={[Function]}
                                            onClick={undefined}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            placeholder="Select..."
                                            readOnly={undefined}
                                            role="button"
                                            size="large"
                                            tabIndex={undefined}
                                            triggerRef={[Function]}
                                            variant={undefined}
                                          >
                                            <SelectTrigger
                                              afterItems={
                                                Array [
                                                  <IconArrowDropdownDown
                                                    css={
                                                      Object {
                                                        "margin": "0.5em",
                                                      }
                                                    }
                                                    size="1.5em"
                                                  />,
                                                  <input
                                                    name={undefined}
                                                    type="hidden"
                                                    value=""
                                                  />,
                                                ]
                                              }
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-84-content"
                                              aria-disabled={true}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-84-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              control={[Function]}
                                              controlProps={
                                                Object {
                                                  "hasPlaceholder": true,
                                                  "variant": undefined,
                                                }
                                              }
                                              disabled={true}
                                              fauxControlRef={[Function]}
                                              onBlur={[Function]}
                                              onClick={undefined}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={undefined}
                                              role="button"
                                              selectedItemVariant={undefined}
                                              size="large"
                                              tabIndex={undefined}
                                              variant={undefined}
                                            >
                                              <FauxControl
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-84-content"
                                                aria-disabled={true}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-84-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                className="glamor-5"
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": true,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={true}
                                                fauxControlRef={[Function]}
                                                onBlur={[Function]}
                                                onClick={undefined}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                readOnly={undefined}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={undefined}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-84-content"
                                                  aria-disabled={true}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-84-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  disabled={true}
                                                  innerRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={undefined}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  tabIndex={undefined}
                                                  variant={undefined}
                                                >
                                                  <div
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-84-content"
                                                    aria-disabled={true}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-84-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-4"
                                                    onBlur={[Function]}
                                                    onClick={undefined}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    tabIndex={undefined}
                                                  >
                                                    <glamorous(Trigger)
                                                      controlPropsIn={
                                                        Object {
                                                          "hasPlaceholder": true,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={true}
                                                      hasPlaceholder={true}
                                                      iconEnd={undefined}
                                                      iconStart={undefined}
                                                      innerRef={undefined}
                                                      key="control"
                                                      prefix={undefined}
                                                      readOnly={undefined}
                                                      size="large"
                                                      suffix={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-1"
                                                        prefix={undefined}
                                                        readOnly={undefined}
                                                      >
                                                        <TriggerContent>
                                                          <span
                                                            className="glamor-0"
                                                          >
                                                            Select...
                                                          </span>
                                                        </TriggerContent>
                                                      </div>
                                                    </glamorous(Trigger)>
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      key="arrow"
                                                      size="1.5em"
                                                    >
                                                      <Icon
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        rtl={false}
                                                        size="1.5em"
                                                      >
                                                        <glamorous(svg)
                                                          aria-hidden={true}
                                                          aria-labelledby={undefined}
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          role="img"
                                                          rtl={false}
                                                          size="1.5em"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            className="glamor-2"
                                                            role="img"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <g>
                                                              <path
                                                                d="M12 17.5l-8-8h16z"
                                                              />
                                                            </g>
                                                          </svg>
                                                        </glamorous(svg)>
                                                      </Icon>
                                                    </IconArrowDropdownDown>
                                                    <input
                                                      key="input"
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />
                                                    <Underlay
                                                      disabled={true}
                                                      readOnly={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-3"
                                                        readOnly={undefined}
                                                      />
                                                    </Underlay>
                                                  </div>
                                                </FauxControl>
                                              </FauxControl>
                                            </SelectTrigger>
                                          </SelectTrigger>
                                        </span>
                                      </Target>
                                    </PopoverTrigger>
                                  </PopoverTrigger>
                                </span>
                              </Manager>
                            </Popover>
                          </Popover>
                        </Dropdown>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Dropdown)>
                </ThemedComponent>
              </Select>
            </Select>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples form-field 1`] = `
.glamor-13,
[data-glamor-13] {
  width: 100%;
}

.glamor-13 > span,
[data-glamor-13] > span {
  width: 100%;
}

.glamor-11,
[data-glamor-11] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-11 *,
[data-glamor-11] *,
.glamor-11 *::before,
[data-glamor-11] *::before,
.glamor-11 *::after,
[data-glamor-11] *::after {
  box-sizing: inherit;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  display: inline-block;
}

.glamor-7,
[data-glamor-7] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-7 [role="img"],
[data-glamor-7] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-7 [role="img"]:first-child,
[data-glamor-7] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-7 :not([role="img"]) ~ [role="img"],
[data-glamor-7] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-7 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-7] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-6,
[data-glamor-6] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-6 *,
[data-glamor-6] *,
.glamor-6 *::before,
[data-glamor-6] *::before,
.glamor-6 *::after,
[data-glamor-6] *::after {
  box-sizing: inherit;
}

.glamor-6:hover > div:last-child,
[data-glamor-6]:hover > div:last-child,
.glamor-6[data-simulate-hover] > div:last-child,
[data-glamor-6][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-6:focus > div:last-child,
[data-glamor-6]:focus > div:last-child,
.glamor-6[data-simulate-focus] > div:last-child,
[data-glamor-6][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-6:active > div:last-child,
[data-glamor-6]:active > div:last-child,
.glamor-6[data-simulate-active] > div:last-child,
[data-glamor-6][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-6 [role="img"],
[data-glamor-6] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-6 [role="img"]:first-child,
[data-glamor-6] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-6 :not([role="img"]) ~ [role="img"],
[data-glamor-6] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-6 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-6] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-3::placeholder,
[data-glamor-3]::placeholder,
.glamor-3[data-simulate-placeholder],
[data-glamor-3][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-3::-ms-input-placeholder,
[data-glamor-3]::-ms-input-placeholder,
.glamor-3[data-simulate-msinputplaceholder],
[data-glamor-3][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-3:-ms-input-placeholder,
[data-glamor-3]:-ms-input-placeholder,
.glamor-3[data-simulate-msinputplaceholder],
[data-glamor-3][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-3::-ms-clear,
[data-glamor-3]::-ms-clear,
.glamor-3[data-simulate-msclear],
[data-glamor-3][data-simulate-msclear] {
  display: none;
}

.glamor-3:focus ~ div:last-child,
[data-glamor-3]:focus ~ div:last-child,
.glamor-3[data-simulate-focus] ~ div:last-child,
[data-glamor-3][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2,
[data-glamor-2] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-4,
[data-glamor-4] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-5,
[data-glamor-5] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-19,
[data-glamor-19] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.glamor-19 *,
[data-glamor-19] *,
.glamor-19 *::before,
[data-glamor-19] *::before,
.glamor-19 *::after,
[data-glamor-19] *::after {
  box-sizing: inherit;
}

.glamor-1,
[data-glamor-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-1 > *,
[data-glamor-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.glamor-0,
[data-glamor-0] {
  color: #db2929;
  font-size: 0.6875em;
}

.glamor-18,
[data-glamor-18] {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "FormField": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alabama",
                "value": "AL",
              },
              Object {
                "text": "Alaska",
                "value": "AK",
              },
              Object {
                "text": "Arizona",
                "value": "AZ",
              },
              Object {
                "text": "Arkansas",
                "value": "AR",
              },
              Object {
                "text": "California",
                "value": "CA",
              },
              Object {
                "text": "Colorado",
                "value": "CO",
              },
              Object {
                "text": "Connecticut",
                "value": "CT",
              },
              Object {
                "text": "Delaware",
                "value": "DE",
              },
              Object {
                "text": "Florida",
                "value": "FL",
              },
              Object {
                "text": "Georgia",
                "value": "GA",
              },
              Object {
                "text": "Hawaii",
                "value": "HI",
              },
              Object {
                "text": "Idaho",
                "value": "ID",
              },
              Object {
                "text": "Illinois",
                "value": "IL",
              },
              Object {
                "text": "Indiana",
                "value": "IN",
              },
              Object {
                "text": "Iowa",
                "value": "IA",
              },
              Object {
                "text": "Kansas",
                "value": "KS",
              },
              Object {
                "text": "Kentucky",
                "value": "KY",
              },
              Object {
                "text": "Louisiana",
                "value": "LA",
              },
              Object {
                "text": "Maine",
                "value": "ME",
              },
              Object {
                "text": "Maryland",
                "value": "MD",
              },
              Object {
                "text": "Massachusetts",
                "value": "MA",
              },
              Object {
                "text": "Michigan",
                "value": "MI",
              },
              Object {
                "text": "Minnesota",
                "value": "MN",
              },
              Object {
                "text": "Mississippi",
                "value": "MS",
              },
              Object {
                "text": "Missouri",
                "value": "MO",
              },
              Object {
                "text": "Montana",
                "value": "MT",
              },
              Object {
                "text": "Nebraska",
                "value": "NE",
              },
              Object {
                "text": "Nevada",
                "value": "NV",
              },
              Object {
                "text": "New Hampshire",
                "value": "NH",
              },
              Object {
                "text": "New Jersey",
                "value": "NJ",
              },
              Object {
                "text": "New Mexico",
                "value": "NM",
              },
              Object {
                "text": "New York",
                "value": "NY",
              },
              Object {
                "text": "North Carolina",
                "value": "NC",
              },
              Object {
                "text": "North Dakota",
                "value": "ND",
              },
              Object {
                "text": "Ohio",
                "value": "OH",
              },
              Object {
                "text": "Oklahoma",
                "value": "OK",
              },
              Object {
                "text": "Oregon",
                "value": "OR",
              },
              Object {
                "text": "Pennsylvania",
                "value": "PA",
              },
              Object {
                "text": "Rhode Island",
                "value": "RI",
              },
              Object {
                "text": "South Carolina",
                "value": "SC",
              },
              Object {
                "text": "South Dakota",
                "value": "SD",
              },
              Object {
                "text": "Tennessee",
                "value": "TN",
              },
              Object {
                "text": "Texas",
                "value": "TX",
              },
              Object {
                "text": "Utah",
                "value": "UT",
              },
              Object {
                "text": "Vermont",
                "value": "VT",
              },
              Object {
                "text": "Virginia",
                "value": "VA",
              },
              Object {
                "text": "Washington",
                "value": "WA",
              },
              Object {
                "text": "West Virginia",
                "value": "WV",
              },
              Object {
                "text": "Wisconsin",
                "value": "WI",
              },
              Object {
                "text": "Wyoming",
                "value": "WY",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-20"
              >
                <FormField
                  caption="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                  data={
                    Array [
                      Object {
                        "text": "Alabama",
                        "value": "AL",
                      },
                      Object {
                        "text": "Alaska",
                        "value": "AK",
                      },
                      Object {
                        "text": "Arizona",
                        "value": "AZ",
                      },
                      Object {
                        "text": "Arkansas",
                        "value": "AR",
                      },
                      Object {
                        "text": "California",
                        "value": "CA",
                      },
                      Object {
                        "text": "Colorado",
                        "value": "CO",
                      },
                      Object {
                        "text": "Connecticut",
                        "value": "CT",
                      },
                      Object {
                        "text": "Delaware",
                        "value": "DE",
                      },
                      Object {
                        "text": "Florida",
                        "value": "FL",
                      },
                      Object {
                        "text": "Georgia",
                        "value": "GA",
                      },
                      Object {
                        "text": "Hawaii",
                        "value": "HI",
                      },
                      Object {
                        "text": "Idaho",
                        "value": "ID",
                      },
                      Object {
                        "text": "Illinois",
                        "value": "IL",
                      },
                      Object {
                        "text": "Indiana",
                        "value": "IN",
                      },
                      Object {
                        "text": "Iowa",
                        "value": "IA",
                      },
                      Object {
                        "text": "Kansas",
                        "value": "KS",
                      },
                      Object {
                        "text": "Kentucky",
                        "value": "KY",
                      },
                      Object {
                        "text": "Louisiana",
                        "value": "LA",
                      },
                      Object {
                        "text": "Maine",
                        "value": "ME",
                      },
                      Object {
                        "text": "Maryland",
                        "value": "MD",
                      },
                      Object {
                        "text": "Massachusetts",
                        "value": "MA",
                      },
                      Object {
                        "text": "Michigan",
                        "value": "MI",
                      },
                      Object {
                        "text": "Minnesota",
                        "value": "MN",
                      },
                      Object {
                        "text": "Mississippi",
                        "value": "MS",
                      },
                      Object {
                        "text": "Missouri",
                        "value": "MO",
                      },
                      Object {
                        "text": "Montana",
                        "value": "MT",
                      },
                      Object {
                        "text": "Nebraska",
                        "value": "NE",
                      },
                      Object {
                        "text": "Nevada",
                        "value": "NV",
                      },
                      Object {
                        "text": "New Hampshire",
                        "value": "NH",
                      },
                      Object {
                        "text": "New Jersey",
                        "value": "NJ",
                      },
                      Object {
                        "text": "New Mexico",
                        "value": "NM",
                      },
                      Object {
                        "text": "New York",
                        "value": "NY",
                      },
                      Object {
                        "text": "North Carolina",
                        "value": "NC",
                      },
                      Object {
                        "text": "North Dakota",
                        "value": "ND",
                      },
                      Object {
                        "text": "Ohio",
                        "value": "OH",
                      },
                      Object {
                        "text": "Oklahoma",
                        "value": "OK",
                      },
                      Object {
                        "text": "Oregon",
                        "value": "OR",
                      },
                      Object {
                        "text": "Pennsylvania",
                        "value": "PA",
                      },
                      Object {
                        "text": "Rhode Island",
                        "value": "RI",
                      },
                      Object {
                        "text": "South Carolina",
                        "value": "SC",
                      },
                      Object {
                        "text": "South Dakota",
                        "value": "SD",
                      },
                      Object {
                        "text": "Tennessee",
                        "value": "TN",
                      },
                      Object {
                        "text": "Texas",
                        "value": "TX",
                      },
                      Object {
                        "text": "Utah",
                        "value": "UT",
                      },
                      Object {
                        "text": "Vermont",
                        "value": "VT",
                      },
                      Object {
                        "text": "Virginia",
                        "value": "VA",
                      },
                      Object {
                        "text": "Washington",
                        "value": "WA",
                      },
                      Object {
                        "text": "West Virginia",
                        "value": "WV",
                      },
                      Object {
                        "text": "Wisconsin",
                        "value": "WI",
                      },
                      Object {
                        "text": "Wyoming",
                        "value": "WY",
                      },
                    ]
                  }
                  input={[Function]}
                  label="State"
                  name="state"
                  placeholder="Choose a state..."
                  required={true}
                  requiredText="Required"
                >
                  <FormField
                    className={undefined}
                  >
                    <div
                      className="glamor-19"
                    >
                      <label>
                        <glamorous(div)
                          hideLabel={undefined}
                          key="formField-124-textWrapper"
                        >
                          <div
                            className="glamor-1"
                          >
                            <span
                              id="formField-124-labelText"
                            >
                              State
                            </span>
                            <glamorous(span)
                              secondaryText={undefined}
                            >
                              <span
                                className="glamor-0"
                              >
                                Required
                              </span>
                            </glamorous(span)>
                          </div>
                        </glamorous(div)>
                        <Select
                          aria-describedby="formField-124-caption"
                          data={
                            Array [
                              Object {
                                "text": "Alabama",
                                "value": "AL",
                              },
                              Object {
                                "text": "Alaska",
                                "value": "AK",
                              },
                              Object {
                                "text": "Arizona",
                                "value": "AZ",
                              },
                              Object {
                                "text": "Arkansas",
                                "value": "AR",
                              },
                              Object {
                                "text": "California",
                                "value": "CA",
                              },
                              Object {
                                "text": "Colorado",
                                "value": "CO",
                              },
                              Object {
                                "text": "Connecticut",
                                "value": "CT",
                              },
                              Object {
                                "text": "Delaware",
                                "value": "DE",
                              },
                              Object {
                                "text": "Florida",
                                "value": "FL",
                              },
                              Object {
                                "text": "Georgia",
                                "value": "GA",
                              },
                              Object {
                                "text": "Hawaii",
                                "value": "HI",
                              },
                              Object {
                                "text": "Idaho",
                                "value": "ID",
                              },
                              Object {
                                "text": "Illinois",
                                "value": "IL",
                              },
                              Object {
                                "text": "Indiana",
                                "value": "IN",
                              },
                              Object {
                                "text": "Iowa",
                                "value": "IA",
                              },
                              Object {
                                "text": "Kansas",
                                "value": "KS",
                              },
                              Object {
                                "text": "Kentucky",
                                "value": "KY",
                              },
                              Object {
                                "text": "Louisiana",
                                "value": "LA",
                              },
                              Object {
                                "text": "Maine",
                                "value": "ME",
                              },
                              Object {
                                "text": "Maryland",
                                "value": "MD",
                              },
                              Object {
                                "text": "Massachusetts",
                                "value": "MA",
                              },
                              Object {
                                "text": "Michigan",
                                "value": "MI",
                              },
                              Object {
                                "text": "Minnesota",
                                "value": "MN",
                              },
                              Object {
                                "text": "Mississippi",
                                "value": "MS",
                              },
                              Object {
                                "text": "Missouri",
                                "value": "MO",
                              },
                              Object {
                                "text": "Montana",
                                "value": "MT",
                              },
                              Object {
                                "text": "Nebraska",
                                "value": "NE",
                              },
                              Object {
                                "text": "Nevada",
                                "value": "NV",
                              },
                              Object {
                                "text": "New Hampshire",
                                "value": "NH",
                              },
                              Object {
                                "text": "New Jersey",
                                "value": "NJ",
                              },
                              Object {
                                "text": "New Mexico",
                                "value": "NM",
                              },
                              Object {
                                "text": "New York",
                                "value": "NY",
                              },
                              Object {
                                "text": "North Carolina",
                                "value": "NC",
                              },
                              Object {
                                "text": "North Dakota",
                                "value": "ND",
                              },
                              Object {
                                "text": "Ohio",
                                "value": "OH",
                              },
                              Object {
                                "text": "Oklahoma",
                                "value": "OK",
                              },
                              Object {
                                "text": "Oregon",
                                "value": "OR",
                              },
                              Object {
                                "text": "Pennsylvania",
                                "value": "PA",
                              },
                              Object {
                                "text": "Rhode Island",
                                "value": "RI",
                              },
                              Object {
                                "text": "South Carolina",
                                "value": "SC",
                              },
                              Object {
                                "text": "South Dakota",
                                "value": "SD",
                              },
                              Object {
                                "text": "Tennessee",
                                "value": "TN",
                              },
                              Object {
                                "text": "Texas",
                                "value": "TX",
                              },
                              Object {
                                "text": "Utah",
                                "value": "UT",
                              },
                              Object {
                                "text": "Vermont",
                                "value": "VT",
                              },
                              Object {
                                "text": "Virginia",
                                "value": "VA",
                              },
                              Object {
                                "text": "Washington",
                                "value": "WA",
                              },
                              Object {
                                "text": "West Virginia",
                                "value": "WV",
                              },
                              Object {
                                "text": "Wisconsin",
                                "value": "WI",
                              },
                              Object {
                                "text": "Wyoming",
                                "value": "WY",
                              },
                            ]
                          }
                          key="formField-124-control"
                          name="state"
                          placeholder="Choose a state..."
                          placement="bottom-start"
                          required={true}
                          rootProps={undefined}
                          size="large"
                          variant={undefined}
                        >
                          <Select
                            aria-describedby="formField-124-caption"
                            data={
                              Array [
                                Object {
                                  "text": "Alabama",
                                  "value": "AL",
                                },
                                Object {
                                  "text": "Alaska",
                                  "value": "AK",
                                },
                                Object {
                                  "text": "Arizona",
                                  "value": "AZ",
                                },
                                Object {
                                  "text": "Arkansas",
                                  "value": "AR",
                                },
                                Object {
                                  "text": "California",
                                  "value": "CA",
                                },
                                Object {
                                  "text": "Colorado",
                                  "value": "CO",
                                },
                                Object {
                                  "text": "Connecticut",
                                  "value": "CT",
                                },
                                Object {
                                  "text": "Delaware",
                                  "value": "DE",
                                },
                                Object {
                                  "text": "Florida",
                                  "value": "FL",
                                },
                                Object {
                                  "text": "Georgia",
                                  "value": "GA",
                                },
                                Object {
                                  "text": "Hawaii",
                                  "value": "HI",
                                },
                                Object {
                                  "text": "Idaho",
                                  "value": "ID",
                                },
                                Object {
                                  "text": "Illinois",
                                  "value": "IL",
                                },
                                Object {
                                  "text": "Indiana",
                                  "value": "IN",
                                },
                                Object {
                                  "text": "Iowa",
                                  "value": "IA",
                                },
                                Object {
                                  "text": "Kansas",
                                  "value": "KS",
                                },
                                Object {
                                  "text": "Kentucky",
                                  "value": "KY",
                                },
                                Object {
                                  "text": "Louisiana",
                                  "value": "LA",
                                },
                                Object {
                                  "text": "Maine",
                                  "value": "ME",
                                },
                                Object {
                                  "text": "Maryland",
                                  "value": "MD",
                                },
                                Object {
                                  "text": "Massachusetts",
                                  "value": "MA",
                                },
                                Object {
                                  "text": "Michigan",
                                  "value": "MI",
                                },
                                Object {
                                  "text": "Minnesota",
                                  "value": "MN",
                                },
                                Object {
                                  "text": "Mississippi",
                                  "value": "MS",
                                },
                                Object {
                                  "text": "Missouri",
                                  "value": "MO",
                                },
                                Object {
                                  "text": "Montana",
                                  "value": "MT",
                                },
                                Object {
                                  "text": "Nebraska",
                                  "value": "NE",
                                },
                                Object {
                                  "text": "Nevada",
                                  "value": "NV",
                                },
                                Object {
                                  "text": "New Hampshire",
                                  "value": "NH",
                                },
                                Object {
                                  "text": "New Jersey",
                                  "value": "NJ",
                                },
                                Object {
                                  "text": "New Mexico",
                                  "value": "NM",
                                },
                                Object {
                                  "text": "New York",
                                  "value": "NY",
                                },
                                Object {
                                  "text": "North Carolina",
                                  "value": "NC",
                                },
                                Object {
                                  "text": "North Dakota",
                                  "value": "ND",
                                },
                                Object {
                                  "text": "Ohio",
                                  "value": "OH",
                                },
                                Object {
                                  "text": "Oklahoma",
                                  "value": "OK",
                                },
                                Object {
                                  "text": "Oregon",
                                  "value": "OR",
                                },
                                Object {
                                  "text": "Pennsylvania",
                                  "value": "PA",
                                },
                                Object {
                                  "text": "Rhode Island",
                                  "value": "RI",
                                },
                                Object {
                                  "text": "South Carolina",
                                  "value": "SC",
                                },
                                Object {
                                  "text": "South Dakota",
                                  "value": "SD",
                                },
                                Object {
                                  "text": "Tennessee",
                                  "value": "TN",
                                },
                                Object {
                                  "text": "Texas",
                                  "value": "TX",
                                },
                                Object {
                                  "text": "Utah",
                                  "value": "UT",
                                },
                                Object {
                                  "text": "Vermont",
                                  "value": "VT",
                                },
                                Object {
                                  "text": "Virginia",
                                  "value": "VA",
                                },
                                Object {
                                  "text": "Washington",
                                  "value": "WA",
                                },
                                Object {
                                  "text": "West Virginia",
                                  "value": "WV",
                                },
                                Object {
                                  "text": "Wisconsin",
                                  "value": "WI",
                                },
                                Object {
                                  "text": "Wyoming",
                                  "value": "WY",
                                },
                              ]
                            }
                            disabled={undefined}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            highlightedIndex={undefined}
                            id="select-125"
                            isOpen={false}
                            modifiers={
                              Object {
                                "contentWidth": Object {
                                  "enabled": true,
                                  "fn": [Function],
                                },
                              }
                            }
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom-start"
                            required={true}
                            rootProps={undefined}
                          >
                            <ThemedComponent
                              aria-describedby="formField-124-caption"
                              className="glamor-13"
                              data={
                                Array [
                                  Object {
                                    "text": "Alabama",
                                    "value": "AL",
                                  },
                                  Object {
                                    "text": "Alaska",
                                    "value": "AK",
                                  },
                                  Object {
                                    "text": "Arizona",
                                    "value": "AZ",
                                  },
                                  Object {
                                    "text": "Arkansas",
                                    "value": "AR",
                                  },
                                  Object {
                                    "text": "California",
                                    "value": "CA",
                                  },
                                  Object {
                                    "text": "Colorado",
                                    "value": "CO",
                                  },
                                  Object {
                                    "text": "Connecticut",
                                    "value": "CT",
                                  },
                                  Object {
                                    "text": "Delaware",
                                    "value": "DE",
                                  },
                                  Object {
                                    "text": "Florida",
                                    "value": "FL",
                                  },
                                  Object {
                                    "text": "Georgia",
                                    "value": "GA",
                                  },
                                  Object {
                                    "text": "Hawaii",
                                    "value": "HI",
                                  },
                                  Object {
                                    "text": "Idaho",
                                    "value": "ID",
                                  },
                                  Object {
                                    "text": "Illinois",
                                    "value": "IL",
                                  },
                                  Object {
                                    "text": "Indiana",
                                    "value": "IN",
                                  },
                                  Object {
                                    "text": "Iowa",
                                    "value": "IA",
                                  },
                                  Object {
                                    "text": "Kansas",
                                    "value": "KS",
                                  },
                                  Object {
                                    "text": "Kentucky",
                                    "value": "KY",
                                  },
                                  Object {
                                    "text": "Louisiana",
                                    "value": "LA",
                                  },
                                  Object {
                                    "text": "Maine",
                                    "value": "ME",
                                  },
                                  Object {
                                    "text": "Maryland",
                                    "value": "MD",
                                  },
                                  Object {
                                    "text": "Massachusetts",
                                    "value": "MA",
                                  },
                                  Object {
                                    "text": "Michigan",
                                    "value": "MI",
                                  },
                                  Object {
                                    "text": "Minnesota",
                                    "value": "MN",
                                  },
                                  Object {
                                    "text": "Mississippi",
                                    "value": "MS",
                                  },
                                  Object {
                                    "text": "Missouri",
                                    "value": "MO",
                                  },
                                  Object {
                                    "text": "Montana",
                                    "value": "MT",
                                  },
                                  Object {
                                    "text": "Nebraska",
                                    "value": "NE",
                                  },
                                  Object {
                                    "text": "Nevada",
                                    "value": "NV",
                                  },
                                  Object {
                                    "text": "New Hampshire",
                                    "value": "NH",
                                  },
                                  Object {
                                    "text": "New Jersey",
                                    "value": "NJ",
                                  },
                                  Object {
                                    "text": "New Mexico",
                                    "value": "NM",
                                  },
                                  Object {
                                    "text": "New York",
                                    "value": "NY",
                                  },
                                  Object {
                                    "text": "North Carolina",
                                    "value": "NC",
                                  },
                                  Object {
                                    "text": "North Dakota",
                                    "value": "ND",
                                  },
                                  Object {
                                    "text": "Ohio",
                                    "value": "OH",
                                  },
                                  Object {
                                    "text": "Oklahoma",
                                    "value": "OK",
                                  },
                                  Object {
                                    "text": "Oregon",
                                    "value": "OR",
                                  },
                                  Object {
                                    "text": "Pennsylvania",
                                    "value": "PA",
                                  },
                                  Object {
                                    "text": "Rhode Island",
                                    "value": "RI",
                                  },
                                  Object {
                                    "text": "South Carolina",
                                    "value": "SC",
                                  },
                                  Object {
                                    "text": "South Dakota",
                                    "value": "SD",
                                  },
                                  Object {
                                    "text": "Tennessee",
                                    "value": "TN",
                                  },
                                  Object {
                                    "text": "Texas",
                                    "value": "TX",
                                  },
                                  Object {
                                    "text": "Utah",
                                    "value": "UT",
                                  },
                                  Object {
                                    "text": "Vermont",
                                    "value": "VT",
                                  },
                                  Object {
                                    "text": "Virginia",
                                    "value": "VA",
                                  },
                                  Object {
                                    "text": "Washington",
                                    "value": "WA",
                                  },
                                  Object {
                                    "text": "West Virginia",
                                    "value": "WV",
                                  },
                                  Object {
                                    "text": "Wisconsin",
                                    "value": "WI",
                                  },
                                  Object {
                                    "text": "Wyoming",
                                    "value": "WY",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-125"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                              required={true}
                              rootProps={undefined}
                            >
                              <Themed(Dropdown)
                                aria-describedby="formField-124-caption"
                                className="glamor-13"
                                data={
                                  Array [
                                    Object {
                                      "text": "Alabama",
                                      "value": "AL",
                                    },
                                    Object {
                                      "text": "Alaska",
                                      "value": "AK",
                                    },
                                    Object {
                                      "text": "Arizona",
                                      "value": "AZ",
                                    },
                                    Object {
                                      "text": "Arkansas",
                                      "value": "AR",
                                    },
                                    Object {
                                      "text": "California",
                                      "value": "CA",
                                    },
                                    Object {
                                      "text": "Colorado",
                                      "value": "CO",
                                    },
                                    Object {
                                      "text": "Connecticut",
                                      "value": "CT",
                                    },
                                    Object {
                                      "text": "Delaware",
                                      "value": "DE",
                                    },
                                    Object {
                                      "text": "Florida",
                                      "value": "FL",
                                    },
                                    Object {
                                      "text": "Georgia",
                                      "value": "GA",
                                    },
                                    Object {
                                      "text": "Hawaii",
                                      "value": "HI",
                                    },
                                    Object {
                                      "text": "Idaho",
                                      "value": "ID",
                                    },
                                    Object {
                                      "text": "Illinois",
                                      "value": "IL",
                                    },
                                    Object {
                                      "text": "Indiana",
                                      "value": "IN",
                                    },
                                    Object {
                                      "text": "Iowa",
                                      "value": "IA",
                                    },
                                    Object {
                                      "text": "Kansas",
                                      "value": "KS",
                                    },
                                    Object {
                                      "text": "Kentucky",
                                      "value": "KY",
                                    },
                                    Object {
                                      "text": "Louisiana",
                                      "value": "LA",
                                    },
                                    Object {
                                      "text": "Maine",
                                      "value": "ME",
                                    },
                                    Object {
                                      "text": "Maryland",
                                      "value": "MD",
                                    },
                                    Object {
                                      "text": "Massachusetts",
                                      "value": "MA",
                                    },
                                    Object {
                                      "text": "Michigan",
                                      "value": "MI",
                                    },
                                    Object {
                                      "text": "Minnesota",
                                      "value": "MN",
                                    },
                                    Object {
                                      "text": "Mississippi",
                                      "value": "MS",
                                    },
                                    Object {
                                      "text": "Missouri",
                                      "value": "MO",
                                    },
                                    Object {
                                      "text": "Montana",
                                      "value": "MT",
                                    },
                                    Object {
                                      "text": "Nebraska",
                                      "value": "NE",
                                    },
                                    Object {
                                      "text": "Nevada",
                                      "value": "NV",
                                    },
                                    Object {
                                      "text": "New Hampshire",
                                      "value": "NH",
                                    },
                                    Object {
                                      "text": "New Jersey",
                                      "value": "NJ",
                                    },
                                    Object {
                                      "text": "New Mexico",
                                      "value": "NM",
                                    },
                                    Object {
                                      "text": "New York",
                                      "value": "NY",
                                    },
                                    Object {
                                      "text": "North Carolina",
                                      "value": "NC",
                                    },
                                    Object {
                                      "text": "North Dakota",
                                      "value": "ND",
                                    },
                                    Object {
                                      "text": "Ohio",
                                      "value": "OH",
                                    },
                                    Object {
                                      "text": "Oklahoma",
                                      "value": "OK",
                                    },
                                    Object {
                                      "text": "Oregon",
                                      "value": "OR",
                                    },
                                    Object {
                                      "text": "Pennsylvania",
                                      "value": "PA",
                                    },
                                    Object {
                                      "text": "Rhode Island",
                                      "value": "RI",
                                    },
                                    Object {
                                      "text": "South Carolina",
                                      "value": "SC",
                                    },
                                    Object {
                                      "text": "South Dakota",
                                      "value": "SD",
                                    },
                                    Object {
                                      "text": "Tennessee",
                                      "value": "TN",
                                    },
                                    Object {
                                      "text": "Texas",
                                      "value": "TX",
                                    },
                                    Object {
                                      "text": "Utah",
                                      "value": "UT",
                                    },
                                    Object {
                                      "text": "Vermont",
                                      "value": "VT",
                                    },
                                    Object {
                                      "text": "Virginia",
                                      "value": "VA",
                                    },
                                    Object {
                                      "text": "Washington",
                                      "value": "WA",
                                    },
                                    Object {
                                      "text": "West Virginia",
                                      "value": "WV",
                                    },
                                    Object {
                                      "text": "Wisconsin",
                                      "value": "WI",
                                    },
                                    Object {
                                      "text": "Wyoming",
                                      "value": "WY",
                                    },
                                  ]
                                }
                                disabled={undefined}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                highlightedIndex={undefined}
                                id="select-125"
                                isOpen={false}
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom-start"
                                required={true}
                                rootProps={undefined}
                              >
                                <ThemeProvider>
                                  <ThemeProvider>
                                    <Dropdown
                                      aria-describedby="formField-124-caption"
                                      className="glamor-13"
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alabama",
                                            "value": "AL",
                                          },
                                          Object {
                                            "text": "Alaska",
                                            "value": "AK",
                                          },
                                          Object {
                                            "text": "Arizona",
                                            "value": "AZ",
                                          },
                                          Object {
                                            "text": "Arkansas",
                                            "value": "AR",
                                          },
                                          Object {
                                            "text": "California",
                                            "value": "CA",
                                          },
                                          Object {
                                            "text": "Colorado",
                                            "value": "CO",
                                          },
                                          Object {
                                            "text": "Connecticut",
                                            "value": "CT",
                                          },
                                          Object {
                                            "text": "Delaware",
                                            "value": "DE",
                                          },
                                          Object {
                                            "text": "Florida",
                                            "value": "FL",
                                          },
                                          Object {
                                            "text": "Georgia",
                                            "value": "GA",
                                          },
                                          Object {
                                            "text": "Hawaii",
                                            "value": "HI",
                                          },
                                          Object {
                                            "text": "Idaho",
                                            "value": "ID",
                                          },
                                          Object {
                                            "text": "Illinois",
                                            "value": "IL",
                                          },
                                          Object {
                                            "text": "Indiana",
                                            "value": "IN",
                                          },
                                          Object {
                                            "text": "Iowa",
                                            "value": "IA",
                                          },
                                          Object {
                                            "text": "Kansas",
                                            "value": "KS",
                                          },
                                          Object {
                                            "text": "Kentucky",
                                            "value": "KY",
                                          },
                                          Object {
                                            "text": "Louisiana",
                                            "value": "LA",
                                          },
                                          Object {
                                            "text": "Maine",
                                            "value": "ME",
                                          },
                                          Object {
                                            "text": "Maryland",
                                            "value": "MD",
                                          },
                                          Object {
                                            "text": "Massachusetts",
                                            "value": "MA",
                                          },
                                          Object {
                                            "text": "Michigan",
                                            "value": "MI",
                                          },
                                          Object {
                                            "text": "Minnesota",
                                            "value": "MN",
                                          },
                                          Object {
                                            "text": "Mississippi",
                                            "value": "MS",
                                          },
                                          Object {
                                            "text": "Missouri",
                                            "value": "MO",
                                          },
                                          Object {
                                            "text": "Montana",
                                            "value": "MT",
                                          },
                                          Object {
                                            "text": "Nebraska",
                                            "value": "NE",
                                          },
                                          Object {
                                            "text": "Nevada",
                                            "value": "NV",
                                          },
                                          Object {
                                            "text": "New Hampshire",
                                            "value": "NH",
                                          },
                                          Object {
                                            "text": "New Jersey",
                                            "value": "NJ",
                                          },
                                          Object {
                                            "text": "New Mexico",
                                            "value": "NM",
                                          },
                                          Object {
                                            "text": "New York",
                                            "value": "NY",
                                          },
                                          Object {
                                            "text": "North Carolina",
                                            "value": "NC",
                                          },
                                          Object {
                                            "text": "North Dakota",
                                            "value": "ND",
                                          },
                                          Object {
                                            "text": "Ohio",
                                            "value": "OH",
                                          },
                                          Object {
                                            "text": "Oklahoma",
                                            "value": "OK",
                                          },
                                          Object {
                                            "text": "Oregon",
                                            "value": "OR",
                                          },
                                          Object {
                                            "text": "Pennsylvania",
                                            "value": "PA",
                                          },
                                          Object {
                                            "text": "Rhode Island",
                                            "value": "RI",
                                          },
                                          Object {
                                            "text": "South Carolina",
                                            "value": "SC",
                                          },
                                          Object {
                                            "text": "South Dakota",
                                            "value": "SD",
                                          },
                                          Object {
                                            "text": "Tennessee",
                                            "value": "TN",
                                          },
                                          Object {
                                            "text": "Texas",
                                            "value": "TX",
                                          },
                                          Object {
                                            "text": "Utah",
                                            "value": "UT",
                                          },
                                          Object {
                                            "text": "Vermont",
                                            "value": "VT",
                                          },
                                          Object {
                                            "text": "Virginia",
                                            "value": "VA",
                                          },
                                          Object {
                                            "text": "Washington",
                                            "value": "WA",
                                          },
                                          Object {
                                            "text": "West Virginia",
                                            "value": "WV",
                                          },
                                          Object {
                                            "text": "Wisconsin",
                                            "value": "WI",
                                          },
                                          Object {
                                            "text": "Wyoming",
                                            "value": "WY",
                                          },
                                        ]
                                      }
                                      disabled={undefined}
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      getTriggerProps={[Function]}
                                      highlightedIndex={undefined}
                                      id="select-125"
                                      isOpen={false}
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      onClose={[Function]}
                                      onOpen={[Function]}
                                      placement="bottom-start"
                                      required={true}
                                      rootProps={undefined}
                                    >
                                      <Popover
                                        aria-describedby="formField-124-caption"
                                        className="glamor-13"
                                        content={
                                          <DropdownContent
                                            data={
                                              Array [
                                                Object {
                                                  "text": "Alabama",
                                                  "value": "AL",
                                                },
                                                Object {
                                                  "text": "Alaska",
                                                  "value": "AK",
                                                },
                                                Object {
                                                  "text": "Arizona",
                                                  "value": "AZ",
                                                },
                                                Object {
                                                  "text": "Arkansas",
                                                  "value": "AR",
                                                },
                                                Object {
                                                  "text": "California",
                                                  "value": "CA",
                                                },
                                                Object {
                                                  "text": "Colorado",
                                                  "value": "CO",
                                                },
                                                Object {
                                                  "text": "Connecticut",
                                                  "value": "CT",
                                                },
                                                Object {
                                                  "text": "Delaware",
                                                  "value": "DE",
                                                },
                                                Object {
                                                  "text": "Florida",
                                                  "value": "FL",
                                                },
                                                Object {
                                                  "text": "Georgia",
                                                  "value": "GA",
                                                },
                                                Object {
                                                  "text": "Hawaii",
                                                  "value": "HI",
                                                },
                                                Object {
                                                  "text": "Idaho",
                                                  "value": "ID",
                                                },
                                                Object {
                                                  "text": "Illinois",
                                                  "value": "IL",
                                                },
                                                Object {
                                                  "text": "Indiana",
                                                  "value": "IN",
                                                },
                                                Object {
                                                  "text": "Iowa",
                                                  "value": "IA",
                                                },
                                                Object {
                                                  "text": "Kansas",
                                                  "value": "KS",
                                                },
                                                Object {
                                                  "text": "Kentucky",
                                                  "value": "KY",
                                                },
                                                Object {
                                                  "text": "Louisiana",
                                                  "value": "LA",
                                                },
                                                Object {
                                                  "text": "Maine",
                                                  "value": "ME",
                                                },
                                                Object {
                                                  "text": "Maryland",
                                                  "value": "MD",
                                                },
                                                Object {
                                                  "text": "Massachusetts",
                                                  "value": "MA",
                                                },
                                                Object {
                                                  "text": "Michigan",
                                                  "value": "MI",
                                                },
                                                Object {
                                                  "text": "Minnesota",
                                                  "value": "MN",
                                                },
                                                Object {
                                                  "text": "Mississippi",
                                                  "value": "MS",
                                                },
                                                Object {
                                                  "text": "Missouri",
                                                  "value": "MO",
                                                },
                                                Object {
                                                  "text": "Montana",
                                                  "value": "MT",
                                                },
                                                Object {
                                                  "text": "Nebraska",
                                                  "value": "NE",
                                                },
                                                Object {
                                                  "text": "Nevada",
                                                  "value": "NV",
                                                },
                                                Object {
                                                  "text": "New Hampshire",
                                                  "value": "NH",
                                                },
                                                Object {
                                                  "text": "New Jersey",
                                                  "value": "NJ",
                                                },
                                                Object {
                                                  "text": "New Mexico",
                                                  "value": "NM",
                                                },
                                                Object {
                                                  "text": "New York",
                                                  "value": "NY",
                                                },
                                                Object {
                                                  "text": "North Carolina",
                                                  "value": "NC",
                                                },
                                                Object {
                                                  "text": "North Dakota",
                                                  "value": "ND",
                                                },
                                                Object {
                                                  "text": "Ohio",
                                                  "value": "OH",
                                                },
                                                Object {
                                                  "text": "Oklahoma",
                                                  "value": "OK",
                                                },
                                                Object {
                                                  "text": "Oregon",
                                                  "value": "OR",
                                                },
                                                Object {
                                                  "text": "Pennsylvania",
                                                  "value": "PA",
                                                },
                                                Object {
                                                  "text": "Rhode Island",
                                                  "value": "RI",
                                                },
                                                Object {
                                                  "text": "South Carolina",
                                                  "value": "SC",
                                                },
                                                Object {
                                                  "text": "South Dakota",
                                                  "value": "SD",
                                                },
                                                Object {
                                                  "text": "Tennessee",
                                                  "value": "TN",
                                                },
                                                Object {
                                                  "text": "Texas",
                                                  "value": "TX",
                                                },
                                                Object {
                                                  "text": "Utah",
                                                  "value": "UT",
                                                },
                                                Object {
                                                  "text": "Vermont",
                                                  "value": "VT",
                                                },
                                                Object {
                                                  "text": "Virginia",
                                                  "value": "VA",
                                                },
                                                Object {
                                                  "text": "Washington",
                                                  "value": "WA",
                                                },
                                                Object {
                                                  "text": "West Virginia",
                                                  "value": "WV",
                                                },
                                                Object {
                                                  "text": "Wisconsin",
                                                  "value": "WI",
                                                },
                                                Object {
                                                  "text": "Wyoming",
                                                  "value": "WY",
                                                },
                                              ]
                                            }
                                            getItemProps={[Function]}
                                            getMenuProps={[Function]}
                                            id="select-125-content"
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                              }
                                            }
                                            placement="bottom-start"
                                            wide={undefined}
                                          />
                                        }
                                        disabled={undefined}
                                        focusTriggerOnClose={true}
                                        getItemProps={[Function]}
                                        getMenuProps={[Function]}
                                        getTriggerProps={[Function]}
                                        hasArrow={true}
                                        highlightedIndex={undefined}
                                        id="select-125"
                                        isOpen={false}
                                        onClose={[Function]}
                                        onOpen={[Function]}
                                        placement="bottom"
                                        required={true}
                                        rootProps={undefined}
                                        triggerRef={[Function]}
                                        wrapContent={false}
                                      >
                                        <Popover
                                          aria-describedby="formField-124-caption"
                                          className="glamor-13"
                                          content={
                                            <DropdownContent
                                              data={
                                                Array [
                                                  Object {
                                                    "text": "Alabama",
                                                    "value": "AL",
                                                  },
                                                  Object {
                                                    "text": "Alaska",
                                                    "value": "AK",
                                                  },
                                                  Object {
                                                    "text": "Arizona",
                                                    "value": "AZ",
                                                  },
                                                  Object {
                                                    "text": "Arkansas",
                                                    "value": "AR",
                                                  },
                                                  Object {
                                                    "text": "California",
                                                    "value": "CA",
                                                  },
                                                  Object {
                                                    "text": "Colorado",
                                                    "value": "CO",
                                                  },
                                                  Object {
                                                    "text": "Connecticut",
                                                    "value": "CT",
                                                  },
                                                  Object {
                                                    "text": "Delaware",
                                                    "value": "DE",
                                                  },
                                                  Object {
                                                    "text": "Florida",
                                                    "value": "FL",
                                                  },
                                                  Object {
                                                    "text": "Georgia",
                                                    "value": "GA",
                                                  },
                                                  Object {
                                                    "text": "Hawaii",
                                                    "value": "HI",
                                                  },
                                                  Object {
                                                    "text": "Idaho",
                                                    "value": "ID",
                                                  },
                                                  Object {
                                                    "text": "Illinois",
                                                    "value": "IL",
                                                  },
                                                  Object {
                                                    "text": "Indiana",
                                                    "value": "IN",
                                                  },
                                                  Object {
                                                    "text": "Iowa",
                                                    "value": "IA",
                                                  },
                                                  Object {
                                                    "text": "Kansas",
                                                    "value": "KS",
                                                  },
                                                  Object {
                                                    "text": "Kentucky",
                                                    "value": "KY",
                                                  },
                                                  Object {
                                                    "text": "Louisiana",
                                                    "value": "LA",
                                                  },
                                                  Object {
                                                    "text": "Maine",
                                                    "value": "ME",
                                                  },
                                                  Object {
                                                    "text": "Maryland",
                                                    "value": "MD",
                                                  },
                                                  Object {
                                                    "text": "Massachusetts",
                                                    "value": "MA",
                                                  },
                                                  Object {
                                                    "text": "Michigan",
                                                    "value": "MI",
                                                  },
                                                  Object {
                                                    "text": "Minnesota",
                                                    "value": "MN",
                                                  },
                                                  Object {
                                                    "text": "Mississippi",
                                                    "value": "MS",
                                                  },
                                                  Object {
                                                    "text": "Missouri",
                                                    "value": "MO",
                                                  },
                                                  Object {
                                                    "text": "Montana",
                                                    "value": "MT",
                                                  },
                                                  Object {
                                                    "text": "Nebraska",
                                                    "value": "NE",
                                                  },
                                                  Object {
                                                    "text": "Nevada",
                                                    "value": "NV",
                                                  },
                                                  Object {
                                                    "text": "New Hampshire",
                                                    "value": "NH",
                                                  },
                                                  Object {
                                                    "text": "New Jersey",
                                                    "value": "NJ",
                                                  },
                                                  Object {
                                                    "text": "New Mexico",
                                                    "value": "NM",
                                                  },
                                                  Object {
                                                    "text": "New York",
                                                    "value": "NY",
                                                  },
                                                  Object {
                                                    "text": "North Carolina",
                                                    "value": "NC",
                                                  },
                                                  Object {
                                                    "text": "North Dakota",
                                                    "value": "ND",
                                                  },
                                                  Object {
                                                    "text": "Ohio",
                                                    "value": "OH",
                                                  },
                                                  Object {
                                                    "text": "Oklahoma",
                                                    "value": "OK",
                                                  },
                                                  Object {
                                                    "text": "Oregon",
                                                    "value": "OR",
                                                  },
                                                  Object {
                                                    "text": "Pennsylvania",
                                                    "value": "PA",
                                                  },
                                                  Object {
                                                    "text": "Rhode Island",
                                                    "value": "RI",
                                                  },
                                                  Object {
                                                    "text": "South Carolina",
                                                    "value": "SC",
                                                  },
                                                  Object {
                                                    "text": "South Dakota",
                                                    "value": "SD",
                                                  },
                                                  Object {
                                                    "text": "Tennessee",
                                                    "value": "TN",
                                                  },
                                                  Object {
                                                    "text": "Texas",
                                                    "value": "TX",
                                                  },
                                                  Object {
                                                    "text": "Utah",
                                                    "value": "UT",
                                                  },
                                                  Object {
                                                    "text": "Vermont",
                                                    "value": "VT",
                                                  },
                                                  Object {
                                                    "text": "Virginia",
                                                    "value": "VA",
                                                  },
                                                  Object {
                                                    "text": "Washington",
                                                    "value": "WA",
                                                  },
                                                  Object {
                                                    "text": "West Virginia",
                                                    "value": "WV",
                                                  },
                                                  Object {
                                                    "text": "Wisconsin",
                                                    "value": "WI",
                                                  },
                                                  Object {
                                                    "text": "Wyoming",
                                                    "value": "WY",
                                                  },
                                                ]
                                              }
                                              getItemProps={[Function]}
                                              getMenuProps={[Function]}
                                              id="select-125-content"
                                              modifiers={
                                                Object {
                                                  "contentWidth": Object {
                                                    "enabled": true,
                                                    "fn": [Function],
                                                  },
                                                }
                                              }
                                              placement="bottom-start"
                                              wide={undefined}
                                            />
                                          }
                                          disabled={undefined}
                                          focusTriggerOnClose={true}
                                          getItemProps={[Function]}
                                          getMenuProps={[Function]}
                                          getTriggerProps={[Function]}
                                          hasArrow={true}
                                          highlightedIndex={undefined}
                                          id="select-125"
                                          isOpen={false}
                                          onClose={[Function]}
                                          onOpen={[Function]}
                                          placement="bottom"
                                          required={true}
                                          rootProps={undefined}
                                          tag="span"
                                          triggerRef={[Function]}
                                          wrapContent={false}
                                        >
                                          <Manager
                                            aria-describedby="formField-124-caption"
                                            className="glamor-11"
                                            id="select-125"
                                            tag="span"
                                          >
                                            <span
                                              aria-describedby="formField-124-caption"
                                              className="glamor-11"
                                              id="select-125"
                                            >
                                              <PopoverTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-125-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-125-content"
                                                aria-readonly={undefined}
                                                aria-required={true}
                                                disabled={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <PopoverTrigger
                                                  component="span"
                                                >
                                                  <Target
                                                    className="glamor-9"
                                                    component="span"
                                                  >
                                                    <span
                                                      className="glamor-9"
                                                    >
                                                      <SelectTrigger
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-125-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-125-content"
                                                        aria-readonly={undefined}
                                                        aria-required={true}
                                                        disabled={undefined}
                                                        isOpen={false}
                                                        item={undefined}
                                                        name="state"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        placeholder="Choose a state..."
                                                        readOnly={undefined}
                                                        role="button"
                                                        size="large"
                                                        tabIndex={0}
                                                        triggerRef={[Function]}
                                                        variant={undefined}
                                                      >
                                                        <SelectTrigger
                                                          afterItems={
                                                            Array [
                                                              <IconArrowDropdownDown
                                                                css={
                                                                  Object {
                                                                    "margin": "0.5em",
                                                                  }
                                                                }
                                                                size="1.5em"
                                                              />,
                                                              <input
                                                                name="state"
                                                                type="hidden"
                                                                value=""
                                                              />,
                                                            ]
                                                          }
                                                          aria-activedescendant={undefined}
                                                          aria-describedby="select-125-content"
                                                          aria-disabled={undefined}
                                                          aria-expanded={false}
                                                          aria-haspopup="listbox"
                                                          aria-invalid={undefined}
                                                          aria-owns="select-125-content"
                                                          aria-readonly={undefined}
                                                          aria-required={true}
                                                          control={[Function]}
                                                          controlProps={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          fauxControlRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          readOnly={undefined}
                                                          role="button"
                                                          selectedItemVariant={undefined}
                                                          size="large"
                                                          tabIndex={0}
                                                          variant={undefined}
                                                        >
                                                          <FauxControl
                                                            afterItems={
                                                              Array [
                                                                <IconArrowDropdownDown
                                                                  css={
                                                                    Object {
                                                                      "margin": "0.5em",
                                                                    }
                                                                  }
                                                                  size="1.5em"
                                                                />,
                                                                <input
                                                                  name="state"
                                                                  type="hidden"
                                                                  value=""
                                                                />,
                                                              ]
                                                            }
                                                            aria-activedescendant={undefined}
                                                            aria-describedby="select-125-content"
                                                            aria-disabled={undefined}
                                                            aria-expanded={false}
                                                            aria-haspopup="listbox"
                                                            aria-invalid={undefined}
                                                            aria-owns="select-125-content"
                                                            aria-readonly={undefined}
                                                            aria-required={true}
                                                            className="glamor-7"
                                                            control={[Function]}
                                                            controlProps={
                                                              Object {
                                                                "hasPlaceholder": true,
                                                                "variant": undefined,
                                                              }
                                                            }
                                                            disabled={undefined}
                                                            fauxControlRef={[Function]}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            readOnly={undefined}
                                                            role="button"
                                                            selectedItemVariant={undefined}
                                                            size="large"
                                                            tabIndex={0}
                                                            variant={undefined}
                                                          >
                                                            <FauxControl
                                                              aria-activedescendant={undefined}
                                                              aria-describedby="select-125-content"
                                                              aria-disabled={undefined}
                                                              aria-expanded={false}
                                                              aria-haspopup="listbox"
                                                              aria-invalid={undefined}
                                                              aria-owns="select-125-content"
                                                              aria-readonly={undefined}
                                                              aria-required={true}
                                                              className="glamor-7"
                                                              control={[Function]}
                                                              disabled={undefined}
                                                              innerRef={[Function]}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              role="button"
                                                              selectedItemVariant={undefined}
                                                              tabIndex={0}
                                                              variant={undefined}
                                                            >
                                                              <div
                                                                aria-activedescendant={undefined}
                                                                aria-describedby="select-125-content"
                                                                aria-disabled={undefined}
                                                                aria-expanded={false}
                                                                aria-haspopup="listbox"
                                                                aria-invalid={undefined}
                                                                aria-owns="select-125-content"
                                                                aria-readonly={undefined}
                                                                aria-required={true}
                                                                className="glamor-6"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <glamorous(Trigger)
                                                                  controlPropsIn={
                                                                    Object {
                                                                      "hasPlaceholder": true,
                                                                      "variant": undefined,
                                                                    }
                                                                  }
                                                                  disabled={undefined}
                                                                  hasPlaceholder={true}
                                                                  iconEnd={undefined}
                                                                  iconStart={undefined}
                                                                  innerRef={undefined}
                                                                  key="control"
                                                                  prefix={undefined}
                                                                  readOnly={undefined}
                                                                  size="large"
                                                                  suffix={undefined}
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    className="glamor-3"
                                                                    prefix={undefined}
                                                                    readOnly={undefined}
                                                                  >
                                                                    <TriggerContent>
                                                                      <span
                                                                        className="glamor-2"
                                                                      >
                                                                        Choose a state...
                                                                      </span>
                                                                    </TriggerContent>
                                                                  </div>
                                                                </glamorous(Trigger)>
                                                                <IconArrowDropdownDown
                                                                  css={
                                                                    Object {
                                                                      "margin": "0.5em",
                                                                    }
                                                                  }
                                                                  key="arrow"
                                                                  size="1.5em"
                                                                >
                                                                  <Icon
                                                                    css={
                                                                      Object {
                                                                        "margin": "0.5em",
                                                                      }
                                                                    }
                                                                    rtl={false}
                                                                    size="1.5em"
                                                                  >
                                                                    <glamorous(svg)
                                                                      aria-hidden={true}
                                                                      aria-labelledby={undefined}
                                                                      css={
                                                                        Object {
                                                                          "margin": "0.5em",
                                                                        }
                                                                      }
                                                                      role="img"
                                                                      rtl={false}
                                                                      size="1.5em"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={undefined}
                                                                        className="glamor-4"
                                                                        role="img"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <g>
                                                                          <path
                                                                            d="M12 17.5l-8-8h16z"
                                                                          />
                                                                        </g>
                                                                      </svg>
                                                                    </glamorous(svg)>
                                                                  </Icon>
                                                                </IconArrowDropdownDown>
                                                                <input
                                                                  key="input"
                                                                  name="state"
                                                                  type="hidden"
                                                                  value=""
                                                                />
                                                                <Underlay
                                                                  disabled={undefined}
                                                                  readOnly={undefined}
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    className="glamor-5"
                                                                    readOnly={undefined}
                                                                  />
                                                                </Underlay>
                                                              </div>
                                                            </FauxControl>
                                                          </FauxControl>
                                                        </SelectTrigger>
                                                      </SelectTrigger>
                                                    </span>
                                                  </Target>
                                                </PopoverTrigger>
                                              </PopoverTrigger>
                                            </span>
                                          </Manager>
                                        </Popover>
                                      </Popover>
                                    </Dropdown>
                                  </ThemeProvider>
                                </ThemeProvider>
                              </Themed(Dropdown)>
                            </ThemedComponent>
                          </Select>
                        </Select>
                      </label>
                      <glamorous(div)
                        caption="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                        id="formField-124-caption"
                        isGroup={false}
                        variant={undefined}
                      >
                        <div
                          className="glamor-18"
                          id="formField-124-caption"
                        >
                          Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        </div>
                      </glamorous(div)>
                    </div>
                  </FormField>
                </FormField>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples invalid 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <Select
              data={
                Array [
                  Object {
                    "text": "Alpha",
                    "value": "alpha",
                  },
                  Object {
                    "text": "Beta",
                    "value": "beta",
                  },
                  Object {
                    "text": "Gamma",
                    "value": "gamma",
                  },
                ]
              }
              invalid={true}
              placeholder="Select..."
              placement="bottom-start"
              size="large"
            >
              <Select
                data={
                  Array [
                    Object {
                      "text": "Alpha",
                      "value": "alpha",
                    },
                    Object {
                      "text": "Beta",
                      "value": "beta",
                    },
                    Object {
                      "text": "Gamma",
                      "value": "gamma",
                    },
                  ]
                }
                disabled={undefined}
                getItemProps={[Function]}
                getMenuProps={[Function]}
                getTriggerProps={[Function]}
                highlightedIndex={undefined}
                id="select-90"
                invalid={true}
                isOpen={false}
                modifiers={
                  Object {
                    "contentWidth": Object {
                      "enabled": true,
                      "fn": [Function],
                    },
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom-start"
              >
                <ThemedComponent
                  className="glamor-11"
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  disabled={undefined}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-90"
                  invalid={true}
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                >
                  <Themed(Dropdown)
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-90"
                    invalid={true}
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Dropdown
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alpha",
                                "value": "alpha",
                              },
                              Object {
                                "text": "Beta",
                                "value": "beta",
                              },
                              Object {
                                "text": "Gamma",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-90"
                          invalid={true}
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <Popover
                            className="glamor-11"
                            content={
                              <DropdownContent
                                data={
                                  Array [
                                    Object {
                                      "text": "Alpha",
                                      "value": "alpha",
                                    },
                                    Object {
                                      "text": "Beta",
                                      "value": "beta",
                                    },
                                    Object {
                                      "text": "Gamma",
                                      "value": "gamma",
                                    },
                                  ]
                                }
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                id="select-90-content"
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                placement="bottom-start"
                                wide={undefined}
                              />
                            }
                            disabled={undefined}
                            focusTriggerOnClose={true}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            hasArrow={true}
                            highlightedIndex={undefined}
                            id="select-90"
                            invalid={true}
                            isOpen={false}
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom"
                            triggerRef={[Function]}
                            wrapContent={false}
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-90-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              disabled={undefined}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-90"
                              invalid={true}
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              tag="span"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Manager
                                className="glamor-9"
                                id="select-90"
                                tag="span"
                              >
                                <span
                                  className="glamor-9"
                                  id="select-90"
                                >
                                  <PopoverTrigger
                                    aria-activedescendant={undefined}
                                    aria-describedby="select-90-content"
                                    aria-disabled={undefined}
                                    aria-expanded={false}
                                    aria-haspopup="listbox"
                                    aria-invalid={true}
                                    aria-owns="select-90-content"
                                    aria-readonly={undefined}
                                    aria-required={undefined}
                                    disabled={undefined}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <PopoverTrigger
                                      component="span"
                                    >
                                      <Target
                                        className="glamor-7"
                                        component="span"
                                      >
                                        <span
                                          className="glamor-7"
                                        >
                                          <SelectTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-90-content"
                                            aria-disabled={undefined}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={true}
                                            aria-owns="select-90-content"
                                            aria-readonly={undefined}
                                            aria-required={undefined}
                                            disabled={undefined}
                                            isOpen={false}
                                            item={undefined}
                                            name={undefined}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            placeholder="Select..."
                                            readOnly={undefined}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                            triggerRef={[Function]}
                                            variant={undefined}
                                          >
                                            <SelectTrigger
                                              afterItems={
                                                Array [
                                                  <IconArrowDropdownDown
                                                    css={
                                                      Object {
                                                        "margin": "0.5em",
                                                      }
                                                    }
                                                    size="1.5em"
                                                  />,
                                                  <input
                                                    name={undefined}
                                                    type="hidden"
                                                    value=""
                                                  />,
                                                ]
                                              }
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-90-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={true}
                                              aria-owns="select-90-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              control={[Function]}
                                              controlProps={
                                                Object {
                                                  "hasPlaceholder": true,
                                                  "variant": undefined,
                                                }
                                              }
                                              disabled={undefined}
                                              fauxControlRef={[Function]}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={undefined}
                                              role="button"
                                              selectedItemVariant={undefined}
                                              size="large"
                                              tabIndex={0}
                                              variant={undefined}
                                            >
                                              <FauxControl
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-90-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={true}
                                                aria-owns="select-90-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                className="glamor-5"
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": true,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={undefined}
                                                fauxControlRef={[Function]}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                readOnly={undefined}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={0}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-90-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={true}
                                                  aria-owns="select-90-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  disabled={undefined}
                                                  innerRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <div
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-90-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={true}
                                                    aria-owns="select-90-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-4"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <glamorous(Trigger)
                                                      controlPropsIn={
                                                        Object {
                                                          "hasPlaceholder": true,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={undefined}
                                                      hasPlaceholder={true}
                                                      iconEnd={undefined}
                                                      iconStart={undefined}
                                                      innerRef={undefined}
                                                      key="control"
                                                      prefix={undefined}
                                                      readOnly={undefined}
                                                      size="large"
                                                      suffix={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-1"
                                                        prefix={undefined}
                                                        readOnly={undefined}
                                                      >
                                                        <TriggerContent>
                                                          <span
                                                            className="glamor-0"
                                                          >
                                                            Select...
                                                          </span>
                                                        </TriggerContent>
                                                      </div>
                                                    </glamorous(Trigger)>
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      key="arrow"
                                                      size="1.5em"
                                                    >
                                                      <Icon
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        rtl={false}
                                                        size="1.5em"
                                                      >
                                                        <glamorous(svg)
                                                          aria-hidden={true}
                                                          aria-labelledby={undefined}
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          role="img"
                                                          rtl={false}
                                                          size="1.5em"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            className="glamor-2"
                                                            role="img"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <g>
                                                              <path
                                                                d="M12 17.5l-8-8h16z"
                                                              />
                                                            </g>
                                                          </svg>
                                                        </glamorous(svg)>
                                                      </Icon>
                                                    </IconArrowDropdownDown>
                                                    <input
                                                      key="input"
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />
                                                    <Underlay
                                                      disabled={undefined}
                                                      readOnly={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-3"
                                                        readOnly={undefined}
                                                      />
                                                    </Underlay>
                                                  </div>
                                                </FauxControl>
                                              </FauxControl>
                                            </SelectTrigger>
                                          </SelectTrigger>
                                        </span>
                                      </Target>
                                    </PopoverTrigger>
                                  </PopoverTrigger>
                                </span>
                              </Manager>
                            </Popover>
                          </Popover>
                        </Dropdown>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Dropdown)>
                </ThemedComponent>
              </Select>
            </Select>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples overflow 1`] = `
.glamor-32,
[data-glamor-32] {
  width: 100%;
}

.glamor-32 > span,
[data-glamor-32] > span {
  width: 100%;
}

.glamor-30,
[data-glamor-30] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-30 *,
[data-glamor-30] *,
.glamor-30 *::before,
[data-glamor-30] *::before,
.glamor-30 *::after,
[data-glamor-30] *::after {
  box-sizing: inherit;
}

.glamor-30 > span,
[data-glamor-30] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-26,
[data-glamor-26] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #fff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  user-select: none;
  width: 14em;
  z-index: 100;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-26 *,
[data-glamor-26] *,
.glamor-26 *::before,
[data-glamor-26] *::before,
.glamor-26 *::after,
[data-glamor-26] *::after {
  box-sizing: inherit;
}

.glamor-25,
[data-glamor-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.glamor-25 *,
[data-glamor-25] *,
.glamor-25 *::before,
[data-glamor-25] *::before,
.glamor-25 *::after,
[data-glamor-25] *::after {
  box-sizing: inherit;
}

.glamor-24,
[data-glamor-24] {
  margin: 0.5em 0;
}

.glamor-24:first-child,
[data-glamor-24]:first-child,
.glamor-24 + .glamor-24,
[data-glamor-24] + [data-glamor-24] {
  margin-top: 0;
}

.glamor-24:last-child,
[data-glamor-24]:last-child,
.glamor-24[data-simulate-lastchild],
[data-glamor-24][data-simulate-lastchild] {
  margin-bottom: 0;
}

.glamor-12,
[data-glamor-12] {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  justify-content: space-between;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-11,
[data-glamor-11] {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  flex-wrap: wrap;
  font-size: 0.875em;
  justify-content: space-between;
  padding: 0.21428571428571427em 0 0.2857142857142857em;
  white-space: normal;
  word-break: break-all;
  -webkit-flex: 1 1 auto;
  -webkit-box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-9,
[data-glamor-9] {
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.glamor-10,
[data-glamor-10] {
  color: #58606e;
  font-size: 0.75em;
  padding-top: 0.25em;
  word-break: break-word;
}

.glamor-13,
[data-glamor-13] {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.glamor-13:focus,
[data-glamor-13]:focus,
.glamor-13[data-simulate-focus],
[data-glamor-13][data-simulate-focus] {
  background-color: #f5f7fa;
  outline: 0;
}

.glamor-13:hover,
[data-glamor-13]:hover,
.glamor-13[data-simulate-hover],
[data-glamor-13][data-simulate-hover] {
  background-color: #f5f7fa;
}

.glamor-13:active,
[data-glamor-13]:active,
.glamor-13[data-simulate-active],
[data-glamor-13][data-simulate-active] {
  background-color: #ebeff5;
}

.glamor-13 [role="img"],
[data-glamor-13] [role="img"] {
  box-sizing: content-box;
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-13 [role="img"]:first-child,
[data-glamor-13] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-13 [role="img"]:last-child,
[data-glamor-13] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-37,
[data-glamor-37] {
  background-color: aliceblue;
  margin: 0 0 105px 0;
  overflow: hidden;
  padding: 25px;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "OverflowContainer": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-37"
              >
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  isOpen={true}
                  placeholder="Select..."
                  placement="bottom-start"
                  size="large"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-111"
                    isOpen={true}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-32"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-111"
                      isOpen={true}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-32"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-111"
                        isOpen={true}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-32"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-111"
                              isOpen={true}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-32"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-111-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-111"
                                isOpen={true}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-32"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-111-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-111"
                                  isOpen={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-30"
                                    id="select-111"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-30"
                                      id="select-111"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant="select-111-menu"
                                        aria-describedby="select-111-content"
                                        aria-disabled={undefined}
                                        aria-expanded={true}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-111-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant="select-111-menu"
                                                aria-describedby="select-111-content"
                                                aria-disabled={undefined}
                                                aria-expanded={true}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-111-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={true}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Select..."
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownUp
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant="select-111-menu"
                                                  aria-describedby="select-111-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={true}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-111-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownUp
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant="select-111-menu"
                                                    aria-describedby="select-111-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={true}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-111-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant="select-111-menu"
                                                      aria-describedby="select-111-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={true}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-111-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant="select-111-menu"
                                                        aria-describedby="select-111-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={true}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-111-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-1"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Select...
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownUp
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 7.5l8 8H4z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownUp>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                      <DropdownContent
                                        data={
                                          Array [
                                            Object {
                                              "text": "Alpha",
                                              "value": "alpha",
                                            },
                                            Object {
                                              "text": "Beta",
                                              "value": "beta",
                                            },
                                            Object {
                                              "text": "Gamma",
                                              "value": "gamma",
                                            },
                                          ]
                                        }
                                        getItemProps={[Function]}
                                        getMenuProps={[Function]}
                                        id="select-111-content"
                                        modifiers={
                                          Object {
                                            "contentWidth": Object {
                                              "enabled": true,
                                              "fn": [Function],
                                            },
                                          }
                                        }
                                        placement="bottom-start"
                                        wide={undefined}
                                      >
                                        <DropdownContent
                                          id="select-111-content"
                                          modifiers={
                                            Object {
                                              "contentWidth": Object {
                                                "enabled": true,
                                                "fn": [Function],
                                              },
                                            }
                                          }
                                          placement="bottom-start"
                                          wide={undefined}
                                        >
                                          <ThemedComponent
                                            className="glamor-26"
                                            id="select-111-content"
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                              }
                                            }
                                            placement="bottom-start"
                                          >
                                            <RtlPopper
                                              className="glamor-26"
                                              id="select-111-content"
                                              modifiers={
                                                Object {
                                                  "contentWidth": Object {
                                                    "enabled": true,
                                                    "fn": [Function],
                                                  },
                                                }
                                              }
                                              placement="bottom-start"
                                              theme={
                                                Object {
                                                  "DropdownContent_backgroundColor": "#fff",
                                                  "DropdownContent_borderColor": "#ebeff5",
                                                  "DropdownContent_borderRadius": "0.1875em",
                                                  "DropdownContent_boxShadow": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                                  "DropdownContent_margin": "5px",
                                                  "DropdownContent_zIndex": 100,
                                                  "DropdownIcon_fill": "#2e6fd9",
                                                  "DropdownIcon_marginHorizontal": "0.5em",
                                                  "Dropdown_backgroundColor": "#fff",
                                                  "Dropdown_borderColor": "#c8d1e0",
                                                  "Dropdown_borderColor_active": "#c8d1e0",
                                                  "Dropdown_borderColor_focus": "#c8d1e0",
                                                  "Dropdown_borderColor_hover": "#2e6fd9",
                                                  "Dropdown_borderRadius": "0.1875em",
                                                  "Dropdown_borderWidth": "1px",
                                                  "Dropdown_boxShadow_active": "0 0 0 1px #fff, 0 0 0 2px #2e6fd9",
                                                  "Dropdown_boxShadow_focus": "0 0 0 1px #fff, 0 0 0 2px #2e6fd9",
                                                  "Dropdown_color_placeholder": "#8e99ab",
                                                  "Dropdown_color_text": "#58606e",
                                                  "Dropdown_fontSize": "0.875em",
                                                  "Dropdown_fontSize_small": "0.75em",
                                                  "Dropdown_height_jumbo": "3.25em",
                                                  "Dropdown_height_large": "2.5em",
                                                  "Dropdown_height_medium": "2em",
                                                  "Dropdown_height_small": "1.5em",
                                                  "Dropdown_paddingHorizontal": "1em",
                                                  "Dropdown_paddingHorizontal_small": "0.5em",
                                                  "backgroundColor_danger": "#db2929",
                                                  "backgroundColor_danger_active": "#c71818",
                                                  "backgroundColor_danger_activeMuted": "#f79999",
                                                  "backgroundColor_danger_focus": "#db2929",
                                                  "backgroundColor_danger_hover": "#eb4d4d",
                                                  "backgroundColor_danger_muted": "#fabebe",
                                                  "backgroundColor_disabled": "#ebeff5",
                                                  "backgroundColor_input": "#fff",
                                                  "backgroundColor_link_focus": "#dde3ed",
                                                  "backgroundColor_success": "#0a8f4c",
                                                  "backgroundColor_success_active": "#06783f",
                                                  "backgroundColor_success_activeMuted": "#95f5c3",
                                                  "backgroundColor_success_focus": "#0a8f4c",
                                                  "backgroundColor_success_hover": "#10a35a",
                                                  "backgroundColor_success_muted": "#c0fadc",
                                                  "backgroundColor_warning": "#e05b2b",
                                                  "backgroundColor_warning_active": "#cf4615",
                                                  "backgroundColor_warning_activeMuted": "#fab69d",
                                                  "backgroundColor_warning_focus": "#e05b2b",
                                                  "backgroundColor_warning_hover": "#ed774c",
                                                  "backgroundColor_warning_muted": "#fcd0c0",
                                                  "borderColor": "#c8d1e0",
                                                  "borderColor_active": "#2e6fd9",
                                                  "borderColor_danger": "#db2929",
                                                  "borderColor_danger_active": "#c71818",
                                                  "borderColor_danger_focus": "#c71818",
                                                  "borderColor_danger_hover": "#c71818",
                                                  "borderColor_danger_muted": "#f27474",
                                                  "borderColor_focus": "#2e6fd9",
                                                  "borderColor_hover": "#2e6fd9",
                                                  "borderColor_success": "#10a35a",
                                                  "borderColor_success_active": "#0a8f4c",
                                                  "borderColor_success_focus": "#0a8f4c",
                                                  "borderColor_success_hover": "#0a8f4c",
                                                  "borderColor_success_muted": "#67eba7",
                                                  "borderColor_warning": "#e05b2b",
                                                  "borderColor_warning_active": "#cf4615",
                                                  "borderColor_warning_focus": "#cf4615",
                                                  "borderColor_warning_hover": "#cf4615",
                                                  "borderColor_warning_muted": "#f59776",
                                                  "borderRadius_1": "0.1875em",
                                                  "breakpoint_medium": 768,
                                                  "breakpoint_narrow": 512,
                                                  "breakpoint_wide": 1024,
                                                  "color_black": "#1d1f24",
                                                  "color_caption": "#58606e",
                                                  "color_gray_10": "#f5f7fa",
                                                  "color_gray_100": "#333840",
                                                  "color_gray_20": "#ebeff5",
                                                  "color_gray_30": "#dde3ed",
                                                  "color_gray_40": "#c8d1e0",
                                                  "color_gray_50": "#afbacc",
                                                  "color_gray_60": "#8e99ab",
                                                  "color_gray_70": "#707a8a",
                                                  "color_gray_80": "#58606e",
                                                  "color_gray_90": "#434a54",
                                                  "color_placeholder": "#8e99ab",
                                                  "color_text": "#333840",
                                                  "color_text_danger": "#db2929",
                                                  "color_text_danger_active": "#c71818",
                                                  "color_text_danger_focus": "#db2929",
                                                  "color_text_danger_hover": "#eb4d4d",
                                                  "color_text_disabled": "#afbacc",
                                                  "color_text_ondanger": "#fff",
                                                  "color_text_onprimary": "#fff",
                                                  "color_text_onsuccess": "#fff",
                                                  "color_text_onwarning": "#fff",
                                                  "color_text_primary": "#2e6fd9",
                                                  "color_text_primary_active": "#1f5dc2",
                                                  "color_text_primary_focus": "#2e6fd9",
                                                  "color_text_primary_hover": "#4a89e8",
                                                  "color_text_success": "#06783f",
                                                  "color_text_success_active": "#046132",
                                                  "color_text_success_focus": "#06783f",
                                                  "color_text_success_hover": "#0a8f4c",
                                                  "color_text_warning": "#cf4615",
                                                  "color_text_warning_active": "#bd3909",
                                                  "color_text_warning_focus": "#cf4615",
                                                  "color_text_warning_hover": "#e05b2b",
                                                  "color_theme_10": "#e6eefc",
                                                  "color_theme_100": "#0f397d",
                                                  "color_theme_20": "#c2dbfc",
                                                  "color_theme_30": "#9dc2fa",
                                                  "color_theme_40": "#72a5f2",
                                                  "color_theme_50": "#4a89e8",
                                                  "color_theme_60": "#2e6fd9",
                                                  "color_theme_70": "#1f5dc2",
                                                  "color_theme_80": "#164ea8",
                                                  "color_theme_90": "#114091",
                                                  "color_white": "#fff",
                                                  "direction": "ltr",
                                                  "fontFamily": "Open Sans",
                                                  "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                                                  "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                                                  "fontSize_base": 16,
                                                  "fontSize_h1": "2.125em",
                                                  "fontSize_h2": "1.75em",
                                                  "fontSize_h3": "1.375em",
                                                  "fontSize_h4": "1.125em",
                                                  "fontSize_h5": "0.875em",
                                                  "fontSize_h6": "0.875em",
                                                  "fontSize_mouse": "0.6875em",
                                                  "fontSize_prose": "1em",
                                                  "fontSize_ui": "0.875em",
                                                  "fontWeight_bold": 700,
                                                  "fontWeight_extraBold": 800,
                                                  "fontWeight_regular": 400,
                                                  "fontWeight_semiBold": 600,
                                                  "lineHeight": 1.25,
                                                  "lineHeight_prose": 1.5,
                                                  "shadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                                                  "shadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                                  "shadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                                                  "shadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                                                  "shadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                                                  "size_jumbo": "3.25em",
                                                  "size_large": "2.5em",
                                                  "size_medium": "2em",
                                                  "size_small": "1.5em",
                                                  "space_inline_lg": "1.5em",
                                                  "space_inline_md": "1em",
                                                  "space_inline_sm": "0.5em",
                                                  "space_inline_xl": "2em",
                                                  "space_inline_xs": "0.25em",
                                                  "space_inline_xxl": "4em",
                                                  "space_inline_xxs": "0.125em",
                                                  "space_inset_lg": "1.5em",
                                                  "space_inset_md": "1em",
                                                  "space_inset_sm": "0.5em",
                                                  "space_stack_lg": "1.5em",
                                                  "space_stack_md": "1em",
                                                  "space_stack_sm": "0.5em",
                                                  "space_stack_xl": "2em",
                                                  "space_stack_xs": "0.25em",
                                                  "space_stack_xxl": "4em",
                                                  "space_stack_xxs": "0.125em",
                                                  "zIndex_100": 100,
                                                  "zIndex_1600": 1600,
                                                  "zIndex_200": 200,
                                                  "zIndex_400": 400,
                                                  "zIndex_800": 800,
                                                }
                                              }
                                            >
                                              <Popper
                                                className="glamor-26"
                                                component="div"
                                                eventsEnabled={true}
                                                id="select-111-content"
                                                modifiers={
                                                  Object {
                                                    "contentWidth": Object {
                                                      "enabled": true,
                                                      "fn": [Function],
                                                    },
                                                  }
                                                }
                                                placement="bottom-start"
                                              >
                                                <div
                                                  className="glamor-26"
                                                  data-placement={undefined}
                                                  data-x-out-of-boundaries={undefined}
                                                  id="select-111-content"
                                                  style={
                                                    Object {
                                                      "opacity": 0,
                                                      "pointerEvents": "none",
                                                      "position": "absolute",
                                                    }
                                                  }
                                                >
                                                  <Menu
                                                    data={
                                                      Array [
                                                        Object {
                                                          "text": "Alpha",
                                                          "value": "alpha",
                                                        },
                                                        Object {
                                                          "text": "Beta",
                                                          "value": "beta",
                                                        },
                                                        Object {
                                                          "text": "Gamma",
                                                          "value": "gamma",
                                                        },
                                                      ]
                                                    }
                                                    getItemProps={[Function]}
                                                    id="select-111-menu"
                                                    role="listbox"
                                                  >
                                                    <Menu
                                                      id="select-111-menu"
                                                      role="listbox"
                                                    >
                                                      <div
                                                        className="glamor-25"
                                                        id="select-111-menu"
                                                        role="listbox"
                                                      >
                                                        <MenuGroup
                                                          key="0"
                                                          title={undefined}
                                                        >
                                                          <MenuGroup>
                                                            <div
                                                              className="glamor-24"
                                                            >
                                                              <MenuItem
                                                                aria-disabled={undefined}
                                                                aria-selected={false}
                                                                id="select-111-item-0"
                                                                isHighlighted={false}
                                                                item={
                                                                  Object {
                                                                    "text": "Alpha",
                                                                    "value": "alpha",
                                                                  }
                                                                }
                                                                key="0"
                                                                onClick={[Function]}
                                                                role="option"
                                                                tabIndex={null}
                                                                value="alpha"
                                                              >
                                                                <MenuItem
                                                                  aria-disabled={undefined}
                                                                  aria-selected={false}
                                                                  disabled={undefined}
                                                                  id="select-111-item-0"
                                                                  isHighlighted={false}
                                                                  item={
                                                                    Object {
                                                                      "text": "Alpha",
                                                                      "value": "alpha",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="option"
                                                                  tabIndex={null}
                                                                  value="alpha"
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    aria-disabled={undefined}
                                                                    aria-selected={false}
                                                                    className="glamor-13"
                                                                    id="select-111-item-0"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="option"
                                                                    tabIndex={null}
                                                                  >
                                                                    <glamorous(span)>
                                                                      <span
                                                                        className="glamor-12"
                                                                      >
                                                                        <glamorous(span)>
                                                                          <span
                                                                            className="glamor-11"
                                                                          >
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-9"
                                                                              >
                                                                                Alpha
                                                                              </span>
                                                                            </glamorous(span)>
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-10"
                                                                              />
                                                                            </glamorous(span)>
                                                                          </span>
                                                                        </glamorous(span)>
                                                                      </span>
                                                                    </glamorous(span)>
                                                                  </div>
                                                                </MenuItem>
                                                              </MenuItem>
                                                              <MenuItem
                                                                aria-disabled={undefined}
                                                                aria-selected={false}
                                                                id="select-111-item-1"
                                                                isHighlighted={false}
                                                                item={
                                                                  Object {
                                                                    "text": "Beta",
                                                                    "value": "beta",
                                                                  }
                                                                }
                                                                key="1"
                                                                onClick={[Function]}
                                                                role="option"
                                                                tabIndex={null}
                                                                value="beta"
                                                              >
                                                                <MenuItem
                                                                  aria-disabled={undefined}
                                                                  aria-selected={false}
                                                                  disabled={undefined}
                                                                  id="select-111-item-1"
                                                                  isHighlighted={false}
                                                                  item={
                                                                    Object {
                                                                      "text": "Beta",
                                                                      "value": "beta",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="option"
                                                                  tabIndex={null}
                                                                  value="beta"
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    aria-disabled={undefined}
                                                                    aria-selected={false}
                                                                    className="glamor-13"
                                                                    id="select-111-item-1"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="option"
                                                                    tabIndex={null}
                                                                  >
                                                                    <glamorous(span)>
                                                                      <span
                                                                        className="glamor-12"
                                                                      >
                                                                        <glamorous(span)>
                                                                          <span
                                                                            className="glamor-11"
                                                                          >
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-9"
                                                                              >
                                                                                Beta
                                                                              </span>
                                                                            </glamorous(span)>
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-10"
                                                                              />
                                                                            </glamorous(span)>
                                                                          </span>
                                                                        </glamorous(span)>
                                                                      </span>
                                                                    </glamorous(span)>
                                                                  </div>
                                                                </MenuItem>
                                                              </MenuItem>
                                                              <MenuItem
                                                                aria-disabled={undefined}
                                                                aria-selected={false}
                                                                id="select-111-item-2"
                                                                isHighlighted={false}
                                                                item={
                                                                  Object {
                                                                    "text": "Gamma",
                                                                    "value": "gamma",
                                                                  }
                                                                }
                                                                key="2"
                                                                onClick={[Function]}
                                                                role="option"
                                                                tabIndex={null}
                                                                value="gamma"
                                                              >
                                                                <MenuItem
                                                                  aria-disabled={undefined}
                                                                  aria-selected={false}
                                                                  disabled={undefined}
                                                                  id="select-111-item-2"
                                                                  isHighlighted={false}
                                                                  item={
                                                                    Object {
                                                                      "text": "Gamma",
                                                                      "value": "gamma",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="option"
                                                                  tabIndex={null}
                                                                  value="gamma"
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    aria-disabled={undefined}
                                                                    aria-selected={false}
                                                                    className="glamor-13"
                                                                    id="select-111-item-2"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="option"
                                                                    tabIndex={null}
                                                                  >
                                                                    <glamorous(span)>
                                                                      <span
                                                                        className="glamor-12"
                                                                      >
                                                                        <glamorous(span)>
                                                                          <span
                                                                            className="glamor-11"
                                                                          >
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-9"
                                                                              >
                                                                                Gamma
                                                                              </span>
                                                                            </glamorous(span)>
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-10"
                                                                              />
                                                                            </glamorous(span)>
                                                                          </span>
                                                                        </glamorous(span)>
                                                                      </span>
                                                                    </glamorous(span)>
                                                                  </div>
                                                                </MenuItem>
                                                              </MenuItem>
                                                            </div>
                                                          </MenuGroup>
                                                        </MenuGroup>
                                                      </div>
                                                    </Menu>
                                                  </Menu>
                                                </div>
                                              </Popper>
                                            </RtlPopper>
                                          </ThemedComponent>
                                        </DropdownContent>
                                      </DropdownContent>
                                      <EventListener
                                        listeners={
                                          Array [
                                            Object {
                                              "event": "click",
                                              "handler": [Function],
                                              "options": true,
                                              "target": "document",
                                            },
                                            Object {
                                              "event": "keydown",
                                              "handler": [Function],
                                              "options": true,
                                              "target": "document",
                                            },
                                          ]
                                        }
                                      />
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples placeholder 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alabama",
                "value": "AL",
              },
              Object {
                "text": "Alaska",
                "value": "AK",
              },
              Object {
                "text": "Arizona",
                "value": "AZ",
              },
              Object {
                "text": "Arkansas",
                "value": "AR",
              },
              Object {
                "text": "California",
                "value": "CA",
              },
              Object {
                "text": "Colorado",
                "value": "CO",
              },
              Object {
                "text": "Connecticut",
                "value": "CT",
              },
              Object {
                "text": "Delaware",
                "value": "DE",
              },
              Object {
                "text": "Florida",
                "value": "FL",
              },
              Object {
                "text": "Georgia",
                "value": "GA",
              },
              Object {
                "text": "Hawaii",
                "value": "HI",
              },
              Object {
                "text": "Idaho",
                "value": "ID",
              },
              Object {
                "text": "Illinois",
                "value": "IL",
              },
              Object {
                "text": "Indiana",
                "value": "IN",
              },
              Object {
                "text": "Iowa",
                "value": "IA",
              },
              Object {
                "text": "Kansas",
                "value": "KS",
              },
              Object {
                "text": "Kentucky",
                "value": "KY",
              },
              Object {
                "text": "Louisiana",
                "value": "LA",
              },
              Object {
                "text": "Maine",
                "value": "ME",
              },
              Object {
                "text": "Maryland",
                "value": "MD",
              },
              Object {
                "text": "Massachusetts",
                "value": "MA",
              },
              Object {
                "text": "Michigan",
                "value": "MI",
              },
              Object {
                "text": "Minnesota",
                "value": "MN",
              },
              Object {
                "text": "Mississippi",
                "value": "MS",
              },
              Object {
                "text": "Missouri",
                "value": "MO",
              },
              Object {
                "text": "Montana",
                "value": "MT",
              },
              Object {
                "text": "Nebraska",
                "value": "NE",
              },
              Object {
                "text": "Nevada",
                "value": "NV",
              },
              Object {
                "text": "New Hampshire",
                "value": "NH",
              },
              Object {
                "text": "New Jersey",
                "value": "NJ",
              },
              Object {
                "text": "New Mexico",
                "value": "NM",
              },
              Object {
                "text": "New York",
                "value": "NY",
              },
              Object {
                "text": "North Carolina",
                "value": "NC",
              },
              Object {
                "text": "North Dakota",
                "value": "ND",
              },
              Object {
                "text": "Ohio",
                "value": "OH",
              },
              Object {
                "text": "Oklahoma",
                "value": "OK",
              },
              Object {
                "text": "Oregon",
                "value": "OR",
              },
              Object {
                "text": "Pennsylvania",
                "value": "PA",
              },
              Object {
                "text": "Rhode Island",
                "value": "RI",
              },
              Object {
                "text": "South Carolina",
                "value": "SC",
              },
              Object {
                "text": "South Dakota",
                "value": "SD",
              },
              Object {
                "text": "Tennessee",
                "value": "TN",
              },
              Object {
                "text": "Texas",
                "value": "TX",
              },
              Object {
                "text": "Utah",
                "value": "UT",
              },
              Object {
                "text": "Vermont",
                "value": "VT",
              },
              Object {
                "text": "Virginia",
                "value": "VA",
              },
              Object {
                "text": "Washington",
                "value": "WA",
              },
              Object {
                "text": "West Virginia",
                "value": "WV",
              },
              Object {
                "text": "Wisconsin",
                "value": "WI",
              },
              Object {
                "text": "Wyoming",
                "value": "WY",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <Select
              data={
                Array [
                  Object {
                    "text": "Alabama",
                    "value": "AL",
                  },
                  Object {
                    "text": "Alaska",
                    "value": "AK",
                  },
                  Object {
                    "text": "Arizona",
                    "value": "AZ",
                  },
                  Object {
                    "text": "Arkansas",
                    "value": "AR",
                  },
                  Object {
                    "text": "California",
                    "value": "CA",
                  },
                  Object {
                    "text": "Colorado",
                    "value": "CO",
                  },
                  Object {
                    "text": "Connecticut",
                    "value": "CT",
                  },
                  Object {
                    "text": "Delaware",
                    "value": "DE",
                  },
                  Object {
                    "text": "Florida",
                    "value": "FL",
                  },
                  Object {
                    "text": "Georgia",
                    "value": "GA",
                  },
                  Object {
                    "text": "Hawaii",
                    "value": "HI",
                  },
                  Object {
                    "text": "Idaho",
                    "value": "ID",
                  },
                  Object {
                    "text": "Illinois",
                    "value": "IL",
                  },
                  Object {
                    "text": "Indiana",
                    "value": "IN",
                  },
                  Object {
                    "text": "Iowa",
                    "value": "IA",
                  },
                  Object {
                    "text": "Kansas",
                    "value": "KS",
                  },
                  Object {
                    "text": "Kentucky",
                    "value": "KY",
                  },
                  Object {
                    "text": "Louisiana",
                    "value": "LA",
                  },
                  Object {
                    "text": "Maine",
                    "value": "ME",
                  },
                  Object {
                    "text": "Maryland",
                    "value": "MD",
                  },
                  Object {
                    "text": "Massachusetts",
                    "value": "MA",
                  },
                  Object {
                    "text": "Michigan",
                    "value": "MI",
                  },
                  Object {
                    "text": "Minnesota",
                    "value": "MN",
                  },
                  Object {
                    "text": "Mississippi",
                    "value": "MS",
                  },
                  Object {
                    "text": "Missouri",
                    "value": "MO",
                  },
                  Object {
                    "text": "Montana",
                    "value": "MT",
                  },
                  Object {
                    "text": "Nebraska",
                    "value": "NE",
                  },
                  Object {
                    "text": "Nevada",
                    "value": "NV",
                  },
                  Object {
                    "text": "New Hampshire",
                    "value": "NH",
                  },
                  Object {
                    "text": "New Jersey",
                    "value": "NJ",
                  },
                  Object {
                    "text": "New Mexico",
                    "value": "NM",
                  },
                  Object {
                    "text": "New York",
                    "value": "NY",
                  },
                  Object {
                    "text": "North Carolina",
                    "value": "NC",
                  },
                  Object {
                    "text": "North Dakota",
                    "value": "ND",
                  },
                  Object {
                    "text": "Ohio",
                    "value": "OH",
                  },
                  Object {
                    "text": "Oklahoma",
                    "value": "OK",
                  },
                  Object {
                    "text": "Oregon",
                    "value": "OR",
                  },
                  Object {
                    "text": "Pennsylvania",
                    "value": "PA",
                  },
                  Object {
                    "text": "Rhode Island",
                    "value": "RI",
                  },
                  Object {
                    "text": "South Carolina",
                    "value": "SC",
                  },
                  Object {
                    "text": "South Dakota",
                    "value": "SD",
                  },
                  Object {
                    "text": "Tennessee",
                    "value": "TN",
                  },
                  Object {
                    "text": "Texas",
                    "value": "TX",
                  },
                  Object {
                    "text": "Utah",
                    "value": "UT",
                  },
                  Object {
                    "text": "Vermont",
                    "value": "VT",
                  },
                  Object {
                    "text": "Virginia",
                    "value": "VA",
                  },
                  Object {
                    "text": "Washington",
                    "value": "WA",
                  },
                  Object {
                    "text": "West Virginia",
                    "value": "WV",
                  },
                  Object {
                    "text": "Wisconsin",
                    "value": "WI",
                  },
                  Object {
                    "text": "Wyoming",
                    "value": "WY",
                  },
                ]
              }
              placeholder="Choose a state..."
              placement="bottom-start"
              size="large"
            >
              <Select
                data={
                  Array [
                    Object {
                      "text": "Alabama",
                      "value": "AL",
                    },
                    Object {
                      "text": "Alaska",
                      "value": "AK",
                    },
                    Object {
                      "text": "Arizona",
                      "value": "AZ",
                    },
                    Object {
                      "text": "Arkansas",
                      "value": "AR",
                    },
                    Object {
                      "text": "California",
                      "value": "CA",
                    },
                    Object {
                      "text": "Colorado",
                      "value": "CO",
                    },
                    Object {
                      "text": "Connecticut",
                      "value": "CT",
                    },
                    Object {
                      "text": "Delaware",
                      "value": "DE",
                    },
                    Object {
                      "text": "Florida",
                      "value": "FL",
                    },
                    Object {
                      "text": "Georgia",
                      "value": "GA",
                    },
                    Object {
                      "text": "Hawaii",
                      "value": "HI",
                    },
                    Object {
                      "text": "Idaho",
                      "value": "ID",
                    },
                    Object {
                      "text": "Illinois",
                      "value": "IL",
                    },
                    Object {
                      "text": "Indiana",
                      "value": "IN",
                    },
                    Object {
                      "text": "Iowa",
                      "value": "IA",
                    },
                    Object {
                      "text": "Kansas",
                      "value": "KS",
                    },
                    Object {
                      "text": "Kentucky",
                      "value": "KY",
                    },
                    Object {
                      "text": "Louisiana",
                      "value": "LA",
                    },
                    Object {
                      "text": "Maine",
                      "value": "ME",
                    },
                    Object {
                      "text": "Maryland",
                      "value": "MD",
                    },
                    Object {
                      "text": "Massachusetts",
                      "value": "MA",
                    },
                    Object {
                      "text": "Michigan",
                      "value": "MI",
                    },
                    Object {
                      "text": "Minnesota",
                      "value": "MN",
                    },
                    Object {
                      "text": "Mississippi",
                      "value": "MS",
                    },
                    Object {
                      "text": "Missouri",
                      "value": "MO",
                    },
                    Object {
                      "text": "Montana",
                      "value": "MT",
                    },
                    Object {
                      "text": "Nebraska",
                      "value": "NE",
                    },
                    Object {
                      "text": "Nevada",
                      "value": "NV",
                    },
                    Object {
                      "text": "New Hampshire",
                      "value": "NH",
                    },
                    Object {
                      "text": "New Jersey",
                      "value": "NJ",
                    },
                    Object {
                      "text": "New Mexico",
                      "value": "NM",
                    },
                    Object {
                      "text": "New York",
                      "value": "NY",
                    },
                    Object {
                      "text": "North Carolina",
                      "value": "NC",
                    },
                    Object {
                      "text": "North Dakota",
                      "value": "ND",
                    },
                    Object {
                      "text": "Ohio",
                      "value": "OH",
                    },
                    Object {
                      "text": "Oklahoma",
                      "value": "OK",
                    },
                    Object {
                      "text": "Oregon",
                      "value": "OR",
                    },
                    Object {
                      "text": "Pennsylvania",
                      "value": "PA",
                    },
                    Object {
                      "text": "Rhode Island",
                      "value": "RI",
                    },
                    Object {
                      "text": "South Carolina",
                      "value": "SC",
                    },
                    Object {
                      "text": "South Dakota",
                      "value": "SD",
                    },
                    Object {
                      "text": "Tennessee",
                      "value": "TN",
                    },
                    Object {
                      "text": "Texas",
                      "value": "TX",
                    },
                    Object {
                      "text": "Utah",
                      "value": "UT",
                    },
                    Object {
                      "text": "Vermont",
                      "value": "VT",
                    },
                    Object {
                      "text": "Virginia",
                      "value": "VA",
                    },
                    Object {
                      "text": "Washington",
                      "value": "WA",
                    },
                    Object {
                      "text": "West Virginia",
                      "value": "WV",
                    },
                    Object {
                      "text": "Wisconsin",
                      "value": "WI",
                    },
                    Object {
                      "text": "Wyoming",
                      "value": "WY",
                    },
                  ]
                }
                disabled={undefined}
                getItemProps={[Function]}
                getMenuProps={[Function]}
                getTriggerProps={[Function]}
                highlightedIndex={undefined}
                id="select-82"
                isOpen={false}
                modifiers={
                  Object {
                    "contentWidth": Object {
                      "enabled": true,
                      "fn": [Function],
                    },
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom-start"
              >
                <ThemedComponent
                  className="glamor-11"
                  data={
                    Array [
                      Object {
                        "text": "Alabama",
                        "value": "AL",
                      },
                      Object {
                        "text": "Alaska",
                        "value": "AK",
                      },
                      Object {
                        "text": "Arizona",
                        "value": "AZ",
                      },
                      Object {
                        "text": "Arkansas",
                        "value": "AR",
                      },
                      Object {
                        "text": "California",
                        "value": "CA",
                      },
                      Object {
                        "text": "Colorado",
                        "value": "CO",
                      },
                      Object {
                        "text": "Connecticut",
                        "value": "CT",
                      },
                      Object {
                        "text": "Delaware",
                        "value": "DE",
                      },
                      Object {
                        "text": "Florida",
                        "value": "FL",
                      },
                      Object {
                        "text": "Georgia",
                        "value": "GA",
                      },
                      Object {
                        "text": "Hawaii",
                        "value": "HI",
                      },
                      Object {
                        "text": "Idaho",
                        "value": "ID",
                      },
                      Object {
                        "text": "Illinois",
                        "value": "IL",
                      },
                      Object {
                        "text": "Indiana",
                        "value": "IN",
                      },
                      Object {
                        "text": "Iowa",
                        "value": "IA",
                      },
                      Object {
                        "text": "Kansas",
                        "value": "KS",
                      },
                      Object {
                        "text": "Kentucky",
                        "value": "KY",
                      },
                      Object {
                        "text": "Louisiana",
                        "value": "LA",
                      },
                      Object {
                        "text": "Maine",
                        "value": "ME",
                      },
                      Object {
                        "text": "Maryland",
                        "value": "MD",
                      },
                      Object {
                        "text": "Massachusetts",
                        "value": "MA",
                      },
                      Object {
                        "text": "Michigan",
                        "value": "MI",
                      },
                      Object {
                        "text": "Minnesota",
                        "value": "MN",
                      },
                      Object {
                        "text": "Mississippi",
                        "value": "MS",
                      },
                      Object {
                        "text": "Missouri",
                        "value": "MO",
                      },
                      Object {
                        "text": "Montana",
                        "value": "MT",
                      },
                      Object {
                        "text": "Nebraska",
                        "value": "NE",
                      },
                      Object {
                        "text": "Nevada",
                        "value": "NV",
                      },
                      Object {
                        "text": "New Hampshire",
                        "value": "NH",
                      },
                      Object {
                        "text": "New Jersey",
                        "value": "NJ",
                      },
                      Object {
                        "text": "New Mexico",
                        "value": "NM",
                      },
                      Object {
                        "text": "New York",
                        "value": "NY",
                      },
                      Object {
                        "text": "North Carolina",
                        "value": "NC",
                      },
                      Object {
                        "text": "North Dakota",
                        "value": "ND",
                      },
                      Object {
                        "text": "Ohio",
                        "value": "OH",
                      },
                      Object {
                        "text": "Oklahoma",
                        "value": "OK",
                      },
                      Object {
                        "text": "Oregon",
                        "value": "OR",
                      },
                      Object {
                        "text": "Pennsylvania",
                        "value": "PA",
                      },
                      Object {
                        "text": "Rhode Island",
                        "value": "RI",
                      },
                      Object {
                        "text": "South Carolina",
                        "value": "SC",
                      },
                      Object {
                        "text": "South Dakota",
                        "value": "SD",
                      },
                      Object {
                        "text": "Tennessee",
                        "value": "TN",
                      },
                      Object {
                        "text": "Texas",
                        "value": "TX",
                      },
                      Object {
                        "text": "Utah",
                        "value": "UT",
                      },
                      Object {
                        "text": "Vermont",
                        "value": "VT",
                      },
                      Object {
                        "text": "Virginia",
                        "value": "VA",
                      },
                      Object {
                        "text": "Washington",
                        "value": "WA",
                      },
                      Object {
                        "text": "West Virginia",
                        "value": "WV",
                      },
                      Object {
                        "text": "Wisconsin",
                        "value": "WI",
                      },
                      Object {
                        "text": "Wyoming",
                        "value": "WY",
                      },
                    ]
                  }
                  disabled={undefined}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-82"
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                >
                  <Themed(Dropdown)
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "text": "Alabama",
                          "value": "AL",
                        },
                        Object {
                          "text": "Alaska",
                          "value": "AK",
                        },
                        Object {
                          "text": "Arizona",
                          "value": "AZ",
                        },
                        Object {
                          "text": "Arkansas",
                          "value": "AR",
                        },
                        Object {
                          "text": "California",
                          "value": "CA",
                        },
                        Object {
                          "text": "Colorado",
                          "value": "CO",
                        },
                        Object {
                          "text": "Connecticut",
                          "value": "CT",
                        },
                        Object {
                          "text": "Delaware",
                          "value": "DE",
                        },
                        Object {
                          "text": "Florida",
                          "value": "FL",
                        },
                        Object {
                          "text": "Georgia",
                          "value": "GA",
                        },
                        Object {
                          "text": "Hawaii",
                          "value": "HI",
                        },
                        Object {
                          "text": "Idaho",
                          "value": "ID",
                        },
                        Object {
                          "text": "Illinois",
                          "value": "IL",
                        },
                        Object {
                          "text": "Indiana",
                          "value": "IN",
                        },
                        Object {
                          "text": "Iowa",
                          "value": "IA",
                        },
                        Object {
                          "text": "Kansas",
                          "value": "KS",
                        },
                        Object {
                          "text": "Kentucky",
                          "value": "KY",
                        },
                        Object {
                          "text": "Louisiana",
                          "value": "LA",
                        },
                        Object {
                          "text": "Maine",
                          "value": "ME",
                        },
                        Object {
                          "text": "Maryland",
                          "value": "MD",
                        },
                        Object {
                          "text": "Massachusetts",
                          "value": "MA",
                        },
                        Object {
                          "text": "Michigan",
                          "value": "MI",
                        },
                        Object {
                          "text": "Minnesota",
                          "value": "MN",
                        },
                        Object {
                          "text": "Mississippi",
                          "value": "MS",
                        },
                        Object {
                          "text": "Missouri",
                          "value": "MO",
                        },
                        Object {
                          "text": "Montana",
                          "value": "MT",
                        },
                        Object {
                          "text": "Nebraska",
                          "value": "NE",
                        },
                        Object {
                          "text": "Nevada",
                          "value": "NV",
                        },
                        Object {
                          "text": "New Hampshire",
                          "value": "NH",
                        },
                        Object {
                          "text": "New Jersey",
                          "value": "NJ",
                        },
                        Object {
                          "text": "New Mexico",
                          "value": "NM",
                        },
                        Object {
                          "text": "New York",
                          "value": "NY",
                        },
                        Object {
                          "text": "North Carolina",
                          "value": "NC",
                        },
                        Object {
                          "text": "North Dakota",
                          "value": "ND",
                        },
                        Object {
                          "text": "Ohio",
                          "value": "OH",
                        },
                        Object {
                          "text": "Oklahoma",
                          "value": "OK",
                        },
                        Object {
                          "text": "Oregon",
                          "value": "OR",
                        },
                        Object {
                          "text": "Pennsylvania",
                          "value": "PA",
                        },
                        Object {
                          "text": "Rhode Island",
                          "value": "RI",
                        },
                        Object {
                          "text": "South Carolina",
                          "value": "SC",
                        },
                        Object {
                          "text": "South Dakota",
                          "value": "SD",
                        },
                        Object {
                          "text": "Tennessee",
                          "value": "TN",
                        },
                        Object {
                          "text": "Texas",
                          "value": "TX",
                        },
                        Object {
                          "text": "Utah",
                          "value": "UT",
                        },
                        Object {
                          "text": "Vermont",
                          "value": "VT",
                        },
                        Object {
                          "text": "Virginia",
                          "value": "VA",
                        },
                        Object {
                          "text": "Washington",
                          "value": "WA",
                        },
                        Object {
                          "text": "West Virginia",
                          "value": "WV",
                        },
                        Object {
                          "text": "Wisconsin",
                          "value": "WI",
                        },
                        Object {
                          "text": "Wyoming",
                          "value": "WY",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-82"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Dropdown
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alabama",
                                "value": "AL",
                              },
                              Object {
                                "text": "Alaska",
                                "value": "AK",
                              },
                              Object {
                                "text": "Arizona",
                                "value": "AZ",
                              },
                              Object {
                                "text": "Arkansas",
                                "value": "AR",
                              },
                              Object {
                                "text": "California",
                                "value": "CA",
                              },
                              Object {
                                "text": "Colorado",
                                "value": "CO",
                              },
                              Object {
                                "text": "Connecticut",
                                "value": "CT",
                              },
                              Object {
                                "text": "Delaware",
                                "value": "DE",
                              },
                              Object {
                                "text": "Florida",
                                "value": "FL",
                              },
                              Object {
                                "text": "Georgia",
                                "value": "GA",
                              },
                              Object {
                                "text": "Hawaii",
                                "value": "HI",
                              },
                              Object {
                                "text": "Idaho",
                                "value": "ID",
                              },
                              Object {
                                "text": "Illinois",
                                "value": "IL",
                              },
                              Object {
                                "text": "Indiana",
                                "value": "IN",
                              },
                              Object {
                                "text": "Iowa",
                                "value": "IA",
                              },
                              Object {
                                "text": "Kansas",
                                "value": "KS",
                              },
                              Object {
                                "text": "Kentucky",
                                "value": "KY",
                              },
                              Object {
                                "text": "Louisiana",
                                "value": "LA",
                              },
                              Object {
                                "text": "Maine",
                                "value": "ME",
                              },
                              Object {
                                "text": "Maryland",
                                "value": "MD",
                              },
                              Object {
                                "text": "Massachusetts",
                                "value": "MA",
                              },
                              Object {
                                "text": "Michigan",
                                "value": "MI",
                              },
                              Object {
                                "text": "Minnesota",
                                "value": "MN",
                              },
                              Object {
                                "text": "Mississippi",
                                "value": "MS",
                              },
                              Object {
                                "text": "Missouri",
                                "value": "MO",
                              },
                              Object {
                                "text": "Montana",
                                "value": "MT",
                              },
                              Object {
                                "text": "Nebraska",
                                "value": "NE",
                              },
                              Object {
                                "text": "Nevada",
                                "value": "NV",
                              },
                              Object {
                                "text": "New Hampshire",
                                "value": "NH",
                              },
                              Object {
                                "text": "New Jersey",
                                "value": "NJ",
                              },
                              Object {
                                "text": "New Mexico",
                                "value": "NM",
                              },
                              Object {
                                "text": "New York",
                                "value": "NY",
                              },
                              Object {
                                "text": "North Carolina",
                                "value": "NC",
                              },
                              Object {
                                "text": "North Dakota",
                                "value": "ND",
                              },
                              Object {
                                "text": "Ohio",
                                "value": "OH",
                              },
                              Object {
                                "text": "Oklahoma",
                                "value": "OK",
                              },
                              Object {
                                "text": "Oregon",
                                "value": "OR",
                              },
                              Object {
                                "text": "Pennsylvania",
                                "value": "PA",
                              },
                              Object {
                                "text": "Rhode Island",
                                "value": "RI",
                              },
                              Object {
                                "text": "South Carolina",
                                "value": "SC",
                              },
                              Object {
                                "text": "South Dakota",
                                "value": "SD",
                              },
                              Object {
                                "text": "Tennessee",
                                "value": "TN",
                              },
                              Object {
                                "text": "Texas",
                                "value": "TX",
                              },
                              Object {
                                "text": "Utah",
                                "value": "UT",
                              },
                              Object {
                                "text": "Vermont",
                                "value": "VT",
                              },
                              Object {
                                "text": "Virginia",
                                "value": "VA",
                              },
                              Object {
                                "text": "Washington",
                                "value": "WA",
                              },
                              Object {
                                "text": "West Virginia",
                                "value": "WV",
                              },
                              Object {
                                "text": "Wisconsin",
                                "value": "WI",
                              },
                              Object {
                                "text": "Wyoming",
                                "value": "WY",
                              },
                            ]
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-82"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <Popover
                            className="glamor-11"
                            content={
                              <DropdownContent
                                data={
                                  Array [
                                    Object {
                                      "text": "Alabama",
                                      "value": "AL",
                                    },
                                    Object {
                                      "text": "Alaska",
                                      "value": "AK",
                                    },
                                    Object {
                                      "text": "Arizona",
                                      "value": "AZ",
                                    },
                                    Object {
                                      "text": "Arkansas",
                                      "value": "AR",
                                    },
                                    Object {
                                      "text": "California",
                                      "value": "CA",
                                    },
                                    Object {
                                      "text": "Colorado",
                                      "value": "CO",
                                    },
                                    Object {
                                      "text": "Connecticut",
                                      "value": "CT",
                                    },
                                    Object {
                                      "text": "Delaware",
                                      "value": "DE",
                                    },
                                    Object {
                                      "text": "Florida",
                                      "value": "FL",
                                    },
                                    Object {
                                      "text": "Georgia",
                                      "value": "GA",
                                    },
                                    Object {
                                      "text": "Hawaii",
                                      "value": "HI",
                                    },
                                    Object {
                                      "text": "Idaho",
                                      "value": "ID",
                                    },
                                    Object {
                                      "text": "Illinois",
                                      "value": "IL",
                                    },
                                    Object {
                                      "text": "Indiana",
                                      "value": "IN",
                                    },
                                    Object {
                                      "text": "Iowa",
                                      "value": "IA",
                                    },
                                    Object {
                                      "text": "Kansas",
                                      "value": "KS",
                                    },
                                    Object {
                                      "text": "Kentucky",
                                      "value": "KY",
                                    },
                                    Object {
                                      "text": "Louisiana",
                                      "value": "LA",
                                    },
                                    Object {
                                      "text": "Maine",
                                      "value": "ME",
                                    },
                                    Object {
                                      "text": "Maryland",
                                      "value": "MD",
                                    },
                                    Object {
                                      "text": "Massachusetts",
                                      "value": "MA",
                                    },
                                    Object {
                                      "text": "Michigan",
                                      "value": "MI",
                                    },
                                    Object {
                                      "text": "Minnesota",
                                      "value": "MN",
                                    },
                                    Object {
                                      "text": "Mississippi",
                                      "value": "MS",
                                    },
                                    Object {
                                      "text": "Missouri",
                                      "value": "MO",
                                    },
                                    Object {
                                      "text": "Montana",
                                      "value": "MT",
                                    },
                                    Object {
                                      "text": "Nebraska",
                                      "value": "NE",
                                    },
                                    Object {
                                      "text": "Nevada",
                                      "value": "NV",
                                    },
                                    Object {
                                      "text": "New Hampshire",
                                      "value": "NH",
                                    },
                                    Object {
                                      "text": "New Jersey",
                                      "value": "NJ",
                                    },
                                    Object {
                                      "text": "New Mexico",
                                      "value": "NM",
                                    },
                                    Object {
                                      "text": "New York",
                                      "value": "NY",
                                    },
                                    Object {
                                      "text": "North Carolina",
                                      "value": "NC",
                                    },
                                    Object {
                                      "text": "North Dakota",
                                      "value": "ND",
                                    },
                                    Object {
                                      "text": "Ohio",
                                      "value": "OH",
                                    },
                                    Object {
                                      "text": "Oklahoma",
                                      "value": "OK",
                                    },
                                    Object {
                                      "text": "Oregon",
                                      "value": "OR",
                                    },
                                    Object {
                                      "text": "Pennsylvania",
                                      "value": "PA",
                                    },
                                    Object {
                                      "text": "Rhode Island",
                                      "value": "RI",
                                    },
                                    Object {
                                      "text": "South Carolina",
                                      "value": "SC",
                                    },
                                    Object {
                                      "text": "South Dakota",
                                      "value": "SD",
                                    },
                                    Object {
                                      "text": "Tennessee",
                                      "value": "TN",
                                    },
                                    Object {
                                      "text": "Texas",
                                      "value": "TX",
                                    },
                                    Object {
                                      "text": "Utah",
                                      "value": "UT",
                                    },
                                    Object {
                                      "text": "Vermont",
                                      "value": "VT",
                                    },
                                    Object {
                                      "text": "Virginia",
                                      "value": "VA",
                                    },
                                    Object {
                                      "text": "Washington",
                                      "value": "WA",
                                    },
                                    Object {
                                      "text": "West Virginia",
                                      "value": "WV",
                                    },
                                    Object {
                                      "text": "Wisconsin",
                                      "value": "WI",
                                    },
                                    Object {
                                      "text": "Wyoming",
                                      "value": "WY",
                                    },
                                  ]
                                }
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                id="select-82-content"
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                placement="bottom-start"
                                wide={undefined}
                              />
                            }
                            disabled={undefined}
                            focusTriggerOnClose={true}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            hasArrow={true}
                            highlightedIndex={undefined}
                            id="select-82"
                            isOpen={false}
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom"
                            triggerRef={[Function]}
                            wrapContent={false}
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alabama",
                                        "value": "AL",
                                      },
                                      Object {
                                        "text": "Alaska",
                                        "value": "AK",
                                      },
                                      Object {
                                        "text": "Arizona",
                                        "value": "AZ",
                                      },
                                      Object {
                                        "text": "Arkansas",
                                        "value": "AR",
                                      },
                                      Object {
                                        "text": "California",
                                        "value": "CA",
                                      },
                                      Object {
                                        "text": "Colorado",
                                        "value": "CO",
                                      },
                                      Object {
                                        "text": "Connecticut",
                                        "value": "CT",
                                      },
                                      Object {
                                        "text": "Delaware",
                                        "value": "DE",
                                      },
                                      Object {
                                        "text": "Florida",
                                        "value": "FL",
                                      },
                                      Object {
                                        "text": "Georgia",
                                        "value": "GA",
                                      },
                                      Object {
                                        "text": "Hawaii",
                                        "value": "HI",
                                      },
                                      Object {
                                        "text": "Idaho",
                                        "value": "ID",
                                      },
                                      Object {
                                        "text": "Illinois",
                                        "value": "IL",
                                      },
                                      Object {
                                        "text": "Indiana",
                                        "value": "IN",
                                      },
                                      Object {
                                        "text": "Iowa",
                                        "value": "IA",
                                      },
                                      Object {
                                        "text": "Kansas",
                                        "value": "KS",
                                      },
                                      Object {
                                        "text": "Kentucky",
                                        "value": "KY",
                                      },
                                      Object {
                                        "text": "Louisiana",
                                        "value": "LA",
                                      },
                                      Object {
                                        "text": "Maine",
                                        "value": "ME",
                                      },
                                      Object {
                                        "text": "Maryland",
                                        "value": "MD",
                                      },
                                      Object {
                                        "text": "Massachusetts",
                                        "value": "MA",
                                      },
                                      Object {
                                        "text": "Michigan",
                                        "value": "MI",
                                      },
                                      Object {
                                        "text": "Minnesota",
                                        "value": "MN",
                                      },
                                      Object {
                                        "text": "Mississippi",
                                        "value": "MS",
                                      },
                                      Object {
                                        "text": "Missouri",
                                        "value": "MO",
                                      },
                                      Object {
                                        "text": "Montana",
                                        "value": "MT",
                                      },
                                      Object {
                                        "text": "Nebraska",
                                        "value": "NE",
                                      },
                                      Object {
                                        "text": "Nevada",
                                        "value": "NV",
                                      },
                                      Object {
                                        "text": "New Hampshire",
                                        "value": "NH",
                                      },
                                      Object {
                                        "text": "New Jersey",
                                        "value": "NJ",
                                      },
                                      Object {
                                        "text": "New Mexico",
                                        "value": "NM",
                                      },
                                      Object {
                                        "text": "New York",
                                        "value": "NY",
                                      },
                                      Object {
                                        "text": "North Carolina",
                                        "value": "NC",
                                      },
                                      Object {
                                        "text": "North Dakota",
                                        "value": "ND",
                                      },
                                      Object {
                                        "text": "Ohio",
                                        "value": "OH",
                                      },
                                      Object {
                                        "text": "Oklahoma",
                                        "value": "OK",
                                      },
                                      Object {
                                        "text": "Oregon",
                                        "value": "OR",
                                      },
                                      Object {
                                        "text": "Pennsylvania",
                                        "value": "PA",
                                      },
                                      Object {
                                        "text": "Rhode Island",
                                        "value": "RI",
                                      },
                                      Object {
                                        "text": "South Carolina",
                                        "value": "SC",
                                      },
                                      Object {
                                        "text": "South Dakota",
                                        "value": "SD",
                                      },
                                      Object {
                                        "text": "Tennessee",
                                        "value": "TN",
                                      },
                                      Object {
                                        "text": "Texas",
                                        "value": "TX",
                                      },
                                      Object {
                                        "text": "Utah",
                                        "value": "UT",
                                      },
                                      Object {
                                        "text": "Vermont",
                                        "value": "VT",
                                      },
                                      Object {
                                        "text": "Virginia",
                                        "value": "VA",
                                      },
                                      Object {
                                        "text": "Washington",
                                        "value": "WA",
                                      },
                                      Object {
                                        "text": "West Virginia",
                                        "value": "WV",
                                      },
                                      Object {
                                        "text": "Wisconsin",
                                        "value": "WI",
                                      },
                                      Object {
                                        "text": "Wyoming",
                                        "value": "WY",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-82-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              disabled={undefined}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-82"
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              tag="span"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Manager
                                className="glamor-9"
                                id="select-82"
                                tag="span"
                              >
                                <span
                                  className="glamor-9"
                                  id="select-82"
                                >
                                  <PopoverTrigger
                                    aria-activedescendant={undefined}
                                    aria-describedby="select-82-content"
                                    aria-disabled={undefined}
                                    aria-expanded={false}
                                    aria-haspopup="listbox"
                                    aria-invalid={undefined}
                                    aria-owns="select-82-content"
                                    aria-readonly={undefined}
                                    aria-required={undefined}
                                    disabled={undefined}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <PopoverTrigger
                                      component="span"
                                    >
                                      <Target
                                        className="glamor-7"
                                        component="span"
                                      >
                                        <span
                                          className="glamor-7"
                                        >
                                          <SelectTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-82-content"
                                            aria-disabled={undefined}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={undefined}
                                            aria-owns="select-82-content"
                                            aria-readonly={undefined}
                                            aria-required={undefined}
                                            disabled={undefined}
                                            isOpen={false}
                                            item={undefined}
                                            name={undefined}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            placeholder="Choose a state..."
                                            readOnly={undefined}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                            triggerRef={[Function]}
                                            variant={undefined}
                                          >
                                            <SelectTrigger
                                              afterItems={
                                                Array [
                                                  <IconArrowDropdownDown
                                                    css={
                                                      Object {
                                                        "margin": "0.5em",
                                                      }
                                                    }
                                                    size="1.5em"
                                                  />,
                                                  <input
                                                    name={undefined}
                                                    type="hidden"
                                                    value=""
                                                  />,
                                                ]
                                              }
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-82-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-82-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              control={[Function]}
                                              controlProps={
                                                Object {
                                                  "hasPlaceholder": true,
                                                  "variant": undefined,
                                                }
                                              }
                                              disabled={undefined}
                                              fauxControlRef={[Function]}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={undefined}
                                              role="button"
                                              selectedItemVariant={undefined}
                                              size="large"
                                              tabIndex={0}
                                              variant={undefined}
                                            >
                                              <FauxControl
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-82-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-82-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                className="glamor-5"
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": true,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={undefined}
                                                fauxControlRef={[Function]}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                readOnly={undefined}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={0}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-82-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-82-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  disabled={undefined}
                                                  innerRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <div
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-82-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-82-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-4"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <glamorous(Trigger)
                                                      controlPropsIn={
                                                        Object {
                                                          "hasPlaceholder": true,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={undefined}
                                                      hasPlaceholder={true}
                                                      iconEnd={undefined}
                                                      iconStart={undefined}
                                                      innerRef={undefined}
                                                      key="control"
                                                      prefix={undefined}
                                                      readOnly={undefined}
                                                      size="large"
                                                      suffix={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-1"
                                                        prefix={undefined}
                                                        readOnly={undefined}
                                                      >
                                                        <TriggerContent>
                                                          <span
                                                            className="glamor-0"
                                                          >
                                                            Choose a state...
                                                          </span>
                                                        </TriggerContent>
                                                      </div>
                                                    </glamorous(Trigger)>
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      key="arrow"
                                                      size="1.5em"
                                                    >
                                                      <Icon
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        rtl={false}
                                                        size="1.5em"
                                                      >
                                                        <glamorous(svg)
                                                          aria-hidden={true}
                                                          aria-labelledby={undefined}
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          role="img"
                                                          rtl={false}
                                                          size="1.5em"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            className="glamor-2"
                                                            role="img"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <g>
                                                              <path
                                                                d="M12 17.5l-8-8h16z"
                                                              />
                                                            </g>
                                                          </svg>
                                                        </glamorous(svg)>
                                                      </Icon>
                                                    </IconArrowDropdownDown>
                                                    <input
                                                      key="input"
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />
                                                    <Underlay
                                                      disabled={undefined}
                                                      readOnly={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-3"
                                                        readOnly={undefined}
                                                      />
                                                    </Underlay>
                                                  </div>
                                                </FauxControl>
                                              </FauxControl>
                                            </SelectTrigger>
                                          </SelectTrigger>
                                        </span>
                                      </Target>
                                    </PopoverTrigger>
                                  </PopoverTrigger>
                                </span>
                              </Manager>
                            </Popover>
                          </Popover>
                        </Dropdown>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Dropdown)>
                </ThemedComponent>
              </Select>
            </Select>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples placement 1`] = `
.glamor-32,
[data-glamor-32] {
  width: 100%;
}

.glamor-32 > span,
[data-glamor-32] > span {
  width: 100%;
}

.glamor-30,
[data-glamor-30] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-30 *,
[data-glamor-30] *,
.glamor-30 *::before,
[data-glamor-30] *::before,
.glamor-30 *::after,
[data-glamor-30] *::after {
  box-sizing: inherit;
}

.glamor-30 > span,
[data-glamor-30] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-26,
[data-glamor-26] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #fff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  user-select: none;
  width: 14em;
  z-index: 100;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-26 *,
[data-glamor-26] *,
.glamor-26 *::before,
[data-glamor-26] *::before,
.glamor-26 *::after,
[data-glamor-26] *::after {
  box-sizing: inherit;
}

.glamor-25,
[data-glamor-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.glamor-25 *,
[data-glamor-25] *,
.glamor-25 *::before,
[data-glamor-25] *::before,
.glamor-25 *::after,
[data-glamor-25] *::after {
  box-sizing: inherit;
}

.glamor-24,
[data-glamor-24] {
  margin: 0.5em 0;
}

.glamor-24:first-child,
[data-glamor-24]:first-child,
.glamor-24 + .glamor-24,
[data-glamor-24] + [data-glamor-24] {
  margin-top: 0;
}

.glamor-24:last-child,
[data-glamor-24]:last-child,
.glamor-24[data-simulate-lastchild],
[data-glamor-24][data-simulate-lastchild] {
  margin-bottom: 0;
}

.glamor-12,
[data-glamor-12] {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  justify-content: space-between;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-11,
[data-glamor-11] {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  flex-wrap: wrap;
  font-size: 0.875em;
  justify-content: space-between;
  padding: 0.21428571428571427em 0 0.2857142857142857em;
  white-space: normal;
  word-break: break-all;
  -webkit-flex: 1 1 auto;
  -webkit-box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-9,
[data-glamor-9] {
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.glamor-10,
[data-glamor-10] {
  color: #58606e;
  font-size: 0.75em;
  padding-top: 0.25em;
  word-break: break-word;
}

.glamor-13,
[data-glamor-13] {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.glamor-13:focus,
[data-glamor-13]:focus,
.glamor-13[data-simulate-focus],
[data-glamor-13][data-simulate-focus] {
  background-color: #f5f7fa;
  outline: 0;
}

.glamor-13:hover,
[data-glamor-13]:hover,
.glamor-13[data-simulate-hover],
[data-glamor-13][data-simulate-hover] {
  background-color: #f5f7fa;
}

.glamor-13:active,
[data-glamor-13]:active,
.glamor-13[data-simulate-active],
[data-glamor-13][data-simulate-active] {
  background-color: #ebeff5;
}

.glamor-13 [role="img"],
[data-glamor-13] [role="img"] {
  box-sizing: content-box;
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-13 [role="img"]:first-child,
[data-glamor-13] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-13 [role="img"]:last-child,
[data-glamor-13] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-37,
[data-glamor-37] {
  height: 175px;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-37"
              >
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  isOpen={true}
                  placeholder="Select..."
                  placement="bottom-start"
                  size="large"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-109"
                    isOpen={true}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-32"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-109"
                      isOpen={true}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-32"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-109"
                        isOpen={true}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-32"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-109"
                              isOpen={true}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-32"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-109-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-109"
                                isOpen={true}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-32"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-109-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-109"
                                  isOpen={true}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-30"
                                    id="select-109"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-30"
                                      id="select-109"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant="select-109-menu"
                                        aria-describedby="select-109-content"
                                        aria-disabled={undefined}
                                        aria-expanded={true}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-109-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant="select-109-menu"
                                                aria-describedby="select-109-content"
                                                aria-disabled={undefined}
                                                aria-expanded={true}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-109-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={true}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Select..."
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownUp
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant="select-109-menu"
                                                  aria-describedby="select-109-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={true}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-109-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownUp
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant="select-109-menu"
                                                    aria-describedby="select-109-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={true}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-109-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant="select-109-menu"
                                                      aria-describedby="select-109-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={true}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-109-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant="select-109-menu"
                                                        aria-describedby="select-109-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={true}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-109-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-1"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Select...
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownUp
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 7.5l8 8H4z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownUp>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                      <DropdownContent
                                        data={
                                          Array [
                                            Object {
                                              "text": "Alpha",
                                              "value": "alpha",
                                            },
                                            Object {
                                              "text": "Beta",
                                              "value": "beta",
                                            },
                                            Object {
                                              "text": "Gamma",
                                              "value": "gamma",
                                            },
                                          ]
                                        }
                                        getItemProps={[Function]}
                                        getMenuProps={[Function]}
                                        id="select-109-content"
                                        modifiers={
                                          Object {
                                            "contentWidth": Object {
                                              "enabled": true,
                                              "fn": [Function],
                                            },
                                          }
                                        }
                                        placement="bottom-start"
                                        wide={undefined}
                                      >
                                        <DropdownContent
                                          id="select-109-content"
                                          modifiers={
                                            Object {
                                              "contentWidth": Object {
                                                "enabled": true,
                                                "fn": [Function],
                                              },
                                            }
                                          }
                                          placement="bottom-start"
                                          wide={undefined}
                                        >
                                          <ThemedComponent
                                            className="glamor-26"
                                            id="select-109-content"
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                              }
                                            }
                                            placement="bottom-start"
                                          >
                                            <RtlPopper
                                              className="glamor-26"
                                              id="select-109-content"
                                              modifiers={
                                                Object {
                                                  "contentWidth": Object {
                                                    "enabled": true,
                                                    "fn": [Function],
                                                  },
                                                }
                                              }
                                              placement="bottom-start"
                                              theme={
                                                Object {
                                                  "DropdownContent_backgroundColor": "#fff",
                                                  "DropdownContent_borderColor": "#ebeff5",
                                                  "DropdownContent_borderRadius": "0.1875em",
                                                  "DropdownContent_boxShadow": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                                  "DropdownContent_margin": "5px",
                                                  "DropdownContent_zIndex": 100,
                                                  "DropdownIcon_fill": "#2e6fd9",
                                                  "DropdownIcon_marginHorizontal": "0.5em",
                                                  "Dropdown_backgroundColor": "#fff",
                                                  "Dropdown_borderColor": "#c8d1e0",
                                                  "Dropdown_borderColor_active": "#c8d1e0",
                                                  "Dropdown_borderColor_focus": "#c8d1e0",
                                                  "Dropdown_borderColor_hover": "#2e6fd9",
                                                  "Dropdown_borderRadius": "0.1875em",
                                                  "Dropdown_borderWidth": "1px",
                                                  "Dropdown_boxShadow_active": "0 0 0 1px #fff, 0 0 0 2px #2e6fd9",
                                                  "Dropdown_boxShadow_focus": "0 0 0 1px #fff, 0 0 0 2px #2e6fd9",
                                                  "Dropdown_color_placeholder": "#8e99ab",
                                                  "Dropdown_color_text": "#58606e",
                                                  "Dropdown_fontSize": "0.875em",
                                                  "Dropdown_fontSize_small": "0.75em",
                                                  "Dropdown_height_jumbo": "3.25em",
                                                  "Dropdown_height_large": "2.5em",
                                                  "Dropdown_height_medium": "2em",
                                                  "Dropdown_height_small": "1.5em",
                                                  "Dropdown_paddingHorizontal": "1em",
                                                  "Dropdown_paddingHorizontal_small": "0.5em",
                                                  "backgroundColor_danger": "#db2929",
                                                  "backgroundColor_danger_active": "#c71818",
                                                  "backgroundColor_danger_activeMuted": "#f79999",
                                                  "backgroundColor_danger_focus": "#db2929",
                                                  "backgroundColor_danger_hover": "#eb4d4d",
                                                  "backgroundColor_danger_muted": "#fabebe",
                                                  "backgroundColor_disabled": "#ebeff5",
                                                  "backgroundColor_input": "#fff",
                                                  "backgroundColor_link_focus": "#dde3ed",
                                                  "backgroundColor_success": "#0a8f4c",
                                                  "backgroundColor_success_active": "#06783f",
                                                  "backgroundColor_success_activeMuted": "#95f5c3",
                                                  "backgroundColor_success_focus": "#0a8f4c",
                                                  "backgroundColor_success_hover": "#10a35a",
                                                  "backgroundColor_success_muted": "#c0fadc",
                                                  "backgroundColor_warning": "#e05b2b",
                                                  "backgroundColor_warning_active": "#cf4615",
                                                  "backgroundColor_warning_activeMuted": "#fab69d",
                                                  "backgroundColor_warning_focus": "#e05b2b",
                                                  "backgroundColor_warning_hover": "#ed774c",
                                                  "backgroundColor_warning_muted": "#fcd0c0",
                                                  "borderColor": "#c8d1e0",
                                                  "borderColor_active": "#2e6fd9",
                                                  "borderColor_danger": "#db2929",
                                                  "borderColor_danger_active": "#c71818",
                                                  "borderColor_danger_focus": "#c71818",
                                                  "borderColor_danger_hover": "#c71818",
                                                  "borderColor_danger_muted": "#f27474",
                                                  "borderColor_focus": "#2e6fd9",
                                                  "borderColor_hover": "#2e6fd9",
                                                  "borderColor_success": "#10a35a",
                                                  "borderColor_success_active": "#0a8f4c",
                                                  "borderColor_success_focus": "#0a8f4c",
                                                  "borderColor_success_hover": "#0a8f4c",
                                                  "borderColor_success_muted": "#67eba7",
                                                  "borderColor_warning": "#e05b2b",
                                                  "borderColor_warning_active": "#cf4615",
                                                  "borderColor_warning_focus": "#cf4615",
                                                  "borderColor_warning_hover": "#cf4615",
                                                  "borderColor_warning_muted": "#f59776",
                                                  "borderRadius_1": "0.1875em",
                                                  "breakpoint_medium": 768,
                                                  "breakpoint_narrow": 512,
                                                  "breakpoint_wide": 1024,
                                                  "color_black": "#1d1f24",
                                                  "color_caption": "#58606e",
                                                  "color_gray_10": "#f5f7fa",
                                                  "color_gray_100": "#333840",
                                                  "color_gray_20": "#ebeff5",
                                                  "color_gray_30": "#dde3ed",
                                                  "color_gray_40": "#c8d1e0",
                                                  "color_gray_50": "#afbacc",
                                                  "color_gray_60": "#8e99ab",
                                                  "color_gray_70": "#707a8a",
                                                  "color_gray_80": "#58606e",
                                                  "color_gray_90": "#434a54",
                                                  "color_placeholder": "#8e99ab",
                                                  "color_text": "#333840",
                                                  "color_text_danger": "#db2929",
                                                  "color_text_danger_active": "#c71818",
                                                  "color_text_danger_focus": "#db2929",
                                                  "color_text_danger_hover": "#eb4d4d",
                                                  "color_text_disabled": "#afbacc",
                                                  "color_text_ondanger": "#fff",
                                                  "color_text_onprimary": "#fff",
                                                  "color_text_onsuccess": "#fff",
                                                  "color_text_onwarning": "#fff",
                                                  "color_text_primary": "#2e6fd9",
                                                  "color_text_primary_active": "#1f5dc2",
                                                  "color_text_primary_focus": "#2e6fd9",
                                                  "color_text_primary_hover": "#4a89e8",
                                                  "color_text_success": "#06783f",
                                                  "color_text_success_active": "#046132",
                                                  "color_text_success_focus": "#06783f",
                                                  "color_text_success_hover": "#0a8f4c",
                                                  "color_text_warning": "#cf4615",
                                                  "color_text_warning_active": "#bd3909",
                                                  "color_text_warning_focus": "#cf4615",
                                                  "color_text_warning_hover": "#e05b2b",
                                                  "color_theme_10": "#e6eefc",
                                                  "color_theme_100": "#0f397d",
                                                  "color_theme_20": "#c2dbfc",
                                                  "color_theme_30": "#9dc2fa",
                                                  "color_theme_40": "#72a5f2",
                                                  "color_theme_50": "#4a89e8",
                                                  "color_theme_60": "#2e6fd9",
                                                  "color_theme_70": "#1f5dc2",
                                                  "color_theme_80": "#164ea8",
                                                  "color_theme_90": "#114091",
                                                  "color_white": "#fff",
                                                  "direction": "ltr",
                                                  "fontFamily": "Open Sans",
                                                  "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                                                  "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                                                  "fontSize_base": 16,
                                                  "fontSize_h1": "2.125em",
                                                  "fontSize_h2": "1.75em",
                                                  "fontSize_h3": "1.375em",
                                                  "fontSize_h4": "1.125em",
                                                  "fontSize_h5": "0.875em",
                                                  "fontSize_h6": "0.875em",
                                                  "fontSize_mouse": "0.6875em",
                                                  "fontSize_prose": "1em",
                                                  "fontSize_ui": "0.875em",
                                                  "fontWeight_bold": 700,
                                                  "fontWeight_extraBold": 800,
                                                  "fontWeight_regular": 400,
                                                  "fontWeight_semiBold": 600,
                                                  "lineHeight": 1.25,
                                                  "lineHeight_prose": 1.5,
                                                  "shadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                                                  "shadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                                  "shadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                                                  "shadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                                                  "shadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                                                  "size_jumbo": "3.25em",
                                                  "size_large": "2.5em",
                                                  "size_medium": "2em",
                                                  "size_small": "1.5em",
                                                  "space_inline_lg": "1.5em",
                                                  "space_inline_md": "1em",
                                                  "space_inline_sm": "0.5em",
                                                  "space_inline_xl": "2em",
                                                  "space_inline_xs": "0.25em",
                                                  "space_inline_xxl": "4em",
                                                  "space_inline_xxs": "0.125em",
                                                  "space_inset_lg": "1.5em",
                                                  "space_inset_md": "1em",
                                                  "space_inset_sm": "0.5em",
                                                  "space_stack_lg": "1.5em",
                                                  "space_stack_md": "1em",
                                                  "space_stack_sm": "0.5em",
                                                  "space_stack_xl": "2em",
                                                  "space_stack_xs": "0.25em",
                                                  "space_stack_xxl": "4em",
                                                  "space_stack_xxs": "0.125em",
                                                  "zIndex_100": 100,
                                                  "zIndex_1600": 1600,
                                                  "zIndex_200": 200,
                                                  "zIndex_400": 400,
                                                  "zIndex_800": 800,
                                                }
                                              }
                                            >
                                              <Popper
                                                className="glamor-26"
                                                component="div"
                                                eventsEnabled={true}
                                                id="select-109-content"
                                                modifiers={
                                                  Object {
                                                    "contentWidth": Object {
                                                      "enabled": true,
                                                      "fn": [Function],
                                                    },
                                                  }
                                                }
                                                placement="bottom-start"
                                              >
                                                <div
                                                  className="glamor-26"
                                                  data-placement={undefined}
                                                  data-x-out-of-boundaries={undefined}
                                                  id="select-109-content"
                                                  style={
                                                    Object {
                                                      "opacity": 0,
                                                      "pointerEvents": "none",
                                                      "position": "absolute",
                                                    }
                                                  }
                                                >
                                                  <Menu
                                                    data={
                                                      Array [
                                                        Object {
                                                          "text": "Alpha",
                                                          "value": "alpha",
                                                        },
                                                        Object {
                                                          "text": "Beta",
                                                          "value": "beta",
                                                        },
                                                        Object {
                                                          "text": "Gamma",
                                                          "value": "gamma",
                                                        },
                                                      ]
                                                    }
                                                    getItemProps={[Function]}
                                                    id="select-109-menu"
                                                    role="listbox"
                                                  >
                                                    <Menu
                                                      id="select-109-menu"
                                                      role="listbox"
                                                    >
                                                      <div
                                                        className="glamor-25"
                                                        id="select-109-menu"
                                                        role="listbox"
                                                      >
                                                        <MenuGroup
                                                          key="0"
                                                          title={undefined}
                                                        >
                                                          <MenuGroup>
                                                            <div
                                                              className="glamor-24"
                                                            >
                                                              <MenuItem
                                                                aria-disabled={undefined}
                                                                aria-selected={false}
                                                                id="select-109-item-0"
                                                                isHighlighted={false}
                                                                item={
                                                                  Object {
                                                                    "text": "Alpha",
                                                                    "value": "alpha",
                                                                  }
                                                                }
                                                                key="0"
                                                                onClick={[Function]}
                                                                role="option"
                                                                tabIndex={null}
                                                                value="alpha"
                                                              >
                                                                <MenuItem
                                                                  aria-disabled={undefined}
                                                                  aria-selected={false}
                                                                  disabled={undefined}
                                                                  id="select-109-item-0"
                                                                  isHighlighted={false}
                                                                  item={
                                                                    Object {
                                                                      "text": "Alpha",
                                                                      "value": "alpha",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="option"
                                                                  tabIndex={null}
                                                                  value="alpha"
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    aria-disabled={undefined}
                                                                    aria-selected={false}
                                                                    className="glamor-13"
                                                                    id="select-109-item-0"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="option"
                                                                    tabIndex={null}
                                                                  >
                                                                    <glamorous(span)>
                                                                      <span
                                                                        className="glamor-12"
                                                                      >
                                                                        <glamorous(span)>
                                                                          <span
                                                                            className="glamor-11"
                                                                          >
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-9"
                                                                              >
                                                                                Alpha
                                                                              </span>
                                                                            </glamorous(span)>
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-10"
                                                                              />
                                                                            </glamorous(span)>
                                                                          </span>
                                                                        </glamorous(span)>
                                                                      </span>
                                                                    </glamorous(span)>
                                                                  </div>
                                                                </MenuItem>
                                                              </MenuItem>
                                                              <MenuItem
                                                                aria-disabled={undefined}
                                                                aria-selected={false}
                                                                id="select-109-item-1"
                                                                isHighlighted={false}
                                                                item={
                                                                  Object {
                                                                    "text": "Beta",
                                                                    "value": "beta",
                                                                  }
                                                                }
                                                                key="1"
                                                                onClick={[Function]}
                                                                role="option"
                                                                tabIndex={null}
                                                                value="beta"
                                                              >
                                                                <MenuItem
                                                                  aria-disabled={undefined}
                                                                  aria-selected={false}
                                                                  disabled={undefined}
                                                                  id="select-109-item-1"
                                                                  isHighlighted={false}
                                                                  item={
                                                                    Object {
                                                                      "text": "Beta",
                                                                      "value": "beta",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="option"
                                                                  tabIndex={null}
                                                                  value="beta"
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    aria-disabled={undefined}
                                                                    aria-selected={false}
                                                                    className="glamor-13"
                                                                    id="select-109-item-1"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="option"
                                                                    tabIndex={null}
                                                                  >
                                                                    <glamorous(span)>
                                                                      <span
                                                                        className="glamor-12"
                                                                      >
                                                                        <glamorous(span)>
                                                                          <span
                                                                            className="glamor-11"
                                                                          >
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-9"
                                                                              >
                                                                                Beta
                                                                              </span>
                                                                            </glamorous(span)>
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-10"
                                                                              />
                                                                            </glamorous(span)>
                                                                          </span>
                                                                        </glamorous(span)>
                                                                      </span>
                                                                    </glamorous(span)>
                                                                  </div>
                                                                </MenuItem>
                                                              </MenuItem>
                                                              <MenuItem
                                                                aria-disabled={undefined}
                                                                aria-selected={false}
                                                                id="select-109-item-2"
                                                                isHighlighted={false}
                                                                item={
                                                                  Object {
                                                                    "text": "Gamma",
                                                                    "value": "gamma",
                                                                  }
                                                                }
                                                                key="2"
                                                                onClick={[Function]}
                                                                role="option"
                                                                tabIndex={null}
                                                                value="gamma"
                                                              >
                                                                <MenuItem
                                                                  aria-disabled={undefined}
                                                                  aria-selected={false}
                                                                  disabled={undefined}
                                                                  id="select-109-item-2"
                                                                  isHighlighted={false}
                                                                  item={
                                                                    Object {
                                                                      "text": "Gamma",
                                                                      "value": "gamma",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="option"
                                                                  tabIndex={null}
                                                                  value="gamma"
                                                                  variant={undefined}
                                                                >
                                                                  <div
                                                                    aria-disabled={undefined}
                                                                    aria-selected={false}
                                                                    className="glamor-13"
                                                                    id="select-109-item-2"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="option"
                                                                    tabIndex={null}
                                                                  >
                                                                    <glamorous(span)>
                                                                      <span
                                                                        className="glamor-12"
                                                                      >
                                                                        <glamorous(span)>
                                                                          <span
                                                                            className="glamor-11"
                                                                          >
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-9"
                                                                              >
                                                                                Gamma
                                                                              </span>
                                                                            </glamorous(span)>
                                                                            <glamorous(span)>
                                                                              <span
                                                                                className="glamor-10"
                                                                              />
                                                                            </glamorous(span)>
                                                                          </span>
                                                                        </glamorous(span)>
                                                                      </span>
                                                                    </glamorous(span)>
                                                                  </div>
                                                                </MenuItem>
                                                              </MenuItem>
                                                            </div>
                                                          </MenuGroup>
                                                        </MenuGroup>
                                                      </div>
                                                    </Menu>
                                                  </Menu>
                                                </div>
                                              </Popper>
                                            </RtlPopper>
                                          </ThemedComponent>
                                        </DropdownContent>
                                      </DropdownContent>
                                      <EventListener
                                        listeners={
                                          Array [
                                            Object {
                                              "event": "click",
                                              "handler": [Function],
                                              "options": true,
                                              "target": "document",
                                            },
                                            Object {
                                              "event": "keydown",
                                              "handler": [Function],
                                              "options": true,
                                              "target": "document",
                                            },
                                          ]
                                        }
                                      />
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples portal 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-23,
[data-glamor-23] {
  position: relative;
}

.glamor-17,
[data-glamor-17] {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.glamor-16,
[data-glamor-16] {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-21,
[data-glamor-21] {
  left: 0;
  position: absolute;
  top: 0;
}

.glamor-20,
[data-glamor-20] {
  box-sizing: border-box;
  color: #2e6fd9;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.glamor-20 *,
[data-glamor-20] *,
.glamor-20 *::before,
[data-glamor-20] *::before,
.glamor-20 *::after,
[data-glamor-20] *::after {
  box-sizing: inherit;
}

.glamor-20:focus,
[data-glamor-20]:focus,
.glamor-20[data-simulate-focus],
[data-glamor-20][data-simulate-focus] {
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #2e6fd9;
  text-decoration: none;
}

.glamor-20:hover,
[data-glamor-20]:hover,
.glamor-20[data-simulate-hover],
[data-glamor-20][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #2e6fd9;
  text-decoration: none;
}

.glamor-20:active,
[data-glamor-20]:active,
.glamor-20[data-simulate-active],
[data-glamor-20][data-simulate-active] {
  background-color: #ebeff5;
  color: #2e6fd9;
}

.glamor-20::-moz-focus-inner,
[data-glamor-20]::-moz-focus-inner,
.glamor-20[data-simulate-mozfocusinner],
[data-glamor-20][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-20 [role="img"],
[data-glamor-20] [role="img"] {
  box-sizing: content-box;
  fill: currentColor;
  display: block;
}

.glamor-20 [role="img"]:first-child,
[data-glamor-20] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-20 [role="img"]:last-child,
[data-glamor-20] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-20 [role="img"]:only-child,
[data-glamor-20] [role="img"]:only-child {
  margin: 0;
}

.glamor-19,
[data-glamor-19] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-18,
[data-glamor-18] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "ScrollParent": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <ScrollBox
              autoCenter={true}
              height={360}
            >
              <glamorous(div)>
                <div
                  className="glamor-23"
                >
                  <glamorous(div)
                    height={360}
                  >
                    <div
                      className="glamor-17"
                    >
                      <glamorous(div)
                        scrollAreaHeight={360}
                      >
                        <div
                          className="glamor-16"
                        >
                          <Select
                            data={
                              Array [
                                Object {
                                  "text": "Alpha",
                                  "value": "alpha",
                                },
                                Object {
                                  "text": "Beta",
                                  "value": "beta",
                                },
                                Object {
                                  "text": "Gamma",
                                  "value": "gamma",
                                },
                              ]
                            }
                            isOpen={true}
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "escapeWithReference": true,
                                },
                              }
                            }
                            usePortal={true}
                          >
                            <div
                              style={
                                Object {
                                  "width": "14em",
                                }
                              }
                            >
                              <Select
                                data={
                                  Array [
                                    Object {
                                      "text": "Alpha",
                                      "value": "alpha",
                                    },
                                    Object {
                                      "text": "Beta",
                                      "value": "beta",
                                    },
                                    Object {
                                      "text": "Gamma",
                                      "value": "gamma",
                                    },
                                  ]
                                }
                                isOpen={true}
                                modifiers={
                                  Object {
                                    "preventOverflow": Object {
                                      "escapeWithReference": true,
                                    },
                                  }
                                }
                                placeholder="Select..."
                                placement="bottom-start"
                                size="large"
                                usePortal={true}
                              >
                                <Select
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  disabled={undefined}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  highlightedIndex={undefined}
                                  id="select-115"
                                  isOpen={true}
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                      "preventOverflow": Object {
                                        "escapeWithReference": true,
                                      },
                                    }
                                  }
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom-start"
                                  usePortal={true}
                                >
                                  <ThemedComponent
                                    className="glamor-11"
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    disabled={undefined}
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    getTriggerProps={[Function]}
                                    highlightedIndex={undefined}
                                    id="select-115"
                                    isOpen={true}
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                        "preventOverflow": Object {
                                          "escapeWithReference": true,
                                        },
                                      }
                                    }
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    placement="bottom-start"
                                    usePortal={true}
                                  >
                                    <Themed(Dropdown)
                                      className="glamor-11"
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      disabled={undefined}
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      getTriggerProps={[Function]}
                                      highlightedIndex={undefined}
                                      id="select-115"
                                      isOpen={true}
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                          "preventOverflow": Object {
                                            "escapeWithReference": true,
                                          },
                                        }
                                      }
                                      onClose={[Function]}
                                      onOpen={[Function]}
                                      placement="bottom-start"
                                      usePortal={true}
                                    >
                                      <ThemeProvider>
                                        <ThemeProvider>
                                          <Dropdown
                                            className="glamor-11"
                                            data={
                                              Array [
                                                Object {
                                                  "text": "Alpha",
                                                  "value": "alpha",
                                                },
                                                Object {
                                                  "text": "Beta",
                                                  "value": "beta",
                                                },
                                                Object {
                                                  "text": "Gamma",
                                                  "value": "gamma",
                                                },
                                              ]
                                            }
                                            disabled={undefined}
                                            getItemProps={[Function]}
                                            getMenuProps={[Function]}
                                            getTriggerProps={[Function]}
                                            highlightedIndex={undefined}
                                            id="select-115"
                                            isOpen={true}
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                                "preventOverflow": Object {
                                                  "escapeWithReference": true,
                                                },
                                              }
                                            }
                                            onClose={[Function]}
                                            onOpen={[Function]}
                                            placement="bottom-start"
                                            usePortal={true}
                                          >
                                            <Popover
                                              className="glamor-11"
                                              content={
                                                <DropdownContent
                                                  data={
                                                    Array [
                                                      Object {
                                                        "text": "Alpha",
                                                        "value": "alpha",
                                                      },
                                                      Object {
                                                        "text": "Beta",
                                                        "value": "beta",
                                                      },
                                                      Object {
                                                        "text": "Gamma",
                                                        "value": "gamma",
                                                      },
                                                    ]
                                                  }
                                                  getItemProps={[Function]}
                                                  getMenuProps={[Function]}
                                                  id="select-115-content"
                                                  modifiers={
                                                    Object {
                                                      "contentWidth": Object {
                                                        "enabled": true,
                                                        "fn": [Function],
                                                      },
                                                      "preventOverflow": Object {
                                                        "escapeWithReference": true,
                                                      },
                                                    }
                                                  }
                                                  placement="bottom-start"
                                                  wide={undefined}
                                                />
                                              }
                                              disabled={undefined}
                                              focusTriggerOnClose={true}
                                              getItemProps={[Function]}
                                              getMenuProps={[Function]}
                                              getTriggerProps={[Function]}
                                              hasArrow={true}
                                              highlightedIndex={undefined}
                                              id="select-115"
                                              isOpen={true}
                                              onClose={[Function]}
                                              onOpen={[Function]}
                                              placement="bottom"
                                              triggerRef={[Function]}
                                              usePortal={true}
                                              wrapContent={false}
                                            >
                                              <Popover
                                                className="glamor-11"
                                                content={
                                                  <DropdownContent
                                                    data={
                                                      Array [
                                                        Object {
                                                          "text": "Alpha",
                                                          "value": "alpha",
                                                        },
                                                        Object {
                                                          "text": "Beta",
                                                          "value": "beta",
                                                        },
                                                        Object {
                                                          "text": "Gamma",
                                                          "value": "gamma",
                                                        },
                                                      ]
                                                    }
                                                    getItemProps={[Function]}
                                                    getMenuProps={[Function]}
                                                    id="select-115-content"
                                                    modifiers={
                                                      Object {
                                                        "contentWidth": Object {
                                                          "enabled": true,
                                                          "fn": [Function],
                                                        },
                                                        "preventOverflow": Object {
                                                          "escapeWithReference": true,
                                                        },
                                                      }
                                                    }
                                                    placement="bottom-start"
                                                    wide={undefined}
                                                  />
                                                }
                                                disabled={undefined}
                                                focusTriggerOnClose={true}
                                                getItemProps={[Function]}
                                                getMenuProps={[Function]}
                                                getTriggerProps={[Function]}
                                                hasArrow={true}
                                                highlightedIndex={undefined}
                                                id="select-115"
                                                isOpen={true}
                                                onClose={[Function]}
                                                onOpen={[Function]}
                                                placement="bottom"
                                                tag="span"
                                                triggerRef={[Function]}
                                                usePortal={true}
                                                wrapContent={false}
                                              >
                                                <Manager
                                                  className="glamor-9"
                                                  id="select-115"
                                                  tag="span"
                                                >
                                                  <span
                                                    className="glamor-9"
                                                    id="select-115"
                                                  >
                                                    <PopoverTrigger
                                                      aria-activedescendant="select-115-menu"
                                                      aria-describedby="select-115-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={true}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-115-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      disabled={undefined}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <PopoverTrigger
                                                        component="span"
                                                      >
                                                        <Target
                                                          className="glamor-7"
                                                          component="span"
                                                        >
                                                          <span
                                                            className="glamor-7"
                                                          >
                                                            <SelectTrigger
                                                              aria-activedescendant="select-115-menu"
                                                              aria-describedby="select-115-content"
                                                              aria-disabled={undefined}
                                                              aria-expanded={true}
                                                              aria-haspopup="listbox"
                                                              aria-invalid={undefined}
                                                              aria-owns="select-115-content"
                                                              aria-readonly={undefined}
                                                              aria-required={undefined}
                                                              disabled={undefined}
                                                              isOpen={true}
                                                              item={undefined}
                                                              name={undefined}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              placeholder="Select..."
                                                              readOnly={undefined}
                                                              role="button"
                                                              size="large"
                                                              tabIndex={0}
                                                              triggerRef={[Function]}
                                                              variant={undefined}
                                                            >
                                                              <SelectTrigger
                                                                afterItems={
                                                                  Array [
                                                                    <IconArrowDropdownUp
                                                                      css={
                                                                        Object {
                                                                          "margin": "0.5em",
                                                                        }
                                                                      }
                                                                      size="1.5em"
                                                                    />,
                                                                    <input
                                                                      name={undefined}
                                                                      type="hidden"
                                                                      value=""
                                                                    />,
                                                                  ]
                                                                }
                                                                aria-activedescendant="select-115-menu"
                                                                aria-describedby="select-115-content"
                                                                aria-disabled={undefined}
                                                                aria-expanded={true}
                                                                aria-haspopup="listbox"
                                                                aria-invalid={undefined}
                                                                aria-owns="select-115-content"
                                                                aria-readonly={undefined}
                                                                aria-required={undefined}
                                                                control={[Function]}
                                                                controlProps={
                                                                  Object {
                                                                    "hasPlaceholder": true,
                                                                    "variant": undefined,
                                                                  }
                                                                }
                                                                disabled={undefined}
                                                                fauxControlRef={[Function]}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                readOnly={undefined}
                                                                role="button"
                                                                selectedItemVariant={undefined}
                                                                size="large"
                                                                tabIndex={0}
                                                                variant={undefined}
                                                              >
                                                                <FauxControl
                                                                  afterItems={
                                                                    Array [
                                                                      <IconArrowDropdownUp
                                                                        css={
                                                                          Object {
                                                                            "margin": "0.5em",
                                                                          }
                                                                        }
                                                                        size="1.5em"
                                                                      />,
                                                                      <input
                                                                        name={undefined}
                                                                        type="hidden"
                                                                        value=""
                                                                      />,
                                                                    ]
                                                                  }
                                                                  aria-activedescendant="select-115-menu"
                                                                  aria-describedby="select-115-content"
                                                                  aria-disabled={undefined}
                                                                  aria-expanded={true}
                                                                  aria-haspopup="listbox"
                                                                  aria-invalid={undefined}
                                                                  aria-owns="select-115-content"
                                                                  aria-readonly={undefined}
                                                                  aria-required={undefined}
                                                                  className="glamor-5"
                                                                  control={[Function]}
                                                                  controlProps={
                                                                    Object {
                                                                      "hasPlaceholder": true,
                                                                      "variant": undefined,
                                                                    }
                                                                  }
                                                                  disabled={undefined}
                                                                  fauxControlRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  readOnly={undefined}
                                                                  role="button"
                                                                  selectedItemVariant={undefined}
                                                                  size="large"
                                                                  tabIndex={0}
                                                                  variant={undefined}
                                                                >
                                                                  <FauxControl
                                                                    aria-activedescendant="select-115-menu"
                                                                    aria-describedby="select-115-content"
                                                                    aria-disabled={undefined}
                                                                    aria-expanded={true}
                                                                    aria-haspopup="listbox"
                                                                    aria-invalid={undefined}
                                                                    aria-owns="select-115-content"
                                                                    aria-readonly={undefined}
                                                                    aria-required={undefined}
                                                                    className="glamor-5"
                                                                    control={[Function]}
                                                                    disabled={undefined}
                                                                    innerRef={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    role="button"
                                                                    selectedItemVariant={undefined}
                                                                    tabIndex={0}
                                                                    variant={undefined}
                                                                  >
                                                                    <div
                                                                      aria-activedescendant="select-115-menu"
                                                                      aria-describedby="select-115-content"
                                                                      aria-disabled={undefined}
                                                                      aria-expanded={true}
                                                                      aria-haspopup="listbox"
                                                                      aria-invalid={undefined}
                                                                      aria-owns="select-115-content"
                                                                      aria-readonly={undefined}
                                                                      aria-required={undefined}
                                                                      className="glamor-4"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <glamorous(Trigger)
                                                                        controlPropsIn={
                                                                          Object {
                                                                            "hasPlaceholder": true,
                                                                            "variant": undefined,
                                                                          }
                                                                        }
                                                                        disabled={undefined}
                                                                        hasPlaceholder={true}
                                                                        iconEnd={undefined}
                                                                        iconStart={undefined}
                                                                        innerRef={undefined}
                                                                        key="control"
                                                                        prefix={undefined}
                                                                        readOnly={undefined}
                                                                        size="large"
                                                                        suffix={undefined}
                                                                        variant={undefined}
                                                                      >
                                                                        <div
                                                                          className="glamor-1"
                                                                          prefix={undefined}
                                                                          readOnly={undefined}
                                                                        >
                                                                          <TriggerContent>
                                                                            <span
                                                                              className="glamor-0"
                                                                            >
                                                                              Select...
                                                                            </span>
                                                                          </TriggerContent>
                                                                        </div>
                                                                      </glamorous(Trigger)>
                                                                      <IconArrowDropdownUp
                                                                        css={
                                                                          Object {
                                                                            "margin": "0.5em",
                                                                          }
                                                                        }
                                                                        key="arrow"
                                                                        size="1.5em"
                                                                      >
                                                                        <Icon
                                                                          css={
                                                                            Object {
                                                                              "margin": "0.5em",
                                                                            }
                                                                          }
                                                                          rtl={false}
                                                                          size="1.5em"
                                                                        >
                                                                          <glamorous(svg)
                                                                            aria-hidden={true}
                                                                            aria-labelledby={undefined}
                                                                            css={
                                                                              Object {
                                                                                "margin": "0.5em",
                                                                              }
                                                                            }
                                                                            role="img"
                                                                            rtl={false}
                                                                            size="1.5em"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              aria-labelledby={undefined}
                                                                              className="glamor-2"
                                                                              role="img"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <g>
                                                                                <path
                                                                                  d="M12 7.5l8 8H4z"
                                                                                />
                                                                              </g>
                                                                            </svg>
                                                                          </glamorous(svg)>
                                                                        </Icon>
                                                                      </IconArrowDropdownUp>
                                                                      <input
                                                                        key="input"
                                                                        name={undefined}
                                                                        type="hidden"
                                                                        value=""
                                                                      />
                                                                      <Underlay
                                                                        disabled={undefined}
                                                                        readOnly={undefined}
                                                                        variant={undefined}
                                                                      >
                                                                        <div
                                                                          className="glamor-3"
                                                                          readOnly={undefined}
                                                                        />
                                                                      </Underlay>
                                                                    </div>
                                                                  </FauxControl>
                                                                </FauxControl>
                                                              </SelectTrigger>
                                                            </SelectTrigger>
                                                          </span>
                                                        </Target>
                                                      </PopoverTrigger>
                                                    </PopoverTrigger>
                                                    <Portal />
                                                    <EventListener
                                                      listeners={
                                                        Array [
                                                          Object {
                                                            "event": "click",
                                                            "handler": [Function],
                                                            "options": true,
                                                            "target": "document",
                                                          },
                                                          Object {
                                                            "event": "keydown",
                                                            "handler": [Function],
                                                            "options": true,
                                                            "target": "document",
                                                          },
                                                        ]
                                                      }
                                                    />
                                                  </span>
                                                </Manager>
                                              </Popover>
                                            </Popover>
                                          </Dropdown>
                                        </ThemeProvider>
                                      </ThemeProvider>
                                    </Themed(Dropdown)>
                                  </ThemedComponent>
                                </Select>
                              </Select>
                            </div>
                          </Select>
                        </div>
                      </glamorous(div)>
                    </div>
                  </glamorous(div)>
                  <glamorous(Button)
                    minimal={true}
                    onClick={[Function]}
                    size="small"
                  >
                    <Button
                      className="glamor-21"
                      element="button"
                      minimal={true}
                      onClick={[Function]}
                      size="small"
                      type="button"
                      variant="regular"
                    >
                      <glamorous(button)
                        className="glamor-21"
                        element="button"
                        minimal={true}
                        onClick={[Function]}
                        size="small"
                        text="Re-center"
                        type="button"
                        variant="regular"
                      >
                        <button
                          className="glamor-20"
                          onClick={[Function]}
                          type="button"
                        >
                          <glamorous(span)>
                            <span
                              className="glamor-19"
                            >
                              <glamorous(span)
                                size="small"
                              >
                                <span
                                  className="glamor-18"
                                >
                                  Re-center
                                </span>
                              </glamorous(span)>
                            </span>
                          </glamorous(span)>
                        </button>
                      </glamorous(button)>
                    </Button>
                  </glamorous(Button)>
                </div>
              </glamorous(div)>
            </ScrollBox>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples read-only 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #afbacc;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #afbacc;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #afbacc;
  margin-left: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #afbacc;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #afbacc;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #afbacc;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <Select
              data={
                Array [
                  Object {
                    "text": "Alpha",
                    "value": "alpha",
                  },
                  Object {
                    "text": "Beta",
                    "value": "beta",
                  },
                  Object {
                    "text": "Gamma",
                    "value": "gamma",
                  },
                ]
              }
              placeholder="Select..."
              placement="bottom-start"
              readOnly={true}
              selectedItem={
                Object {
                  "text": "Alpha",
                  "value": "alpha",
                }
              }
              size="large"
            >
              <Select
                data={
                  Array [
                    Object {
                      "text": "Alpha",
                      "value": "alpha",
                    },
                    Object {
                      "text": "Beta",
                      "value": "beta",
                    },
                    Object {
                      "text": "Gamma",
                      "value": "gamma",
                    },
                  ]
                }
                disabled={true}
                getItemProps={[Function]}
                getMenuProps={[Function]}
                getTriggerProps={[Function]}
                highlightedIndex={undefined}
                id="select-86"
                isOpen={false}
                modifiers={
                  Object {
                    "contentWidth": Object {
                      "enabled": true,
                      "fn": [Function],
                    },
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom-start"
                selectedItem={
                  Object {
                    "text": "Alpha",
                    "value": "alpha",
                  }
                }
              >
                <ThemedComponent
                  className="glamor-11"
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  disabled={true}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-86"
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                  selectedItem={
                    Object {
                      "text": "Alpha",
                      "value": "alpha",
                    }
                  }
                >
                  <Themed(Dropdown)
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={true}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-86"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    selectedItem={
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      }
                    }
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Dropdown
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alpha",
                                "value": "alpha",
                              },
                              Object {
                                "text": "Beta",
                                "value": "beta",
                              },
                              Object {
                                "text": "Gamma",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={true}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-86"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                          selectedItem={
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            }
                          }
                        >
                          <Popover
                            className="glamor-11"
                            content={
                              <DropdownContent
                                data={
                                  Array [
                                    Object {
                                      "text": "Alpha",
                                      "value": "alpha",
                                    },
                                    Object {
                                      "text": "Beta",
                                      "value": "beta",
                                    },
                                    Object {
                                      "text": "Gamma",
                                      "value": "gamma",
                                    },
                                  ]
                                }
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                id="select-86-content"
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                placement="bottom-start"
                                wide={undefined}
                              />
                            }
                            disabled={true}
                            focusTriggerOnClose={true}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            hasArrow={true}
                            highlightedIndex={undefined}
                            id="select-86"
                            isOpen={false}
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom"
                            selectedItem={
                              Object {
                                "text": "Alpha",
                                "value": "alpha",
                              }
                            }
                            triggerRef={[Function]}
                            wrapContent={false}
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-86-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              disabled={true}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-86"
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              selectedItem={
                                Object {
                                  "text": "Alpha",
                                  "value": "alpha",
                                }
                              }
                              tag="span"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Manager
                                className="glamor-9"
                                id="select-86"
                                tag="span"
                              >
                                <span
                                  className="glamor-9"
                                  id="select-86"
                                >
                                  <PopoverTrigger
                                    aria-activedescendant={undefined}
                                    aria-describedby="select-86-content"
                                    aria-disabled={true}
                                    aria-expanded={false}
                                    aria-haspopup="listbox"
                                    aria-invalid={undefined}
                                    aria-owns="select-86-content"
                                    aria-readonly={true}
                                    aria-required={undefined}
                                    disabled={undefined}
                                    onBlur={[Function]}
                                    onClick={undefined}
                                    onKeyDown={undefined}
                                    onKeyUp={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <PopoverTrigger
                                      component="span"
                                    >
                                      <Target
                                        className="glamor-7"
                                        component="span"
                                      >
                                        <span
                                          className="glamor-7"
                                        >
                                          <SelectTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-86-content"
                                            aria-disabled={true}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={undefined}
                                            aria-owns="select-86-content"
                                            aria-readonly={true}
                                            aria-required={undefined}
                                            disabled={undefined}
                                            isOpen={false}
                                            item={
                                              Object {
                                                "text": "Alpha",
                                                "value": "alpha",
                                              }
                                            }
                                            name={undefined}
                                            onBlur={[Function]}
                                            onClick={undefined}
                                            onKeyDown={undefined}
                                            onKeyUp={[Function]}
                                            placeholder="Select..."
                                            readOnly={true}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                            triggerRef={[Function]}
                                            variant={undefined}
                                          >
                                            <SelectTrigger
                                              afterItems={
                                                Array [
                                                  <IconArrowDropdownDown
                                                    css={
                                                      Object {
                                                        "margin": "0.5em",
                                                      }
                                                    }
                                                    size="1.5em"
                                                  />,
                                                  <input
                                                    name={undefined}
                                                    type="hidden"
                                                    value="alpha"
                                                  />,
                                                ]
                                              }
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-86-content"
                                              aria-disabled={true}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-86-content"
                                              aria-readonly={true}
                                              aria-required={undefined}
                                              control={[Function]}
                                              controlProps={
                                                Object {
                                                  "hasPlaceholder": false,
                                                  "variant": undefined,
                                                }
                                              }
                                              disabled={undefined}
                                              fauxControlRef={[Function]}
                                              iconEnd={undefined}
                                              iconStart={undefined}
                                              item={
                                                Object {
                                                  "text": "Alpha",
                                                  "value": "alpha",
                                                }
                                              }
                                              onBlur={[Function]}
                                              onClick={undefined}
                                              onKeyDown={undefined}
                                              onKeyUp={[Function]}
                                              readOnly={true}
                                              role="button"
                                              selectedItemVariant={undefined}
                                              size="large"
                                              tabIndex={0}
                                              variant={undefined}
                                            >
                                              <FauxControl
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name={undefined}
                                                      type="hidden"
                                                      value="alpha"
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-86-content"
                                                aria-disabled={true}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-86-content"
                                                aria-readonly={true}
                                                aria-required={undefined}
                                                className="glamor-5"
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": false,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={undefined}
                                                fauxControlRef={[Function]}
                                                iconEnd={undefined}
                                                iconStart={undefined}
                                                item={
                                                  Object {
                                                    "text": "Alpha",
                                                    "value": "alpha",
                                                  }
                                                }
                                                onBlur={[Function]}
                                                onClick={undefined}
                                                onKeyDown={undefined}
                                                onKeyUp={[Function]}
                                                readOnly={true}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={0}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-86-content"
                                                  aria-disabled={true}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-86-content"
                                                  aria-readonly={true}
                                                  aria-required={undefined}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  disabled={undefined}
                                                  innerRef={[Function]}
                                                  item={
                                                    Object {
                                                      "text": "Alpha",
                                                      "value": "alpha",
                                                    }
                                                  }
                                                  onBlur={[Function]}
                                                  onClick={undefined}
                                                  onKeyDown={undefined}
                                                  onKeyUp={[Function]}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <div
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-86-content"
                                                    aria-disabled={true}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-86-content"
                                                    aria-readonly={true}
                                                    aria-required={undefined}
                                                    className="glamor-4"
                                                    onBlur={[Function]}
                                                    onClick={undefined}
                                                    onKeyDown={undefined}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <glamorous(Trigger)
                                                      controlPropsIn={
                                                        Object {
                                                          "hasPlaceholder": false,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={undefined}
                                                      hasPlaceholder={false}
                                                      iconEnd={undefined}
                                                      iconStart={undefined}
                                                      innerRef={undefined}
                                                      key="control"
                                                      prefix={undefined}
                                                      readOnly={true}
                                                      size="large"
                                                      suffix={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-1"
                                                        prefix={undefined}
                                                        readOnly={true}
                                                      >
                                                        <TriggerContent>
                                                          <span
                                                            className="glamor-0"
                                                          >
                                                            Alpha
                                                          </span>
                                                        </TriggerContent>
                                                      </div>
                                                    </glamorous(Trigger)>
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      key="arrow"
                                                      size="1.5em"
                                                    >
                                                      <Icon
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        rtl={false}
                                                        size="1.5em"
                                                      >
                                                        <glamorous(svg)
                                                          aria-hidden={true}
                                                          aria-labelledby={undefined}
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          role="img"
                                                          rtl={false}
                                                          size="1.5em"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            className="glamor-2"
                                                            role="img"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <g>
                                                              <path
                                                                d="M12 17.5l-8-8h16z"
                                                              />
                                                            </g>
                                                          </svg>
                                                        </glamorous(svg)>
                                                      </Icon>
                                                    </IconArrowDropdownDown>
                                                    <input
                                                      key="input"
                                                      name={undefined}
                                                      type="hidden"
                                                      value="alpha"
                                                    />
                                                    <Underlay
                                                      disabled={undefined}
                                                      readOnly={true}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-3"
                                                        readOnly={true}
                                                      />
                                                    </Underlay>
                                                  </div>
                                                </FauxControl>
                                              </FauxControl>
                                            </SelectTrigger>
                                          </SelectTrigger>
                                        </span>
                                      </Target>
                                    </PopoverTrigger>
                                  </PopoverTrigger>
                                </span>
                              </Manager>
                            </Popover>
                          </Popover>
                        </Dropdown>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Dropdown)>
                </ThemedComponent>
              </Select>
            </Select>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples required 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <Select
              data={
                Array [
                  Object {
                    "text": "Alpha",
                    "value": "alpha",
                  },
                  Object {
                    "text": "Beta",
                    "value": "beta",
                  },
                  Object {
                    "text": "Gamma",
                    "value": "gamma",
                  },
                ]
              }
              placeholder="Select..."
              placement="bottom-start"
              required={true}
              size="large"
            >
              <Select
                data={
                  Array [
                    Object {
                      "text": "Alpha",
                      "value": "alpha",
                    },
                    Object {
                      "text": "Beta",
                      "value": "beta",
                    },
                    Object {
                      "text": "Gamma",
                      "value": "gamma",
                    },
                  ]
                }
                disabled={undefined}
                getItemProps={[Function]}
                getMenuProps={[Function]}
                getTriggerProps={[Function]}
                highlightedIndex={undefined}
                id="select-88"
                isOpen={false}
                modifiers={
                  Object {
                    "contentWidth": Object {
                      "enabled": true,
                      "fn": [Function],
                    },
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom-start"
                required={true}
              >
                <ThemedComponent
                  className="glamor-11"
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  disabled={undefined}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-88"
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                  required={true}
                >
                  <Themed(Dropdown)
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-88"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    required={true}
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Dropdown
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alpha",
                                "value": "alpha",
                              },
                              Object {
                                "text": "Beta",
                                "value": "beta",
                              },
                              Object {
                                "text": "Gamma",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-88"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                          required={true}
                        >
                          <Popover
                            className="glamor-11"
                            content={
                              <DropdownContent
                                data={
                                  Array [
                                    Object {
                                      "text": "Alpha",
                                      "value": "alpha",
                                    },
                                    Object {
                                      "text": "Beta",
                                      "value": "beta",
                                    },
                                    Object {
                                      "text": "Gamma",
                                      "value": "gamma",
                                    },
                                  ]
                                }
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                id="select-88-content"
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                placement="bottom-start"
                                wide={undefined}
                              />
                            }
                            disabled={undefined}
                            focusTriggerOnClose={true}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            hasArrow={true}
                            highlightedIndex={undefined}
                            id="select-88"
                            isOpen={false}
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom"
                            required={true}
                            triggerRef={[Function]}
                            wrapContent={false}
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-88-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              disabled={undefined}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-88"
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              required={true}
                              tag="span"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Manager
                                className="glamor-9"
                                id="select-88"
                                tag="span"
                              >
                                <span
                                  className="glamor-9"
                                  id="select-88"
                                >
                                  <PopoverTrigger
                                    aria-activedescendant={undefined}
                                    aria-describedby="select-88-content"
                                    aria-disabled={undefined}
                                    aria-expanded={false}
                                    aria-haspopup="listbox"
                                    aria-invalid={undefined}
                                    aria-owns="select-88-content"
                                    aria-readonly={undefined}
                                    aria-required={true}
                                    disabled={undefined}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <PopoverTrigger
                                      component="span"
                                    >
                                      <Target
                                        className="glamor-7"
                                        component="span"
                                      >
                                        <span
                                          className="glamor-7"
                                        >
                                          <SelectTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-88-content"
                                            aria-disabled={undefined}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={undefined}
                                            aria-owns="select-88-content"
                                            aria-readonly={undefined}
                                            aria-required={true}
                                            disabled={undefined}
                                            isOpen={false}
                                            item={undefined}
                                            name={undefined}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            placeholder="Select..."
                                            readOnly={undefined}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                            triggerRef={[Function]}
                                            variant={undefined}
                                          >
                                            <SelectTrigger
                                              afterItems={
                                                Array [
                                                  <IconArrowDropdownDown
                                                    css={
                                                      Object {
                                                        "margin": "0.5em",
                                                      }
                                                    }
                                                    size="1.5em"
                                                  />,
                                                  <input
                                                    name={undefined}
                                                    type="hidden"
                                                    value=""
                                                  />,
                                                ]
                                              }
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-88-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-88-content"
                                              aria-readonly={undefined}
                                              aria-required={true}
                                              control={[Function]}
                                              controlProps={
                                                Object {
                                                  "hasPlaceholder": true,
                                                  "variant": undefined,
                                                }
                                              }
                                              disabled={undefined}
                                              fauxControlRef={[Function]}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={undefined}
                                              role="button"
                                              selectedItemVariant={undefined}
                                              size="large"
                                              tabIndex={0}
                                              variant={undefined}
                                            >
                                              <FauxControl
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-88-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-88-content"
                                                aria-readonly={undefined}
                                                aria-required={true}
                                                className="glamor-5"
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": true,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={undefined}
                                                fauxControlRef={[Function]}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                readOnly={undefined}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={0}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-88-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-88-content"
                                                  aria-readonly={undefined}
                                                  aria-required={true}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  disabled={undefined}
                                                  innerRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <div
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-88-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-88-content"
                                                    aria-readonly={undefined}
                                                    aria-required={true}
                                                    className="glamor-4"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <glamorous(Trigger)
                                                      controlPropsIn={
                                                        Object {
                                                          "hasPlaceholder": true,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={undefined}
                                                      hasPlaceholder={true}
                                                      iconEnd={undefined}
                                                      iconStart={undefined}
                                                      innerRef={undefined}
                                                      key="control"
                                                      prefix={undefined}
                                                      readOnly={undefined}
                                                      size="large"
                                                      suffix={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-1"
                                                        prefix={undefined}
                                                        readOnly={undefined}
                                                      >
                                                        <TriggerContent>
                                                          <span
                                                            className="glamor-0"
                                                          >
                                                            Select...
                                                          </span>
                                                        </TriggerContent>
                                                      </div>
                                                    </glamorous(Trigger)>
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      key="arrow"
                                                      size="1.5em"
                                                    >
                                                      <Icon
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        rtl={false}
                                                        size="1.5em"
                                                      >
                                                        <glamorous(svg)
                                                          aria-hidden={true}
                                                          aria-labelledby={undefined}
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          role="img"
                                                          rtl={false}
                                                          size="1.5em"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            className="glamor-2"
                                                            role="img"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <g>
                                                              <path
                                                                d="M12 17.5l-8-8h16z"
                                                              />
                                                            </g>
                                                          </svg>
                                                        </glamorous(svg)>
                                                      </Icon>
                                                    </IconArrowDropdownDown>
                                                    <input
                                                      key="input"
                                                      name={undefined}
                                                      type="hidden"
                                                      value=""
                                                    />
                                                    <Underlay
                                                      disabled={undefined}
                                                      readOnly={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-3"
                                                        readOnly={undefined}
                                                      />
                                                    </Underlay>
                                                  </div>
                                                </FauxControl>
                                              </FauxControl>
                                            </SelectTrigger>
                                          </SelectTrigger>
                                        </span>
                                      </Target>
                                    </PopoverTrigger>
                                  </PopoverTrigger>
                                </span>
                              </Manager>
                            </Popover>
                          </Popover>
                        </Dropdown>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Dropdown)>
                </ThemedComponent>
              </Select>
            </Select>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples rtl 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-18,
[data-glamor-18] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-20,
[data-glamor-20] {
  background-color: #fff;
  border-color: #10a35a;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-right: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-right: 0.5em;
}

.glamor-22,
[data-glamor-22] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-22 [role="img"],
[data-glamor-22] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-22 [role="img"]:first-child,
[data-glamor-22] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-22 :not([role="img"]) ~ [role="img"],
[data-glamor-22] :not([role="img"]) ~ [role="img"] {
  fill: #06783f;
}

.glamor-22 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-22] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #06783f;
  margin-right: 0.5em;
}

.glamor-21,
[data-glamor-21] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-21 *,
[data-glamor-21] *,
.glamor-21 *::before,
[data-glamor-21] *::before,
.glamor-21 *::after,
[data-glamor-21] *::after {
  box-sizing: inherit;
}

.glamor-21:hover > div:last-child,
[data-glamor-21]:hover > div:last-child,
.glamor-21[data-simulate-hover] > div:last-child,
[data-glamor-21][data-simulate-hover] > div:last-child {
  border-color: #0a8f4c;
}

.glamor-21:focus > div:last-child,
[data-glamor-21]:focus > div:last-child,
.glamor-21[data-simulate-focus] > div:last-child,
[data-glamor-21][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-21:active > div:last-child,
[data-glamor-21]:active > div:last-child,
.glamor-21[data-simulate-active] > div:last-child,
[data-glamor-21][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-21 [role="img"],
[data-glamor-21] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-21 [role="img"]:first-child,
[data-glamor-21] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-21 :not([role="img"]) ~ [role="img"],
[data-glamor-21] :not([role="img"]) ~ [role="img"] {
  fill: #06783f;
}

.glamor-21 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-21] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #06783f;
  margin-right: 0.5em;
}

.glamor-17,
[data-glamor-17] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-17::placeholder,
[data-glamor-17]::placeholder,
.glamor-17[data-simulate-placeholder],
[data-glamor-17][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-17::-ms-input-placeholder,
[data-glamor-17]::-ms-input-placeholder,
.glamor-17[data-simulate-msinputplaceholder],
[data-glamor-17][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-17:-ms-input-placeholder,
[data-glamor-17]:-ms-input-placeholder,
.glamor-17[data-simulate-msinputplaceholder],
[data-glamor-17][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-17::-ms-clear,
[data-glamor-17]::-ms-clear,
.glamor-17[data-simulate-msclear],
[data-glamor-17][data-simulate-msclear] {
  display: none;
}

.glamor-17:focus ~ div:last-child,
[data-glamor-17]:focus ~ div:last-child,
.glamor-17[data-simulate-focus] ~ div:last-child,
[data-glamor-17][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "Select": [Function],
            "ThemeProvider": [Function],
            "data": Array [
              Object {
                "text": "ألفا",
                "value": "alpha",
              },
              Object {
                "text": "بيتا",
                "value": "beta",
              },
              Object {
                "text": "غاما",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <div
              dir="rtl"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <glamorous(div)>
                    <div
                      className="glamor-33"
                    >
                      <Select
                        data={
                          Array [
                            Object {
                              "text": "ألفا",
                              "value": "alpha",
                            },
                            Object {
                              "text": "بيتا",
                              "value": "beta",
                            },
                            Object {
                              "text": "غاما",
                              "value": "gamma",
                            },
                          ]
                        }
                        placeholder="تحديد..."
                        placement="bottom-start"
                        size="large"
                      >
                        <Select
                          data={
                            Array [
                              Object {
                                "text": "ألفا",
                                "value": "alpha",
                              },
                              Object {
                                "text": "بيتا",
                                "value": "beta",
                              },
                              Object {
                                "text": "غاما",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-119"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <ThemedComponent
                            className="glamor-11"
                            data={
                              Array [
                                Object {
                                  "text": "ألفا",
                                  "value": "alpha",
                                },
                                Object {
                                  "text": "بيتا",
                                  "value": "beta",
                                },
                                Object {
                                  "text": "غاما",
                                  "value": "gamma",
                                },
                              ]
                            }
                            disabled={undefined}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            highlightedIndex={undefined}
                            id="select-119"
                            isOpen={false}
                            modifiers={
                              Object {
                                "contentWidth": Object {
                                  "enabled": true,
                                  "fn": [Function],
                                },
                              }
                            }
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom-start"
                          >
                            <Themed(Dropdown)
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "ألفا",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "بيتا",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "غاما",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-119"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <ThemeProvider>
                                <ThemeProvider>
                                  <Dropdown
                                    className="glamor-11"
                                    data={
                                      Array [
                                        Object {
                                          "text": "ألفا",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "بيتا",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "غاما",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    disabled={undefined}
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    getTriggerProps={[Function]}
                                    highlightedIndex={undefined}
                                    id="select-119"
                                    isOpen={false}
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    placement="bottom-start"
                                  >
                                    <Popover
                                      className="glamor-11"
                                      content={
                                        <DropdownContent
                                          data={
                                            Array [
                                              Object {
                                                "text": "ألفا",
                                                "value": "alpha",
                                              },
                                              Object {
                                                "text": "بيتا",
                                                "value": "beta",
                                              },
                                              Object {
                                                "text": "غاما",
                                                "value": "gamma",
                                              },
                                            ]
                                          }
                                          getItemProps={[Function]}
                                          getMenuProps={[Function]}
                                          id="select-119-content"
                                          modifiers={
                                            Object {
                                              "contentWidth": Object {
                                                "enabled": true,
                                                "fn": [Function],
                                              },
                                            }
                                          }
                                          placement="bottom-start"
                                          wide={undefined}
                                        />
                                      }
                                      disabled={undefined}
                                      focusTriggerOnClose={true}
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      getTriggerProps={[Function]}
                                      hasArrow={true}
                                      highlightedIndex={undefined}
                                      id="select-119"
                                      isOpen={false}
                                      onClose={[Function]}
                                      onOpen={[Function]}
                                      placement="bottom"
                                      triggerRef={[Function]}
                                      wrapContent={false}
                                    >
                                      <Popover
                                        className="glamor-11"
                                        content={
                                          <DropdownContent
                                            data={
                                              Array [
                                                Object {
                                                  "text": "ألفا",
                                                  "value": "alpha",
                                                },
                                                Object {
                                                  "text": "بيتا",
                                                  "value": "beta",
                                                },
                                                Object {
                                                  "text": "غاما",
                                                  "value": "gamma",
                                                },
                                              ]
                                            }
                                            getItemProps={[Function]}
                                            getMenuProps={[Function]}
                                            id="select-119-content"
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                              }
                                            }
                                            placement="bottom-start"
                                            wide={undefined}
                                          />
                                        }
                                        disabled={undefined}
                                        focusTriggerOnClose={true}
                                        getItemProps={[Function]}
                                        getMenuProps={[Function]}
                                        getTriggerProps={[Function]}
                                        hasArrow={true}
                                        highlightedIndex={undefined}
                                        id="select-119"
                                        isOpen={false}
                                        onClose={[Function]}
                                        onOpen={[Function]}
                                        placement="bottom"
                                        tag="span"
                                        triggerRef={[Function]}
                                        wrapContent={false}
                                      >
                                        <Manager
                                          className="glamor-9"
                                          id="select-119"
                                          tag="span"
                                        >
                                          <span
                                            className="glamor-9"
                                            id="select-119"
                                          >
                                            <PopoverTrigger
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-119-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-119-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              disabled={undefined}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              role="button"
                                              tabIndex={0}
                                            >
                                              <PopoverTrigger
                                                component="span"
                                              >
                                                <Target
                                                  className="glamor-7"
                                                  component="span"
                                                >
                                                  <span
                                                    className="glamor-7"
                                                  >
                                                    <SelectTrigger
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-119-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-119-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      disabled={undefined}
                                                      isOpen={false}
                                                      item={undefined}
                                                      name={undefined}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      placeholder="تحديد..."
                                                      readOnly={undefined}
                                                      role="button"
                                                      size="large"
                                                      tabIndex={0}
                                                      triggerRef={[Function]}
                                                      variant={undefined}
                                                    >
                                                      <SelectTrigger
                                                        afterItems={
                                                          Array [
                                                            <IconArrowDropdownDown
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              size="1.5em"
                                                            />,
                                                            <input
                                                              name={undefined}
                                                              type="hidden"
                                                              value=""
                                                            />,
                                                          ]
                                                        }
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-119-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-119-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        control={[Function]}
                                                        controlProps={
                                                          Object {
                                                            "hasPlaceholder": true,
                                                            "variant": undefined,
                                                          }
                                                        }
                                                        disabled={undefined}
                                                        fauxControlRef={[Function]}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        readOnly={undefined}
                                                        role="button"
                                                        selectedItemVariant={undefined}
                                                        size="large"
                                                        tabIndex={0}
                                                        variant={undefined}
                                                      >
                                                        <FauxControl
                                                          afterItems={
                                                            Array [
                                                              <IconArrowDropdownDown
                                                                css={
                                                                  Object {
                                                                    "margin": "0.5em",
                                                                  }
                                                                }
                                                                size="1.5em"
                                                              />,
                                                              <input
                                                                name={undefined}
                                                                type="hidden"
                                                                value=""
                                                              />,
                                                            ]
                                                          }
                                                          aria-activedescendant={undefined}
                                                          aria-describedby="select-119-content"
                                                          aria-disabled={undefined}
                                                          aria-expanded={false}
                                                          aria-haspopup="listbox"
                                                          aria-invalid={undefined}
                                                          aria-owns="select-119-content"
                                                          aria-readonly={undefined}
                                                          aria-required={undefined}
                                                          className="glamor-5"
                                                          control={[Function]}
                                                          controlProps={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          fauxControlRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          readOnly={undefined}
                                                          role="button"
                                                          selectedItemVariant={undefined}
                                                          size="large"
                                                          tabIndex={0}
                                                          variant={undefined}
                                                        >
                                                          <FauxControl
                                                            aria-activedescendant={undefined}
                                                            aria-describedby="select-119-content"
                                                            aria-disabled={undefined}
                                                            aria-expanded={false}
                                                            aria-haspopup="listbox"
                                                            aria-invalid={undefined}
                                                            aria-owns="select-119-content"
                                                            aria-readonly={undefined}
                                                            aria-required={undefined}
                                                            className="glamor-5"
                                                            control={[Function]}
                                                            disabled={undefined}
                                                            innerRef={[Function]}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="button"
                                                            selectedItemVariant={undefined}
                                                            tabIndex={0}
                                                            variant={undefined}
                                                          >
                                                            <div
                                                              aria-activedescendant={undefined}
                                                              aria-describedby="select-119-content"
                                                              aria-disabled={undefined}
                                                              aria-expanded={false}
                                                              aria-haspopup="listbox"
                                                              aria-invalid={undefined}
                                                              aria-owns="select-119-content"
                                                              aria-readonly={undefined}
                                                              aria-required={undefined}
                                                              className="glamor-4"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <glamorous(Trigger)
                                                                controlPropsIn={
                                                                  Object {
                                                                    "hasPlaceholder": true,
                                                                    "variant": undefined,
                                                                  }
                                                                }
                                                                disabled={undefined}
                                                                hasPlaceholder={true}
                                                                iconEnd={undefined}
                                                                iconStart={undefined}
                                                                innerRef={undefined}
                                                                key="control"
                                                                prefix={undefined}
                                                                readOnly={undefined}
                                                                size="large"
                                                                suffix={undefined}
                                                                variant={undefined}
                                                              >
                                                                <div
                                                                  className="glamor-1"
                                                                  prefix={undefined}
                                                                  readOnly={undefined}
                                                                >
                                                                  <TriggerContent>
                                                                    <span
                                                                      className="glamor-0"
                                                                    >
                                                                      تحديد...
                                                                    </span>
                                                                  </TriggerContent>
                                                                </div>
                                                              </glamorous(Trigger)>
                                                              <IconArrowDropdownDown
                                                                css={
                                                                  Object {
                                                                    "margin": "0.5em",
                                                                  }
                                                                }
                                                                key="arrow"
                                                                size="1.5em"
                                                              >
                                                                <Icon
                                                                  css={
                                                                    Object {
                                                                      "margin": "0.5em",
                                                                    }
                                                                  }
                                                                  rtl={false}
                                                                  size="1.5em"
                                                                >
                                                                  <glamorous(svg)
                                                                    aria-hidden={true}
                                                                    aria-labelledby={undefined}
                                                                    css={
                                                                      Object {
                                                                        "margin": "0.5em",
                                                                      }
                                                                    }
                                                                    role="img"
                                                                    rtl={false}
                                                                    size="1.5em"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={undefined}
                                                                      className="glamor-2"
                                                                      role="img"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <g>
                                                                        <path
                                                                          d="M12 17.5l-8-8h16z"
                                                                        />
                                                                      </g>
                                                                    </svg>
                                                                  </glamorous(svg)>
                                                                </Icon>
                                                              </IconArrowDropdownDown>
                                                              <input
                                                                key="input"
                                                                name={undefined}
                                                                type="hidden"
                                                                value=""
                                                              />
                                                              <Underlay
                                                                disabled={undefined}
                                                                readOnly={undefined}
                                                                variant={undefined}
                                                              >
                                                                <div
                                                                  className="glamor-3"
                                                                  readOnly={undefined}
                                                                />
                                                              </Underlay>
                                                            </div>
                                                          </FauxControl>
                                                        </FauxControl>
                                                      </SelectTrigger>
                                                    </SelectTrigger>
                                                  </span>
                                                </Target>
                                              </PopoverTrigger>
                                            </PopoverTrigger>
                                          </span>
                                        </Manager>
                                      </Popover>
                                    </Popover>
                                  </Dropdown>
                                </ThemeProvider>
                              </ThemeProvider>
                            </Themed(Dropdown)>
                          </ThemedComponent>
                        </Select>
                      </Select>
                      <Select
                        data={
                          Array [
                            Object {
                              "text": "ألفا",
                              "value": "alpha",
                            },
                            Object {
                              "text": "بيتا",
                              "value": "beta",
                            },
                            Object {
                              "text": "غاما",
                              "value": "gamma",
                            },
                          ]
                        }
                        placeholder="تحديد..."
                        placement="bottom-start"
                        size="large"
                        variant="success"
                      >
                        <Select
                          data={
                            Array [
                              Object {
                                "text": "ألفا",
                                "value": "alpha",
                              },
                              Object {
                                "text": "بيتا",
                                "value": "beta",
                              },
                              Object {
                                "text": "غاما",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-121"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <ThemedComponent
                            className="glamor-11"
                            data={
                              Array [
                                Object {
                                  "text": "ألفا",
                                  "value": "alpha",
                                },
                                Object {
                                  "text": "بيتا",
                                  "value": "beta",
                                },
                                Object {
                                  "text": "غاما",
                                  "value": "gamma",
                                },
                              ]
                            }
                            disabled={undefined}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            highlightedIndex={undefined}
                            id="select-121"
                            isOpen={false}
                            modifiers={
                              Object {
                                "contentWidth": Object {
                                  "enabled": true,
                                  "fn": [Function],
                                },
                              }
                            }
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom-start"
                          >
                            <Themed(Dropdown)
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "ألفا",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "بيتا",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "غاما",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-121"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <ThemeProvider>
                                <ThemeProvider>
                                  <Dropdown
                                    className="glamor-11"
                                    data={
                                      Array [
                                        Object {
                                          "text": "ألفا",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "بيتا",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "غاما",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    disabled={undefined}
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    getTriggerProps={[Function]}
                                    highlightedIndex={undefined}
                                    id="select-121"
                                    isOpen={false}
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    placement="bottom-start"
                                  >
                                    <Popover
                                      className="glamor-11"
                                      content={
                                        <DropdownContent
                                          data={
                                            Array [
                                              Object {
                                                "text": "ألفا",
                                                "value": "alpha",
                                              },
                                              Object {
                                                "text": "بيتا",
                                                "value": "beta",
                                              },
                                              Object {
                                                "text": "غاما",
                                                "value": "gamma",
                                              },
                                            ]
                                          }
                                          getItemProps={[Function]}
                                          getMenuProps={[Function]}
                                          id="select-121-content"
                                          modifiers={
                                            Object {
                                              "contentWidth": Object {
                                                "enabled": true,
                                                "fn": [Function],
                                              },
                                            }
                                          }
                                          placement="bottom-start"
                                          wide={undefined}
                                        />
                                      }
                                      disabled={undefined}
                                      focusTriggerOnClose={true}
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      getTriggerProps={[Function]}
                                      hasArrow={true}
                                      highlightedIndex={undefined}
                                      id="select-121"
                                      isOpen={false}
                                      onClose={[Function]}
                                      onOpen={[Function]}
                                      placement="bottom"
                                      triggerRef={[Function]}
                                      wrapContent={false}
                                    >
                                      <Popover
                                        className="glamor-11"
                                        content={
                                          <DropdownContent
                                            data={
                                              Array [
                                                Object {
                                                  "text": "ألفا",
                                                  "value": "alpha",
                                                },
                                                Object {
                                                  "text": "بيتا",
                                                  "value": "beta",
                                                },
                                                Object {
                                                  "text": "غاما",
                                                  "value": "gamma",
                                                },
                                              ]
                                            }
                                            getItemProps={[Function]}
                                            getMenuProps={[Function]}
                                            id="select-121-content"
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                              }
                                            }
                                            placement="bottom-start"
                                            wide={undefined}
                                          />
                                        }
                                        disabled={undefined}
                                        focusTriggerOnClose={true}
                                        getItemProps={[Function]}
                                        getMenuProps={[Function]}
                                        getTriggerProps={[Function]}
                                        hasArrow={true}
                                        highlightedIndex={undefined}
                                        id="select-121"
                                        isOpen={false}
                                        onClose={[Function]}
                                        onOpen={[Function]}
                                        placement="bottom"
                                        tag="span"
                                        triggerRef={[Function]}
                                        wrapContent={false}
                                      >
                                        <Manager
                                          className="glamor-9"
                                          id="select-121"
                                          tag="span"
                                        >
                                          <span
                                            className="glamor-9"
                                            id="select-121"
                                          >
                                            <PopoverTrigger
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-121-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-121-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              disabled={undefined}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              role="button"
                                              tabIndex={0}
                                            >
                                              <PopoverTrigger
                                                component="span"
                                              >
                                                <Target
                                                  className="glamor-7"
                                                  component="span"
                                                >
                                                  <span
                                                    className="glamor-7"
                                                  >
                                                    <SelectTrigger
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-121-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-121-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      disabled={undefined}
                                                      isOpen={false}
                                                      item={undefined}
                                                      name={undefined}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      placeholder="تحديد..."
                                                      readOnly={undefined}
                                                      role="button"
                                                      size="large"
                                                      tabIndex={0}
                                                      triggerRef={[Function]}
                                                      variant="success"
                                                    >
                                                      <SelectTrigger
                                                        afterItems={
                                                          Array [
                                                            <IconArrowDropdownDown
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              size="1.5em"
                                                            />,
                                                            <input
                                                              name={undefined}
                                                              type="hidden"
                                                              value=""
                                                            />,
                                                          ]
                                                        }
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-121-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-121-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        control={[Function]}
                                                        controlProps={
                                                          Object {
                                                            "hasPlaceholder": true,
                                                            "variant": undefined,
                                                          }
                                                        }
                                                        disabled={undefined}
                                                        fauxControlRef={[Function]}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        readOnly={undefined}
                                                        role="button"
                                                        selectedItemVariant={undefined}
                                                        size="large"
                                                        tabIndex={0}
                                                        variant="success"
                                                      >
                                                        <FauxControl
                                                          afterItems={
                                                            Array [
                                                              <IconArrowDropdownDown
                                                                css={
                                                                  Object {
                                                                    "margin": "0.5em",
                                                                  }
                                                                }
                                                                size="1.5em"
                                                              />,
                                                              <input
                                                                name={undefined}
                                                                type="hidden"
                                                                value=""
                                                              />,
                                                            ]
                                                          }
                                                          aria-activedescendant={undefined}
                                                          aria-describedby="select-121-content"
                                                          aria-disabled={undefined}
                                                          aria-expanded={false}
                                                          aria-haspopup="listbox"
                                                          aria-invalid={undefined}
                                                          aria-owns="select-121-content"
                                                          aria-readonly={undefined}
                                                          aria-required={undefined}
                                                          className="glamor-22"
                                                          control={[Function]}
                                                          controlProps={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          fauxControlRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          readOnly={undefined}
                                                          role="button"
                                                          selectedItemVariant={undefined}
                                                          size="large"
                                                          tabIndex={0}
                                                          variant="success"
                                                        >
                                                          <FauxControl
                                                            aria-activedescendant={undefined}
                                                            aria-describedby="select-121-content"
                                                            aria-disabled={undefined}
                                                            aria-expanded={false}
                                                            aria-haspopup="listbox"
                                                            aria-invalid={undefined}
                                                            aria-owns="select-121-content"
                                                            aria-readonly={undefined}
                                                            aria-required={undefined}
                                                            className="glamor-22"
                                                            control={[Function]}
                                                            disabled={undefined}
                                                            innerRef={[Function]}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="button"
                                                            selectedItemVariant={undefined}
                                                            tabIndex={0}
                                                            variant="success"
                                                          >
                                                            <div
                                                              aria-activedescendant={undefined}
                                                              aria-describedby="select-121-content"
                                                              aria-disabled={undefined}
                                                              aria-expanded={false}
                                                              aria-haspopup="listbox"
                                                              aria-invalid={undefined}
                                                              aria-owns="select-121-content"
                                                              aria-readonly={undefined}
                                                              aria-required={undefined}
                                                              className="glamor-21"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <glamorous(Trigger)
                                                                controlPropsIn={
                                                                  Object {
                                                                    "hasPlaceholder": true,
                                                                    "variant": undefined,
                                                                  }
                                                                }
                                                                disabled={undefined}
                                                                hasPlaceholder={true}
                                                                iconEnd={undefined}
                                                                iconStart={undefined}
                                                                innerRef={undefined}
                                                                key="control"
                                                                prefix={undefined}
                                                                readOnly={undefined}
                                                                size="large"
                                                                suffix={undefined}
                                                                variant="success"
                                                              >
                                                                <div
                                                                  className="glamor-17"
                                                                  prefix={undefined}
                                                                  readOnly={undefined}
                                                                >
                                                                  <TriggerContent>
                                                                    <span
                                                                      className="glamor-0"
                                                                    >
                                                                      تحديد...
                                                                    </span>
                                                                  </TriggerContent>
                                                                </div>
                                                              </glamorous(Trigger)>
                                                              <IconSuccess
                                                                key="iconEnd"
                                                                size="1.5em"
                                                              >
                                                                <Icon
                                                                  rtl={false}
                                                                  size="1.5em"
                                                                >
                                                                  <glamorous(svg)
                                                                    aria-hidden={true}
                                                                    aria-labelledby={undefined}
                                                                    role="img"
                                                                    rtl={false}
                                                                    size="1.5em"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={undefined}
                                                                      className="glamor-18"
                                                                      role="img"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <g>
                                                                        <path
                                                                          d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                                                        />
                                                                      </g>
                                                                    </svg>
                                                                  </glamorous(svg)>
                                                                </Icon>
                                                              </IconSuccess>
                                                              <IconArrowDropdownDown
                                                                css={
                                                                  Object {
                                                                    "margin": "0.5em",
                                                                  }
                                                                }
                                                                key="arrow"
                                                                size="1.5em"
                                                              >
                                                                <Icon
                                                                  css={
                                                                    Object {
                                                                      "margin": "0.5em",
                                                                    }
                                                                  }
                                                                  rtl={false}
                                                                  size="1.5em"
                                                                >
                                                                  <glamorous(svg)
                                                                    aria-hidden={true}
                                                                    aria-labelledby={undefined}
                                                                    css={
                                                                      Object {
                                                                        "margin": "0.5em",
                                                                      }
                                                                    }
                                                                    role="img"
                                                                    rtl={false}
                                                                    size="1.5em"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={undefined}
                                                                      className="glamor-2"
                                                                      role="img"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <g>
                                                                        <path
                                                                          d="M12 17.5l-8-8h16z"
                                                                        />
                                                                      </g>
                                                                    </svg>
                                                                  </glamorous(svg)>
                                                                </Icon>
                                                              </IconArrowDropdownDown>
                                                              <input
                                                                key="input"
                                                                name={undefined}
                                                                type="hidden"
                                                                value=""
                                                              />
                                                              <Underlay
                                                                disabled={undefined}
                                                                readOnly={undefined}
                                                                variant="success"
                                                              >
                                                                <div
                                                                  className="glamor-20"
                                                                  readOnly={undefined}
                                                                />
                                                              </Underlay>
                                                            </div>
                                                          </FauxControl>
                                                        </FauxControl>
                                                      </SelectTrigger>
                                                    </SelectTrigger>
                                                  </span>
                                                </Target>
                                              </PopoverTrigger>
                                            </PopoverTrigger>
                                          </span>
                                        </Manager>
                                      </Popover>
                                    </Popover>
                                  </Dropdown>
                                </ThemeProvider>
                              </ThemeProvider>
                            </Themed(Dropdown)>
                          </ThemedComponent>
                        </Select>
                      </Select>
                    </div>
                  </glamorous(div)>
                </ThemeProvider>
              </ThemeProvider>
            </div>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples scrolling-container 1`] = `
.glamor-32,
[data-glamor-32] {
  width: 100%;
}

.glamor-32 > span,
[data-glamor-32] > span {
  width: 100%;
}

.glamor-30,
[data-glamor-30] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-30 *,
[data-glamor-30] *,
.glamor-30 *::before,
[data-glamor-30] *::before,
.glamor-30 *::after,
[data-glamor-30] *::after {
  box-sizing: inherit;
}

.glamor-30 > span,
[data-glamor-30] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-26,
[data-glamor-26] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #fff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  user-select: none;
  width: 14em;
  z-index: 100;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-26 *,
[data-glamor-26] *,
.glamor-26 *::before,
[data-glamor-26] *::before,
.glamor-26 *::after,
[data-glamor-26] *::after {
  box-sizing: inherit;
}

.glamor-25,
[data-glamor-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.glamor-25 *,
[data-glamor-25] *,
.glamor-25 *::before,
[data-glamor-25] *::before,
.glamor-25 *::after,
[data-glamor-25] *::after {
  box-sizing: inherit;
}

.glamor-24,
[data-glamor-24] {
  margin: 0.5em 0;
}

.glamor-24:first-child,
[data-glamor-24]:first-child,
.glamor-24 + .glamor-24,
[data-glamor-24] + [data-glamor-24] {
  margin-top: 0;
}

.glamor-24:last-child,
[data-glamor-24]:last-child,
.glamor-24[data-simulate-lastchild],
[data-glamor-24][data-simulate-lastchild] {
  margin-bottom: 0;
}

.glamor-12,
[data-glamor-12] {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  justify-content: space-between;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-11,
[data-glamor-11] {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  flex-wrap: wrap;
  font-size: 0.875em;
  justify-content: space-between;
  padding: 0.21428571428571427em 0 0.2857142857142857em;
  white-space: normal;
  word-break: break-all;
  -webkit-flex: 1 1 auto;
  -webkit-box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-9,
[data-glamor-9] {
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.glamor-10,
[data-glamor-10] {
  color: #58606e;
  font-size: 0.75em;
  padding-top: 0.25em;
  word-break: break-word;
}

.glamor-13,
[data-glamor-13] {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.glamor-13:focus,
[data-glamor-13]:focus,
.glamor-13[data-simulate-focus],
[data-glamor-13][data-simulate-focus] {
  background-color: #f5f7fa;
  outline: 0;
}

.glamor-13:hover,
[data-glamor-13]:hover,
.glamor-13[data-simulate-hover],
[data-glamor-13][data-simulate-hover] {
  background-color: #f5f7fa;
}

.glamor-13:active,
[data-glamor-13]:active,
.glamor-13[data-simulate-active],
[data-glamor-13][data-simulate-active] {
  background-color: #ebeff5;
}

.glamor-13 [role="img"],
[data-glamor-13] [role="img"] {
  box-sizing: content-box;
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-13 [role="img"]:first-child,
[data-glamor-13] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-13 [role="img"]:last-child,
[data-glamor-13] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-44,
[data-glamor-44] {
  position: relative;
}

.glamor-38,
[data-glamor-38] {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.glamor-37,
[data-glamor-37] {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-42,
[data-glamor-42] {
  left: 0;
  position: absolute;
  top: 0;
}

.glamor-41,
[data-glamor-41] {
  box-sizing: border-box;
  color: #2e6fd9;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.glamor-41 *,
[data-glamor-41] *,
.glamor-41 *::before,
[data-glamor-41] *::before,
.glamor-41 *::after,
[data-glamor-41] *::after {
  box-sizing: inherit;
}

.glamor-41:focus,
[data-glamor-41]:focus,
.glamor-41[data-simulate-focus],
[data-glamor-41][data-simulate-focus] {
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #2e6fd9;
  text-decoration: none;
}

.glamor-41:hover,
[data-glamor-41]:hover,
.glamor-41[data-simulate-hover],
[data-glamor-41][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #2e6fd9;
  text-decoration: none;
}

.glamor-41:active,
[data-glamor-41]:active,
.glamor-41[data-simulate-active],
[data-glamor-41][data-simulate-active] {
  background-color: #ebeff5;
  color: #2e6fd9;
}

.glamor-41::-moz-focus-inner,
[data-glamor-41]::-moz-focus-inner,
.glamor-41[data-simulate-mozfocusinner],
[data-glamor-41][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-41 [role="img"],
[data-glamor-41] [role="img"] {
  box-sizing: content-box;
  fill: currentColor;
  display: block;
}

.glamor-41 [role="img"]:first-child,
[data-glamor-41] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-41 [role="img"]:last-child,
[data-glamor-41] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-41 [role="img"]:only-child,
[data-glamor-41] [role="img"]:only-child {
  margin: 0;
}

.glamor-40,
[data-glamor-40] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-39,
[data-glamor-39] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "ScrollParent": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <ScrollBox
              autoCenter={true}
              height={360}
            >
              <glamorous(div)>
                <div
                  className="glamor-44"
                >
                  <glamorous(div)
                    height={360}
                  >
                    <div
                      className="glamor-38"
                    >
                      <glamorous(div)
                        scrollAreaHeight={360}
                      >
                        <div
                          className="glamor-37"
                        >
                          <Select
                            data={
                              Array [
                                Object {
                                  "text": "Alpha",
                                  "value": "alpha",
                                },
                                Object {
                                  "text": "Beta",
                                  "value": "beta",
                                },
                                Object {
                                  "text": "Gamma",
                                  "value": "gamma",
                                },
                              ]
                            }
                            isOpen={true}
                          >
                            <div
                              style={
                                Object {
                                  "width": "14em",
                                }
                              }
                            >
                              <Select
                                data={
                                  Array [
                                    Object {
                                      "text": "Alpha",
                                      "value": "alpha",
                                    },
                                    Object {
                                      "text": "Beta",
                                      "value": "beta",
                                    },
                                    Object {
                                      "text": "Gamma",
                                      "value": "gamma",
                                    },
                                  ]
                                }
                                isOpen={true}
                                placeholder="Select..."
                                placement="bottom-start"
                                size="large"
                              >
                                <Select
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  disabled={undefined}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  highlightedIndex={undefined}
                                  id="select-113"
                                  isOpen={true}
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom-start"
                                >
                                  <ThemedComponent
                                    className="glamor-32"
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    disabled={undefined}
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    getTriggerProps={[Function]}
                                    highlightedIndex={undefined}
                                    id="select-113"
                                    isOpen={true}
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    placement="bottom-start"
                                  >
                                    <Themed(Dropdown)
                                      className="glamor-32"
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      disabled={undefined}
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      getTriggerProps={[Function]}
                                      highlightedIndex={undefined}
                                      id="select-113"
                                      isOpen={true}
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      onClose={[Function]}
                                      onOpen={[Function]}
                                      placement="bottom-start"
                                    >
                                      <ThemeProvider>
                                        <ThemeProvider>
                                          <Dropdown
                                            className="glamor-32"
                                            data={
                                              Array [
                                                Object {
                                                  "text": "Alpha",
                                                  "value": "alpha",
                                                },
                                                Object {
                                                  "text": "Beta",
                                                  "value": "beta",
                                                },
                                                Object {
                                                  "text": "Gamma",
                                                  "value": "gamma",
                                                },
                                              ]
                                            }
                                            disabled={undefined}
                                            getItemProps={[Function]}
                                            getMenuProps={[Function]}
                                            getTriggerProps={[Function]}
                                            highlightedIndex={undefined}
                                            id="select-113"
                                            isOpen={true}
                                            modifiers={
                                              Object {
                                                "contentWidth": Object {
                                                  "enabled": true,
                                                  "fn": [Function],
                                                },
                                              }
                                            }
                                            onClose={[Function]}
                                            onOpen={[Function]}
                                            placement="bottom-start"
                                          >
                                            <Popover
                                              className="glamor-32"
                                              content={
                                                <DropdownContent
                                                  data={
                                                    Array [
                                                      Object {
                                                        "text": "Alpha",
                                                        "value": "alpha",
                                                      },
                                                      Object {
                                                        "text": "Beta",
                                                        "value": "beta",
                                                      },
                                                      Object {
                                                        "text": "Gamma",
                                                        "value": "gamma",
                                                      },
                                                    ]
                                                  }
                                                  getItemProps={[Function]}
                                                  getMenuProps={[Function]}
                                                  id="select-113-content"
                                                  modifiers={
                                                    Object {
                                                      "contentWidth": Object {
                                                        "enabled": true,
                                                        "fn": [Function],
                                                      },
                                                    }
                                                  }
                                                  placement="bottom-start"
                                                  wide={undefined}
                                                />
                                              }
                                              disabled={undefined}
                                              focusTriggerOnClose={true}
                                              getItemProps={[Function]}
                                              getMenuProps={[Function]}
                                              getTriggerProps={[Function]}
                                              hasArrow={true}
                                              highlightedIndex={undefined}
                                              id="select-113"
                                              isOpen={true}
                                              onClose={[Function]}
                                              onOpen={[Function]}
                                              placement="bottom"
                                              triggerRef={[Function]}
                                              wrapContent={false}
                                            >
                                              <Popover
                                                className="glamor-32"
                                                content={
                                                  <DropdownContent
                                                    data={
                                                      Array [
                                                        Object {
                                                          "text": "Alpha",
                                                          "value": "alpha",
                                                        },
                                                        Object {
                                                          "text": "Beta",
                                                          "value": "beta",
                                                        },
                                                        Object {
                                                          "text": "Gamma",
                                                          "value": "gamma",
                                                        },
                                                      ]
                                                    }
                                                    getItemProps={[Function]}
                                                    getMenuProps={[Function]}
                                                    id="select-113-content"
                                                    modifiers={
                                                      Object {
                                                        "contentWidth": Object {
                                                          "enabled": true,
                                                          "fn": [Function],
                                                        },
                                                      }
                                                    }
                                                    placement="bottom-start"
                                                    wide={undefined}
                                                  />
                                                }
                                                disabled={undefined}
                                                focusTriggerOnClose={true}
                                                getItemProps={[Function]}
                                                getMenuProps={[Function]}
                                                getTriggerProps={[Function]}
                                                hasArrow={true}
                                                highlightedIndex={undefined}
                                                id="select-113"
                                                isOpen={true}
                                                onClose={[Function]}
                                                onOpen={[Function]}
                                                placement="bottom"
                                                tag="span"
                                                triggerRef={[Function]}
                                                wrapContent={false}
                                              >
                                                <Manager
                                                  className="glamor-30"
                                                  id="select-113"
                                                  tag="span"
                                                >
                                                  <span
                                                    className="glamor-30"
                                                    id="select-113"
                                                  >
                                                    <PopoverTrigger
                                                      aria-activedescendant="select-113-menu"
                                                      aria-describedby="select-113-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={true}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-113-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      disabled={undefined}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <PopoverTrigger
                                                        component="span"
                                                      >
                                                        <Target
                                                          className="glamor-7"
                                                          component="span"
                                                        >
                                                          <span
                                                            className="glamor-7"
                                                          >
                                                            <SelectTrigger
                                                              aria-activedescendant="select-113-menu"
                                                              aria-describedby="select-113-content"
                                                              aria-disabled={undefined}
                                                              aria-expanded={true}
                                                              aria-haspopup="listbox"
                                                              aria-invalid={undefined}
                                                              aria-owns="select-113-content"
                                                              aria-readonly={undefined}
                                                              aria-required={undefined}
                                                              disabled={undefined}
                                                              isOpen={true}
                                                              item={undefined}
                                                              name={undefined}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              placeholder="Select..."
                                                              readOnly={undefined}
                                                              role="button"
                                                              size="large"
                                                              tabIndex={0}
                                                              triggerRef={[Function]}
                                                              variant={undefined}
                                                            >
                                                              <SelectTrigger
                                                                afterItems={
                                                                  Array [
                                                                    <IconArrowDropdownUp
                                                                      css={
                                                                        Object {
                                                                          "margin": "0.5em",
                                                                        }
                                                                      }
                                                                      size="1.5em"
                                                                    />,
                                                                    <input
                                                                      name={undefined}
                                                                      type="hidden"
                                                                      value=""
                                                                    />,
                                                                  ]
                                                                }
                                                                aria-activedescendant="select-113-menu"
                                                                aria-describedby="select-113-content"
                                                                aria-disabled={undefined}
                                                                aria-expanded={true}
                                                                aria-haspopup="listbox"
                                                                aria-invalid={undefined}
                                                                aria-owns="select-113-content"
                                                                aria-readonly={undefined}
                                                                aria-required={undefined}
                                                                control={[Function]}
                                                                controlProps={
                                                                  Object {
                                                                    "hasPlaceholder": true,
                                                                    "variant": undefined,
                                                                  }
                                                                }
                                                                disabled={undefined}
                                                                fauxControlRef={[Function]}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                readOnly={undefined}
                                                                role="button"
                                                                selectedItemVariant={undefined}
                                                                size="large"
                                                                tabIndex={0}
                                                                variant={undefined}
                                                              >
                                                                <FauxControl
                                                                  afterItems={
                                                                    Array [
                                                                      <IconArrowDropdownUp
                                                                        css={
                                                                          Object {
                                                                            "margin": "0.5em",
                                                                          }
                                                                        }
                                                                        size="1.5em"
                                                                      />,
                                                                      <input
                                                                        name={undefined}
                                                                        type="hidden"
                                                                        value=""
                                                                      />,
                                                                    ]
                                                                  }
                                                                  aria-activedescendant="select-113-menu"
                                                                  aria-describedby="select-113-content"
                                                                  aria-disabled={undefined}
                                                                  aria-expanded={true}
                                                                  aria-haspopup="listbox"
                                                                  aria-invalid={undefined}
                                                                  aria-owns="select-113-content"
                                                                  aria-readonly={undefined}
                                                                  aria-required={undefined}
                                                                  className="glamor-5"
                                                                  control={[Function]}
                                                                  controlProps={
                                                                    Object {
                                                                      "hasPlaceholder": true,
                                                                      "variant": undefined,
                                                                    }
                                                                  }
                                                                  disabled={undefined}
                                                                  fauxControlRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  readOnly={undefined}
                                                                  role="button"
                                                                  selectedItemVariant={undefined}
                                                                  size="large"
                                                                  tabIndex={0}
                                                                  variant={undefined}
                                                                >
                                                                  <FauxControl
                                                                    aria-activedescendant="select-113-menu"
                                                                    aria-describedby="select-113-content"
                                                                    aria-disabled={undefined}
                                                                    aria-expanded={true}
                                                                    aria-haspopup="listbox"
                                                                    aria-invalid={undefined}
                                                                    aria-owns="select-113-content"
                                                                    aria-readonly={undefined}
                                                                    aria-required={undefined}
                                                                    className="glamor-5"
                                                                    control={[Function]}
                                                                    disabled={undefined}
                                                                    innerRef={[Function]}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    role="button"
                                                                    selectedItemVariant={undefined}
                                                                    tabIndex={0}
                                                                    variant={undefined}
                                                                  >
                                                                    <div
                                                                      aria-activedescendant="select-113-menu"
                                                                      aria-describedby="select-113-content"
                                                                      aria-disabled={undefined}
                                                                      aria-expanded={true}
                                                                      aria-haspopup="listbox"
                                                                      aria-invalid={undefined}
                                                                      aria-owns="select-113-content"
                                                                      aria-readonly={undefined}
                                                                      aria-required={undefined}
                                                                      className="glamor-4"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <glamorous(Trigger)
                                                                        controlPropsIn={
                                                                          Object {
                                                                            "hasPlaceholder": true,
                                                                            "variant": undefined,
                                                                          }
                                                                        }
                                                                        disabled={undefined}
                                                                        hasPlaceholder={true}
                                                                        iconEnd={undefined}
                                                                        iconStart={undefined}
                                                                        innerRef={undefined}
                                                                        key="control"
                                                                        prefix={undefined}
                                                                        readOnly={undefined}
                                                                        size="large"
                                                                        suffix={undefined}
                                                                        variant={undefined}
                                                                      >
                                                                        <div
                                                                          className="glamor-1"
                                                                          prefix={undefined}
                                                                          readOnly={undefined}
                                                                        >
                                                                          <TriggerContent>
                                                                            <span
                                                                              className="glamor-0"
                                                                            >
                                                                              Select...
                                                                            </span>
                                                                          </TriggerContent>
                                                                        </div>
                                                                      </glamorous(Trigger)>
                                                                      <IconArrowDropdownUp
                                                                        css={
                                                                          Object {
                                                                            "margin": "0.5em",
                                                                          }
                                                                        }
                                                                        key="arrow"
                                                                        size="1.5em"
                                                                      >
                                                                        <Icon
                                                                          css={
                                                                            Object {
                                                                              "margin": "0.5em",
                                                                            }
                                                                          }
                                                                          rtl={false}
                                                                          size="1.5em"
                                                                        >
                                                                          <glamorous(svg)
                                                                            aria-hidden={true}
                                                                            aria-labelledby={undefined}
                                                                            css={
                                                                              Object {
                                                                                "margin": "0.5em",
                                                                              }
                                                                            }
                                                                            role="img"
                                                                            rtl={false}
                                                                            size="1.5em"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              aria-labelledby={undefined}
                                                                              className="glamor-2"
                                                                              role="img"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <g>
                                                                                <path
                                                                                  d="M12 7.5l8 8H4z"
                                                                                />
                                                                              </g>
                                                                            </svg>
                                                                          </glamorous(svg)>
                                                                        </Icon>
                                                                      </IconArrowDropdownUp>
                                                                      <input
                                                                        key="input"
                                                                        name={undefined}
                                                                        type="hidden"
                                                                        value=""
                                                                      />
                                                                      <Underlay
                                                                        disabled={undefined}
                                                                        readOnly={undefined}
                                                                        variant={undefined}
                                                                      >
                                                                        <div
                                                                          className="glamor-3"
                                                                          readOnly={undefined}
                                                                        />
                                                                      </Underlay>
                                                                    </div>
                                                                  </FauxControl>
                                                                </FauxControl>
                                                              </SelectTrigger>
                                                            </SelectTrigger>
                                                          </span>
                                                        </Target>
                                                      </PopoverTrigger>
                                                    </PopoverTrigger>
                                                    <DropdownContent
                                                      data={
                                                        Array [
                                                          Object {
                                                            "text": "Alpha",
                                                            "value": "alpha",
                                                          },
                                                          Object {
                                                            "text": "Beta",
                                                            "value": "beta",
                                                          },
                                                          Object {
                                                            "text": "Gamma",
                                                            "value": "gamma",
                                                          },
                                                        ]
                                                      }
                                                      getItemProps={[Function]}
                                                      getMenuProps={[Function]}
                                                      id="select-113-content"
                                                      modifiers={
                                                        Object {
                                                          "contentWidth": Object {
                                                            "enabled": true,
                                                            "fn": [Function],
                                                          },
                                                        }
                                                      }
                                                      placement="bottom-start"
                                                      wide={undefined}
                                                    >
                                                      <DropdownContent
                                                        id="select-113-content"
                                                        modifiers={
                                                          Object {
                                                            "contentWidth": Object {
                                                              "enabled": true,
                                                              "fn": [Function],
                                                            },
                                                          }
                                                        }
                                                        placement="bottom-start"
                                                        wide={undefined}
                                                      >
                                                        <ThemedComponent
                                                          className="glamor-26"
                                                          id="select-113-content"
                                                          modifiers={
                                                            Object {
                                                              "contentWidth": Object {
                                                                "enabled": true,
                                                                "fn": [Function],
                                                              },
                                                            }
                                                          }
                                                          placement="bottom-start"
                                                        >
                                                          <RtlPopper
                                                            className="glamor-26"
                                                            id="select-113-content"
                                                            modifiers={
                                                              Object {
                                                                "contentWidth": Object {
                                                                  "enabled": true,
                                                                  "fn": [Function],
                                                                },
                                                              }
                                                            }
                                                            placement="bottom-start"
                                                            theme={
                                                              Object {
                                                                "DropdownContent_backgroundColor": "#fff",
                                                                "DropdownContent_borderColor": "#ebeff5",
                                                                "DropdownContent_borderRadius": "0.1875em",
                                                                "DropdownContent_boxShadow": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                                                "DropdownContent_margin": "5px",
                                                                "DropdownContent_zIndex": 100,
                                                                "DropdownIcon_fill": "#2e6fd9",
                                                                "DropdownIcon_marginHorizontal": "0.5em",
                                                                "Dropdown_backgroundColor": "#fff",
                                                                "Dropdown_borderColor": "#c8d1e0",
                                                                "Dropdown_borderColor_active": "#c8d1e0",
                                                                "Dropdown_borderColor_focus": "#c8d1e0",
                                                                "Dropdown_borderColor_hover": "#2e6fd9",
                                                                "Dropdown_borderRadius": "0.1875em",
                                                                "Dropdown_borderWidth": "1px",
                                                                "Dropdown_boxShadow_active": "0 0 0 1px #fff, 0 0 0 2px #2e6fd9",
                                                                "Dropdown_boxShadow_focus": "0 0 0 1px #fff, 0 0 0 2px #2e6fd9",
                                                                "Dropdown_color_placeholder": "#8e99ab",
                                                                "Dropdown_color_text": "#58606e",
                                                                "Dropdown_fontSize": "0.875em",
                                                                "Dropdown_fontSize_small": "0.75em",
                                                                "Dropdown_height_jumbo": "3.25em",
                                                                "Dropdown_height_large": "2.5em",
                                                                "Dropdown_height_medium": "2em",
                                                                "Dropdown_height_small": "1.5em",
                                                                "Dropdown_paddingHorizontal": "1em",
                                                                "Dropdown_paddingHorizontal_small": "0.5em",
                                                                "backgroundColor_danger": "#db2929",
                                                                "backgroundColor_danger_active": "#c71818",
                                                                "backgroundColor_danger_activeMuted": "#f79999",
                                                                "backgroundColor_danger_focus": "#db2929",
                                                                "backgroundColor_danger_hover": "#eb4d4d",
                                                                "backgroundColor_danger_muted": "#fabebe",
                                                                "backgroundColor_disabled": "#ebeff5",
                                                                "backgroundColor_input": "#fff",
                                                                "backgroundColor_link_focus": "#dde3ed",
                                                                "backgroundColor_success": "#0a8f4c",
                                                                "backgroundColor_success_active": "#06783f",
                                                                "backgroundColor_success_activeMuted": "#95f5c3",
                                                                "backgroundColor_success_focus": "#0a8f4c",
                                                                "backgroundColor_success_hover": "#10a35a",
                                                                "backgroundColor_success_muted": "#c0fadc",
                                                                "backgroundColor_warning": "#e05b2b",
                                                                "backgroundColor_warning_active": "#cf4615",
                                                                "backgroundColor_warning_activeMuted": "#fab69d",
                                                                "backgroundColor_warning_focus": "#e05b2b",
                                                                "backgroundColor_warning_hover": "#ed774c",
                                                                "backgroundColor_warning_muted": "#fcd0c0",
                                                                "borderColor": "#c8d1e0",
                                                                "borderColor_active": "#2e6fd9",
                                                                "borderColor_danger": "#db2929",
                                                                "borderColor_danger_active": "#c71818",
                                                                "borderColor_danger_focus": "#c71818",
                                                                "borderColor_danger_hover": "#c71818",
                                                                "borderColor_danger_muted": "#f27474",
                                                                "borderColor_focus": "#2e6fd9",
                                                                "borderColor_hover": "#2e6fd9",
                                                                "borderColor_success": "#10a35a",
                                                                "borderColor_success_active": "#0a8f4c",
                                                                "borderColor_success_focus": "#0a8f4c",
                                                                "borderColor_success_hover": "#0a8f4c",
                                                                "borderColor_success_muted": "#67eba7",
                                                                "borderColor_warning": "#e05b2b",
                                                                "borderColor_warning_active": "#cf4615",
                                                                "borderColor_warning_focus": "#cf4615",
                                                                "borderColor_warning_hover": "#cf4615",
                                                                "borderColor_warning_muted": "#f59776",
                                                                "borderRadius_1": "0.1875em",
                                                                "breakpoint_medium": 768,
                                                                "breakpoint_narrow": 512,
                                                                "breakpoint_wide": 1024,
                                                                "color_black": "#1d1f24",
                                                                "color_caption": "#58606e",
                                                                "color_gray_10": "#f5f7fa",
                                                                "color_gray_100": "#333840",
                                                                "color_gray_20": "#ebeff5",
                                                                "color_gray_30": "#dde3ed",
                                                                "color_gray_40": "#c8d1e0",
                                                                "color_gray_50": "#afbacc",
                                                                "color_gray_60": "#8e99ab",
                                                                "color_gray_70": "#707a8a",
                                                                "color_gray_80": "#58606e",
                                                                "color_gray_90": "#434a54",
                                                                "color_placeholder": "#8e99ab",
                                                                "color_text": "#333840",
                                                                "color_text_danger": "#db2929",
                                                                "color_text_danger_active": "#c71818",
                                                                "color_text_danger_focus": "#db2929",
                                                                "color_text_danger_hover": "#eb4d4d",
                                                                "color_text_disabled": "#afbacc",
                                                                "color_text_ondanger": "#fff",
                                                                "color_text_onprimary": "#fff",
                                                                "color_text_onsuccess": "#fff",
                                                                "color_text_onwarning": "#fff",
                                                                "color_text_primary": "#2e6fd9",
                                                                "color_text_primary_active": "#1f5dc2",
                                                                "color_text_primary_focus": "#2e6fd9",
                                                                "color_text_primary_hover": "#4a89e8",
                                                                "color_text_success": "#06783f",
                                                                "color_text_success_active": "#046132",
                                                                "color_text_success_focus": "#06783f",
                                                                "color_text_success_hover": "#0a8f4c",
                                                                "color_text_warning": "#cf4615",
                                                                "color_text_warning_active": "#bd3909",
                                                                "color_text_warning_focus": "#cf4615",
                                                                "color_text_warning_hover": "#e05b2b",
                                                                "color_theme_10": "#e6eefc",
                                                                "color_theme_100": "#0f397d",
                                                                "color_theme_20": "#c2dbfc",
                                                                "color_theme_30": "#9dc2fa",
                                                                "color_theme_40": "#72a5f2",
                                                                "color_theme_50": "#4a89e8",
                                                                "color_theme_60": "#2e6fd9",
                                                                "color_theme_70": "#1f5dc2",
                                                                "color_theme_80": "#164ea8",
                                                                "color_theme_90": "#114091",
                                                                "color_white": "#fff",
                                                                "direction": "ltr",
                                                                "fontFamily": "Open Sans",
                                                                "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                                                                "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                                                                "fontSize_base": 16,
                                                                "fontSize_h1": "2.125em",
                                                                "fontSize_h2": "1.75em",
                                                                "fontSize_h3": "1.375em",
                                                                "fontSize_h4": "1.125em",
                                                                "fontSize_h5": "0.875em",
                                                                "fontSize_h6": "0.875em",
                                                                "fontSize_mouse": "0.6875em",
                                                                "fontSize_prose": "1em",
                                                                "fontSize_ui": "0.875em",
                                                                "fontWeight_bold": 700,
                                                                "fontWeight_extraBold": 800,
                                                                "fontWeight_regular": 400,
                                                                "fontWeight_semiBold": 600,
                                                                "lineHeight": 1.25,
                                                                "lineHeight_prose": 1.5,
                                                                "shadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                                                                "shadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                                                "shadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                                                                "shadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                                                                "shadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                                                                "size_jumbo": "3.25em",
                                                                "size_large": "2.5em",
                                                                "size_medium": "2em",
                                                                "size_small": "1.5em",
                                                                "space_inline_lg": "1.5em",
                                                                "space_inline_md": "1em",
                                                                "space_inline_sm": "0.5em",
                                                                "space_inline_xl": "2em",
                                                                "space_inline_xs": "0.25em",
                                                                "space_inline_xxl": "4em",
                                                                "space_inline_xxs": "0.125em",
                                                                "space_inset_lg": "1.5em",
                                                                "space_inset_md": "1em",
                                                                "space_inset_sm": "0.5em",
                                                                "space_stack_lg": "1.5em",
                                                                "space_stack_md": "1em",
                                                                "space_stack_sm": "0.5em",
                                                                "space_stack_xl": "2em",
                                                                "space_stack_xs": "0.25em",
                                                                "space_stack_xxl": "4em",
                                                                "space_stack_xxs": "0.125em",
                                                                "zIndex_100": 100,
                                                                "zIndex_1600": 1600,
                                                                "zIndex_200": 200,
                                                                "zIndex_400": 400,
                                                                "zIndex_800": 800,
                                                              }
                                                            }
                                                          >
                                                            <Popper
                                                              className="glamor-26"
                                                              component="div"
                                                              eventsEnabled={true}
                                                              id="select-113-content"
                                                              modifiers={
                                                                Object {
                                                                  "contentWidth": Object {
                                                                    "enabled": true,
                                                                    "fn": [Function],
                                                                  },
                                                                }
                                                              }
                                                              placement="bottom-start"
                                                            >
                                                              <div
                                                                className="glamor-26"
                                                                data-placement={undefined}
                                                                data-x-out-of-boundaries={undefined}
                                                                id="select-113-content"
                                                                style={
                                                                  Object {
                                                                    "opacity": 0,
                                                                    "pointerEvents": "none",
                                                                    "position": "absolute",
                                                                  }
                                                                }
                                                              >
                                                                <Menu
                                                                  data={
                                                                    Array [
                                                                      Object {
                                                                        "text": "Alpha",
                                                                        "value": "alpha",
                                                                      },
                                                                      Object {
                                                                        "text": "Beta",
                                                                        "value": "beta",
                                                                      },
                                                                      Object {
                                                                        "text": "Gamma",
                                                                        "value": "gamma",
                                                                      },
                                                                    ]
                                                                  }
                                                                  getItemProps={[Function]}
                                                                  id="select-113-menu"
                                                                  role="listbox"
                                                                >
                                                                  <Menu
                                                                    id="select-113-menu"
                                                                    role="listbox"
                                                                  >
                                                                    <div
                                                                      className="glamor-25"
                                                                      id="select-113-menu"
                                                                      role="listbox"
                                                                    >
                                                                      <MenuGroup
                                                                        key="0"
                                                                        title={undefined}
                                                                      >
                                                                        <MenuGroup>
                                                                          <div
                                                                            className="glamor-24"
                                                                          >
                                                                            <MenuItem
                                                                              aria-disabled={undefined}
                                                                              aria-selected={false}
                                                                              id="select-113-item-0"
                                                                              isHighlighted={false}
                                                                              item={
                                                                                Object {
                                                                                  "text": "Alpha",
                                                                                  "value": "alpha",
                                                                                }
                                                                              }
                                                                              key="0"
                                                                              onClick={[Function]}
                                                                              role="option"
                                                                              tabIndex={null}
                                                                              value="alpha"
                                                                            >
                                                                              <MenuItem
                                                                                aria-disabled={undefined}
                                                                                aria-selected={false}
                                                                                disabled={undefined}
                                                                                id="select-113-item-0"
                                                                                isHighlighted={false}
                                                                                item={
                                                                                  Object {
                                                                                    "text": "Alpha",
                                                                                    "value": "alpha",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                role="option"
                                                                                tabIndex={null}
                                                                                value="alpha"
                                                                                variant={undefined}
                                                                              >
                                                                                <div
                                                                                  aria-disabled={undefined}
                                                                                  aria-selected={false}
                                                                                  className="glamor-13"
                                                                                  id="select-113-item-0"
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  role="option"
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <glamorous(span)>
                                                                                    <span
                                                                                      className="glamor-12"
                                                                                    >
                                                                                      <glamorous(span)>
                                                                                        <span
                                                                                          className="glamor-11"
                                                                                        >
                                                                                          <glamorous(span)>
                                                                                            <span
                                                                                              className="glamor-9"
                                                                                            >
                                                                                              Alpha
                                                                                            </span>
                                                                                          </glamorous(span)>
                                                                                          <glamorous(span)>
                                                                                            <span
                                                                                              className="glamor-10"
                                                                                            />
                                                                                          </glamorous(span)>
                                                                                        </span>
                                                                                      </glamorous(span)>
                                                                                    </span>
                                                                                  </glamorous(span)>
                                                                                </div>
                                                                              </MenuItem>
                                                                            </MenuItem>
                                                                            <MenuItem
                                                                              aria-disabled={undefined}
                                                                              aria-selected={false}
                                                                              id="select-113-item-1"
                                                                              isHighlighted={false}
                                                                              item={
                                                                                Object {
                                                                                  "text": "Beta",
                                                                                  "value": "beta",
                                                                                }
                                                                              }
                                                                              key="1"
                                                                              onClick={[Function]}
                                                                              role="option"
                                                                              tabIndex={null}
                                                                              value="beta"
                                                                            >
                                                                              <MenuItem
                                                                                aria-disabled={undefined}
                                                                                aria-selected={false}
                                                                                disabled={undefined}
                                                                                id="select-113-item-1"
                                                                                isHighlighted={false}
                                                                                item={
                                                                                  Object {
                                                                                    "text": "Beta",
                                                                                    "value": "beta",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                role="option"
                                                                                tabIndex={null}
                                                                                value="beta"
                                                                                variant={undefined}
                                                                              >
                                                                                <div
                                                                                  aria-disabled={undefined}
                                                                                  aria-selected={false}
                                                                                  className="glamor-13"
                                                                                  id="select-113-item-1"
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  role="option"
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <glamorous(span)>
                                                                                    <span
                                                                                      className="glamor-12"
                                                                                    >
                                                                                      <glamorous(span)>
                                                                                        <span
                                                                                          className="glamor-11"
                                                                                        >
                                                                                          <glamorous(span)>
                                                                                            <span
                                                                                              className="glamor-9"
                                                                                            >
                                                                                              Beta
                                                                                            </span>
                                                                                          </glamorous(span)>
                                                                                          <glamorous(span)>
                                                                                            <span
                                                                                              className="glamor-10"
                                                                                            />
                                                                                          </glamorous(span)>
                                                                                        </span>
                                                                                      </glamorous(span)>
                                                                                    </span>
                                                                                  </glamorous(span)>
                                                                                </div>
                                                                              </MenuItem>
                                                                            </MenuItem>
                                                                            <MenuItem
                                                                              aria-disabled={undefined}
                                                                              aria-selected={false}
                                                                              id="select-113-item-2"
                                                                              isHighlighted={false}
                                                                              item={
                                                                                Object {
                                                                                  "text": "Gamma",
                                                                                  "value": "gamma",
                                                                                }
                                                                              }
                                                                              key="2"
                                                                              onClick={[Function]}
                                                                              role="option"
                                                                              tabIndex={null}
                                                                              value="gamma"
                                                                            >
                                                                              <MenuItem
                                                                                aria-disabled={undefined}
                                                                                aria-selected={false}
                                                                                disabled={undefined}
                                                                                id="select-113-item-2"
                                                                                isHighlighted={false}
                                                                                item={
                                                                                  Object {
                                                                                    "text": "Gamma",
                                                                                    "value": "gamma",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                role="option"
                                                                                tabIndex={null}
                                                                                value="gamma"
                                                                                variant={undefined}
                                                                              >
                                                                                <div
                                                                                  aria-disabled={undefined}
                                                                                  aria-selected={false}
                                                                                  className="glamor-13"
                                                                                  id="select-113-item-2"
                                                                                  onClick={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  role="option"
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <glamorous(span)>
                                                                                    <span
                                                                                      className="glamor-12"
                                                                                    >
                                                                                      <glamorous(span)>
                                                                                        <span
                                                                                          className="glamor-11"
                                                                                        >
                                                                                          <glamorous(span)>
                                                                                            <span
                                                                                              className="glamor-9"
                                                                                            >
                                                                                              Gamma
                                                                                            </span>
                                                                                          </glamorous(span)>
                                                                                          <glamorous(span)>
                                                                                            <span
                                                                                              className="glamor-10"
                                                                                            />
                                                                                          </glamorous(span)>
                                                                                        </span>
                                                                                      </glamorous(span)>
                                                                                    </span>
                                                                                  </glamorous(span)>
                                                                                </div>
                                                                              </MenuItem>
                                                                            </MenuItem>
                                                                          </div>
                                                                        </MenuGroup>
                                                                      </MenuGroup>
                                                                    </div>
                                                                  </Menu>
                                                                </Menu>
                                                              </div>
                                                            </Popper>
                                                          </RtlPopper>
                                                        </ThemedComponent>
                                                      </DropdownContent>
                                                    </DropdownContent>
                                                    <EventListener
                                                      listeners={
                                                        Array [
                                                          Object {
                                                            "event": "click",
                                                            "handler": [Function],
                                                            "options": true,
                                                            "target": "document",
                                                          },
                                                          Object {
                                                            "event": "keydown",
                                                            "handler": [Function],
                                                            "options": true,
                                                            "target": "document",
                                                          },
                                                        ]
                                                      }
                                                    />
                                                  </span>
                                                </Manager>
                                              </Popover>
                                            </Popover>
                                          </Dropdown>
                                        </ThemeProvider>
                                      </ThemeProvider>
                                    </Themed(Dropdown)>
                                  </ThemedComponent>
                                </Select>
                              </Select>
                            </div>
                          </Select>
                        </div>
                      </glamorous(div)>
                    </div>
                  </glamorous(div)>
                  <glamorous(Button)
                    minimal={true}
                    onClick={[Function]}
                    size="small"
                  >
                    <Button
                      className="glamor-42"
                      element="button"
                      minimal={true}
                      onClick={[Function]}
                      size="small"
                      type="button"
                      variant="regular"
                    >
                      <glamorous(button)
                        className="glamor-42"
                        element="button"
                        minimal={true}
                        onClick={[Function]}
                        size="small"
                        text="Re-center"
                        type="button"
                        variant="regular"
                      >
                        <button
                          className="glamor-41"
                          onClick={[Function]}
                          type="button"
                        >
                          <glamorous(span)>
                            <span
                              className="glamor-40"
                            >
                              <glamorous(span)
                                size="small"
                              >
                                <span
                                  className="glamor-39"
                                >
                                  Re-center
                                </span>
                              </glamorous(span)>
                            </span>
                          </glamorous(span)>
                        </button>
                      </glamorous(button)>
                    </Button>
                  </glamorous(Button)>
                </div>
              </glamorous(div)>
            </ScrollBox>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples size 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-33,
[data-glamor-33] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-33::placeholder,
[data-glamor-33]::placeholder,
.glamor-33[data-simulate-placeholder],
[data-glamor-33][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-33::-ms-input-placeholder,
[data-glamor-33]::-ms-input-placeholder,
.glamor-33[data-simulate-msinputplaceholder],
[data-glamor-33][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-33:-ms-input-placeholder,
[data-glamor-33]:-ms-input-placeholder,
.glamor-33[data-simulate-msinputplaceholder],
[data-glamor-33][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-33::-ms-clear,
[data-glamor-33]::-ms-clear,
.glamor-33[data-simulate-msclear],
[data-glamor-33][data-simulate-msclear] {
  display: none;
}

.glamor-33:focus ~ div:last-child,
[data-glamor-33]:focus ~ div:last-child,
.glamor-33[data-simulate-focus] ~ div:last-child,
[data-glamor-33][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-34,
[data-glamor-34] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.75em;
  font-style: italic;
  height: 2em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
  margin: 0.25em;
}

.glamor-17,
[data-glamor-17] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.2857142857142856em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-17::placeholder,
[data-glamor-17]::placeholder,
.glamor-17[data-simulate-placeholder],
[data-glamor-17][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-17::-ms-input-placeholder,
[data-glamor-17]::-ms-input-placeholder,
.glamor-17[data-simulate-msinputplaceholder],
[data-glamor-17][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-17:-ms-input-placeholder,
[data-glamor-17]:-ms-input-placeholder,
.glamor-17[data-simulate-msinputplaceholder],
[data-glamor-17][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-17::-ms-clear,
[data-glamor-17]::-ms-clear,
.glamor-17[data-simulate-msclear],
[data-glamor-17][data-simulate-msclear] {
  display: none;
}

.glamor-17:focus ~ div:last-child,
[data-glamor-17]:focus ~ div:last-child,
.glamor-17[data-simulate-focus] ~ div:last-child,
[data-glamor-17][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-18,
[data-glamor-18] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
  margin: 0.5em;
}

.glamor-49,
[data-glamor-49] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 3.7142857142857144em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-49::placeholder,
[data-glamor-49]::placeholder,
.glamor-49[data-simulate-placeholder],
[data-glamor-49][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-49::-ms-input-placeholder,
[data-glamor-49]::-ms-input-placeholder,
.glamor-49[data-simulate-msinputplaceholder],
[data-glamor-49][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-49:-ms-input-placeholder,
[data-glamor-49]:-ms-input-placeholder,
.glamor-49[data-simulate-msinputplaceholder],
[data-glamor-49][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-49::-ms-clear,
[data-glamor-49]::-ms-clear,
.glamor-49[data-simulate-msclear],
[data-glamor-49][data-simulate-msclear] {
  display: none;
}

.glamor-49:focus ~ div:last-child,
[data-glamor-49]:focus ~ div:last-child,
.glamor-49[data-simulate-focus] ~ div:last-child,
[data-glamor-49][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-50,
[data-glamor-50] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.875em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-64"
              >
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Small"
                  placement="bottom-start"
                  size="small"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-92"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-11"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-92"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-11"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-92"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-92"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-11"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-92-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-92"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-11"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-92-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-92"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-9"
                                    id="select-92"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-9"
                                      id="select-92"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-92-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-92-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-92-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-92-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Small"
                                                readOnly={undefined}
                                                role="button"
                                                size="small"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.25em",
                                                          }
                                                        }
                                                        size="medium"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-92-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-92-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="small"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.25em",
                                                            }
                                                          }
                                                          size="medium"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-92-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-92-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="small"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-92-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-92-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-92-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-92-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="small"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-1"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Small
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.25em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="medium"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.25em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="medium"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.25em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="medium"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Medium"
                  placement="bottom-start"
                  size="medium"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-94"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-11"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-94"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-11"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-94"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-94"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-11"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-94-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-94"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-11"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-94-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-94"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-9"
                                    id="select-94"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-9"
                                      id="select-94"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-94-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-94-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-94-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-94-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Medium"
                                                readOnly={undefined}
                                                role="button"
                                                size="medium"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="medium"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-94-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-94-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="medium"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="medium"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-94-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-94-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="medium"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-94-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-94-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-94-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-94-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="medium"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-17"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Medium
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="medium"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="medium"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="medium"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-18"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Large"
                  placement="bottom-start"
                  size="large"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-96"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-11"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-96"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-11"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-96"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-96"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-11"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-96-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-96"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-11"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-96-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-96"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-9"
                                    id="select-96"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-9"
                                      id="select-96"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-96-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-96-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-96-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-96-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Large"
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-96-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-96-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-96-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-96-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-96-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-96-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-96-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-96-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-33"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Large
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-34"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Jumbo"
                  placement="bottom-start"
                  size="jumbo"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-98"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-11"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-98"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-11"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-98"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-11"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-98"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-11"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-98-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-98"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-11"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-98-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-98"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-9"
                                    id="select-98"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-9"
                                      id="select-98"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-98-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-98-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-7"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-7"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-98-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-98-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Jumbo"
                                                readOnly={undefined}
                                                role="button"
                                                size="jumbo"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant={undefined}
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.875em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-98-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-98-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="jumbo"
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.875em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-98-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-98-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-5"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="jumbo"
                                                    tabIndex={0}
                                                    variant={undefined}
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-98-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-98-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-5"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-98-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-98-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-4"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="jumbo"
                                                          suffix={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-49"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Jumbo
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.875em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.875em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.875em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-50"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            className="glamor-3"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples trigger-ref 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-17,
[data-glamor-17] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-18,
[data-glamor-18] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.glamor-18 *,
[data-glamor-18] *,
.glamor-18 *::before,
[data-glamor-18] *::before,
.glamor-18 *::after,
[data-glamor-18] *::after {
  box-sizing: inherit;
}

.glamor-18:focus,
[data-glamor-18]:focus,
.glamor-18[data-simulate-focus],
[data-glamor-18][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.glamor-18:hover,
[data-glamor-18]:hover,
.glamor-18[data-simulate-hover],
[data-glamor-18][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.glamor-18:active,
[data-glamor-18]:active,
.glamor-18[data-simulate-active],
[data-glamor-18][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.glamor-18::-moz-focus-inner,
[data-glamor-18]::-moz-focus-inner,
.glamor-18[data-simulate-mozfocusinner],
[data-glamor-18][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-18 [role="img"],
[data-glamor-18] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.glamor-18 [role="img"]:first-child,
[data-glamor-18] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-18 [role="img"]:last-child,
[data-glamor-18] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-18 [role="img"]:only-child,
[data-glamor-18] [role="img"]:only-child {
  margin: 0;
}

.glamor-16,
[data-glamor-16] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.glamor-16:first-child,
[data-glamor-16]:first-child,
.glamor-16[data-simulate-firstchild],
[data-glamor-16][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.glamor-16:last-child,
[data-glamor-16]:last-child,
.glamor-16[data-simulate-lastchild],
[data-glamor-16][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Button": [Function],
            "Component": [Function],
            "DemoLayout": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <MyForm>
                <glamorous(div)>
                  <div
                    className="glamor-19"
                  >
                    <Select
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      placeholder="Select..."
                      placement="bottom-start"
                      size="large"
                      triggerRef={[Function]}
                    >
                      <Select
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-117"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemedComponent
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alpha",
                                "value": "alpha",
                              },
                              Object {
                                "text": "Beta",
                                "value": "beta",
                              },
                              Object {
                                "text": "Gamma",
                                "value": "gamma",
                              },
                            ]
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-117"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <Themed(Dropdown)
                            className="glamor-11"
                            data={
                              Array [
                                Object {
                                  "text": "Alpha",
                                  "value": "alpha",
                                },
                                Object {
                                  "text": "Beta",
                                  "value": "beta",
                                },
                                Object {
                                  "text": "Gamma",
                                  "value": "gamma",
                                },
                              ]
                            }
                            disabled={undefined}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            highlightedIndex={undefined}
                            id="select-117"
                            isOpen={false}
                            modifiers={
                              Object {
                                "contentWidth": Object {
                                  "enabled": true,
                                  "fn": [Function],
                                },
                              }
                            }
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom-start"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Dropdown
                                  className="glamor-11"
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alpha",
                                        "value": "alpha",
                                      },
                                      Object {
                                        "text": "Beta",
                                        "value": "beta",
                                      },
                                      Object {
                                        "text": "Gamma",
                                        "value": "gamma",
                                      },
                                    ]
                                  }
                                  disabled={undefined}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  highlightedIndex={undefined}
                                  id="select-117"
                                  isOpen={false}
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom-start"
                                >
                                  <Popover
                                    className="glamor-11"
                                    content={
                                      <DropdownContent
                                        data={
                                          Array [
                                            Object {
                                              "text": "Alpha",
                                              "value": "alpha",
                                            },
                                            Object {
                                              "text": "Beta",
                                              "value": "beta",
                                            },
                                            Object {
                                              "text": "Gamma",
                                              "value": "gamma",
                                            },
                                          ]
                                        }
                                        getItemProps={[Function]}
                                        getMenuProps={[Function]}
                                        id="select-117-content"
                                        modifiers={
                                          Object {
                                            "contentWidth": Object {
                                              "enabled": true,
                                              "fn": [Function],
                                            },
                                          }
                                        }
                                        placement="bottom-start"
                                        wide={undefined}
                                      />
                                    }
                                    disabled={undefined}
                                    focusTriggerOnClose={true}
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    getTriggerProps={[Function]}
                                    hasArrow={true}
                                    highlightedIndex={undefined}
                                    id="select-117"
                                    isOpen={false}
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    placement="bottom"
                                    triggerRef={[Function]}
                                    wrapContent={false}
                                  >
                                    <Popover
                                      className="glamor-11"
                                      content={
                                        <DropdownContent
                                          data={
                                            Array [
                                              Object {
                                                "text": "Alpha",
                                                "value": "alpha",
                                              },
                                              Object {
                                                "text": "Beta",
                                                "value": "beta",
                                              },
                                              Object {
                                                "text": "Gamma",
                                                "value": "gamma",
                                              },
                                            ]
                                          }
                                          getItemProps={[Function]}
                                          getMenuProps={[Function]}
                                          id="select-117-content"
                                          modifiers={
                                            Object {
                                              "contentWidth": Object {
                                                "enabled": true,
                                                "fn": [Function],
                                              },
                                            }
                                          }
                                          placement="bottom-start"
                                          wide={undefined}
                                        />
                                      }
                                      disabled={undefined}
                                      focusTriggerOnClose={true}
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      getTriggerProps={[Function]}
                                      hasArrow={true}
                                      highlightedIndex={undefined}
                                      id="select-117"
                                      isOpen={false}
                                      onClose={[Function]}
                                      onOpen={[Function]}
                                      placement="bottom"
                                      tag="span"
                                      triggerRef={[Function]}
                                      wrapContent={false}
                                    >
                                      <Manager
                                        className="glamor-9"
                                        id="select-117"
                                        tag="span"
                                      >
                                        <span
                                          className="glamor-9"
                                          id="select-117"
                                        >
                                          <PopoverTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-117-content"
                                            aria-disabled={undefined}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={undefined}
                                            aria-owns="select-117-content"
                                            aria-readonly={undefined}
                                            aria-required={undefined}
                                            disabled={undefined}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <PopoverTrigger
                                              component="span"
                                            >
                                              <Target
                                                className="glamor-7"
                                                component="span"
                                              >
                                                <span
                                                  className="glamor-7"
                                                >
                                                  <SelectTrigger
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-117-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-117-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    disabled={undefined}
                                                    isOpen={false}
                                                    item={undefined}
                                                    name={undefined}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    placeholder="Select..."
                                                    readOnly={undefined}
                                                    role="button"
                                                    size="large"
                                                    tabIndex={0}
                                                    triggerRef={[Function]}
                                                    variant={undefined}
                                                  >
                                                    <SelectTrigger
                                                      afterItems={
                                                        Array [
                                                          <IconArrowDropdownDown
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            size="1.5em"
                                                          />,
                                                          <input
                                                            name={undefined}
                                                            type="hidden"
                                                            value=""
                                                          />,
                                                        ]
                                                      }
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-117-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-117-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      control={[Function]}
                                                      controlProps={
                                                        Object {
                                                          "hasPlaceholder": true,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={undefined}
                                                      fauxControlRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      readOnly={undefined}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      size="large"
                                                      tabIndex={0}
                                                      variant={undefined}
                                                    >
                                                      <FauxControl
                                                        afterItems={
                                                          Array [
                                                            <IconArrowDropdownDown
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              size="1.5em"
                                                            />,
                                                            <input
                                                              name={undefined}
                                                              type="hidden"
                                                              value=""
                                                            />,
                                                          ]
                                                        }
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-117-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-117-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-5"
                                                        control={[Function]}
                                                        controlProps={
                                                          Object {
                                                            "hasPlaceholder": true,
                                                            "variant": undefined,
                                                          }
                                                        }
                                                        disabled={undefined}
                                                        fauxControlRef={[Function]}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        readOnly={undefined}
                                                        role="button"
                                                        selectedItemVariant={undefined}
                                                        size="large"
                                                        tabIndex={0}
                                                        variant={undefined}
                                                      >
                                                        <FauxControl
                                                          aria-activedescendant={undefined}
                                                          aria-describedby="select-117-content"
                                                          aria-disabled={undefined}
                                                          aria-expanded={false}
                                                          aria-haspopup="listbox"
                                                          aria-invalid={undefined}
                                                          aria-owns="select-117-content"
                                                          aria-readonly={undefined}
                                                          aria-required={undefined}
                                                          className="glamor-5"
                                                          control={[Function]}
                                                          disabled={undefined}
                                                          innerRef={[Function]}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          role="button"
                                                          selectedItemVariant={undefined}
                                                          tabIndex={0}
                                                          variant={undefined}
                                                        >
                                                          <div
                                                            aria-activedescendant={undefined}
                                                            aria-describedby="select-117-content"
                                                            aria-disabled={undefined}
                                                            aria-expanded={false}
                                                            aria-haspopup="listbox"
                                                            aria-invalid={undefined}
                                                            aria-owns="select-117-content"
                                                            aria-readonly={undefined}
                                                            aria-required={undefined}
                                                            className="glamor-4"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <glamorous(Trigger)
                                                              controlPropsIn={
                                                                Object {
                                                                  "hasPlaceholder": true,
                                                                  "variant": undefined,
                                                                }
                                                              }
                                                              disabled={undefined}
                                                              hasPlaceholder={true}
                                                              iconEnd={undefined}
                                                              iconStart={undefined}
                                                              innerRef={undefined}
                                                              key="control"
                                                              prefix={undefined}
                                                              readOnly={undefined}
                                                              size="large"
                                                              suffix={undefined}
                                                              variant={undefined}
                                                            >
                                                              <div
                                                                className="glamor-1"
                                                                prefix={undefined}
                                                                readOnly={undefined}
                                                              >
                                                                <TriggerContent>
                                                                  <span
                                                                    className="glamor-0"
                                                                  >
                                                                    Select...
                                                                  </span>
                                                                </TriggerContent>
                                                              </div>
                                                            </glamorous(Trigger)>
                                                            <IconArrowDropdownDown
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              key="arrow"
                                                              size="1.5em"
                                                            >
                                                              <Icon
                                                                css={
                                                                  Object {
                                                                    "margin": "0.5em",
                                                                  }
                                                                }
                                                                rtl={false}
                                                                size="1.5em"
                                                              >
                                                                <glamorous(svg)
                                                                  aria-hidden={true}
                                                                  aria-labelledby={undefined}
                                                                  css={
                                                                    Object {
                                                                      "margin": "0.5em",
                                                                    }
                                                                  }
                                                                  role="img"
                                                                  rtl={false}
                                                                  size="1.5em"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={undefined}
                                                                    className="glamor-2"
                                                                    role="img"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <g>
                                                                      <path
                                                                        d="M12 17.5l-8-8h16z"
                                                                      />
                                                                    </g>
                                                                  </svg>
                                                                </glamorous(svg)>
                                                              </Icon>
                                                            </IconArrowDropdownDown>
                                                            <input
                                                              key="input"
                                                              name={undefined}
                                                              type="hidden"
                                                              value=""
                                                            />
                                                            <Underlay
                                                              disabled={undefined}
                                                              readOnly={undefined}
                                                              variant={undefined}
                                                            >
                                                              <div
                                                                className="glamor-3"
                                                                readOnly={undefined}
                                                              />
                                                            </Underlay>
                                                          </div>
                                                        </FauxControl>
                                                      </FauxControl>
                                                    </SelectTrigger>
                                                  </SelectTrigger>
                                                </span>
                                              </Target>
                                            </PopoverTrigger>
                                          </PopoverTrigger>
                                        </span>
                                      </Manager>
                                    </Popover>
                                  </Popover>
                                </Dropdown>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Dropdown)>
                        </ThemedComponent>
                      </Select>
                    </Select>
                    <Button
                      element="button"
                      onClick={[Function]}
                      size="large"
                      type="button"
                      variant="regular"
                    >
                      <glamorous(button)
                        element="button"
                        onClick={[Function]}
                        size="large"
                        text="Focus the control"
                        type="button"
                        variant="regular"
                      >
                        <button
                          className="glamor-18"
                          onClick={[Function]}
                          type="button"
                        >
                          <glamorous(span)>
                            <span
                              className="glamor-17"
                            >
                              <glamorous(span)
                                size="large"
                              >
                                <span
                                  className="glamor-16"
                                >
                                  Focus the control
                                </span>
                              </glamorous(span)>
                            </span>
                          </glamorous(span)>
                        </button>
                      </glamorous(button)>
                    </Button>
                  </div>
                </glamorous(div)>
              </MyForm>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples uncontrolled 1`] = `
.glamor-11,
[data-glamor-11] {
  width: 100%;
}

.glamor-11 > span,
[data-glamor-11] > span {
  width: 100%;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9 > span,
[data-glamor-9] > span {
  width: 100%;
}

.glamor-7,
[data-glamor-7] {
  display: inline-block;
}

.glamor-5,
[data-glamor-5] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-4,
[data-glamor-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 *,
[data-glamor-4] *,
.glamor-4 *::before,
[data-glamor-4] *::before,
.glamor-4 *::after,
[data-glamor-4] *::after {
  box-sizing: inherit;
}

.glamor-4:hover > div:last-child,
[data-glamor-4]:hover > div:last-child,
.glamor-4[data-simulate-hover] > div:last-child,
[data-glamor-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-4:focus > div:last-child,
[data-glamor-4]:focus > div:last-child,
.glamor-4[data-simulate-focus] > div:last-child,
[data-glamor-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4:active > div:last-child,
[data-glamor-4]:active > div:last-child,
.glamor-4[data-simulate-active] > div:last-child,
[data-glamor-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:first-child,
[data-glamor-4] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-4 :not([role="img"]) ~ [role="img"],
[data-glamor-4] :not([role="img"]) ~ [role="img"] {
  fill: #2e6fd9;
}

.glamor-4 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-4] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #2e6fd9;
  margin-left: 0.5em;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alabama",
                "value": "AL",
              },
              Object {
                "text": "Alaska",
                "value": "AK",
              },
              Object {
                "text": "Arizona",
                "value": "AZ",
              },
              Object {
                "text": "Arkansas",
                "value": "AR",
              },
              Object {
                "text": "California",
                "value": "CA",
              },
              Object {
                "text": "Colorado",
                "value": "CO",
              },
              Object {
                "text": "Connecticut",
                "value": "CT",
              },
              Object {
                "text": "Delaware",
                "value": "DE",
              },
              Object {
                "text": "Florida",
                "value": "FL",
              },
              Object {
                "text": "Georgia",
                "value": "GA",
              },
              Object {
                "text": "Hawaii",
                "value": "HI",
              },
              Object {
                "text": "Idaho",
                "value": "ID",
              },
              Object {
                "text": "Illinois",
                "value": "IL",
              },
              Object {
                "text": "Indiana",
                "value": "IN",
              },
              Object {
                "text": "Iowa",
                "value": "IA",
              },
              Object {
                "text": "Kansas",
                "value": "KS",
              },
              Object {
                "text": "Kentucky",
                "value": "KY",
              },
              Object {
                "text": "Louisiana",
                "value": "LA",
              },
              Object {
                "text": "Maine",
                "value": "ME",
              },
              Object {
                "text": "Maryland",
                "value": "MD",
              },
              Object {
                "text": "Massachusetts",
                "value": "MA",
              },
              Object {
                "text": "Michigan",
                "value": "MI",
              },
              Object {
                "text": "Minnesota",
                "value": "MN",
              },
              Object {
                "text": "Mississippi",
                "value": "MS",
              },
              Object {
                "text": "Missouri",
                "value": "MO",
              },
              Object {
                "text": "Montana",
                "value": "MT",
              },
              Object {
                "text": "Nebraska",
                "value": "NE",
              },
              Object {
                "text": "Nevada",
                "value": "NV",
              },
              Object {
                "text": "New Hampshire",
                "value": "NH",
              },
              Object {
                "text": "New Jersey",
                "value": "NJ",
              },
              Object {
                "text": "New Mexico",
                "value": "NM",
              },
              Object {
                "text": "New York",
                "value": "NY",
              },
              Object {
                "text": "North Carolina",
                "value": "NC",
              },
              Object {
                "text": "North Dakota",
                "value": "ND",
              },
              Object {
                "text": "Ohio",
                "value": "OH",
              },
              Object {
                "text": "Oklahoma",
                "value": "OK",
              },
              Object {
                "text": "Oregon",
                "value": "OR",
              },
              Object {
                "text": "Pennsylvania",
                "value": "PA",
              },
              Object {
                "text": "Rhode Island",
                "value": "RI",
              },
              Object {
                "text": "South Carolina",
                "value": "SC",
              },
              Object {
                "text": "South Dakota",
                "value": "SD",
              },
              Object {
                "text": "Tennessee",
                "value": "TN",
              },
              Object {
                "text": "Texas",
                "value": "TX",
              },
              Object {
                "text": "Utah",
                "value": "UT",
              },
              Object {
                "text": "Vermont",
                "value": "VT",
              },
              Object {
                "text": "Virginia",
                "value": "VA",
              },
              Object {
                "text": "Washington",
                "value": "WA",
              },
              Object {
                "text": "West Virginia",
                "value": "WV",
              },
              Object {
                "text": "Wisconsin",
                "value": "WI",
              },
              Object {
                "text": "Wyoming",
                "value": "WY",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <Select
              data={
                Array [
                  Object {
                    "text": "Alabama",
                    "value": "AL",
                  },
                  Object {
                    "text": "Alaska",
                    "value": "AK",
                  },
                  Object {
                    "text": "Arizona",
                    "value": "AZ",
                  },
                  Object {
                    "text": "Arkansas",
                    "value": "AR",
                  },
                  Object {
                    "text": "California",
                    "value": "CA",
                  },
                  Object {
                    "text": "Colorado",
                    "value": "CO",
                  },
                  Object {
                    "text": "Connecticut",
                    "value": "CT",
                  },
                  Object {
                    "text": "Delaware",
                    "value": "DE",
                  },
                  Object {
                    "text": "Florida",
                    "value": "FL",
                  },
                  Object {
                    "text": "Georgia",
                    "value": "GA",
                  },
                  Object {
                    "text": "Hawaii",
                    "value": "HI",
                  },
                  Object {
                    "text": "Idaho",
                    "value": "ID",
                  },
                  Object {
                    "text": "Illinois",
                    "value": "IL",
                  },
                  Object {
                    "text": "Indiana",
                    "value": "IN",
                  },
                  Object {
                    "text": "Iowa",
                    "value": "IA",
                  },
                  Object {
                    "text": "Kansas",
                    "value": "KS",
                  },
                  Object {
                    "text": "Kentucky",
                    "value": "KY",
                  },
                  Object {
                    "text": "Louisiana",
                    "value": "LA",
                  },
                  Object {
                    "text": "Maine",
                    "value": "ME",
                  },
                  Object {
                    "text": "Maryland",
                    "value": "MD",
                  },
                  Object {
                    "text": "Massachusetts",
                    "value": "MA",
                  },
                  Object {
                    "text": "Michigan",
                    "value": "MI",
                  },
                  Object {
                    "text": "Minnesota",
                    "value": "MN",
                  },
                  Object {
                    "text": "Mississippi",
                    "value": "MS",
                  },
                  Object {
                    "text": "Missouri",
                    "value": "MO",
                  },
                  Object {
                    "text": "Montana",
                    "value": "MT",
                  },
                  Object {
                    "text": "Nebraska",
                    "value": "NE",
                  },
                  Object {
                    "text": "Nevada",
                    "value": "NV",
                  },
                  Object {
                    "text": "New Hampshire",
                    "value": "NH",
                  },
                  Object {
                    "text": "New Jersey",
                    "value": "NJ",
                  },
                  Object {
                    "text": "New Mexico",
                    "value": "NM",
                  },
                  Object {
                    "text": "New York",
                    "value": "NY",
                  },
                  Object {
                    "text": "North Carolina",
                    "value": "NC",
                  },
                  Object {
                    "text": "North Dakota",
                    "value": "ND",
                  },
                  Object {
                    "text": "Ohio",
                    "value": "OH",
                  },
                  Object {
                    "text": "Oklahoma",
                    "value": "OK",
                  },
                  Object {
                    "text": "Oregon",
                    "value": "OR",
                  },
                  Object {
                    "text": "Pennsylvania",
                    "value": "PA",
                  },
                  Object {
                    "text": "Rhode Island",
                    "value": "RI",
                  },
                  Object {
                    "text": "South Carolina",
                    "value": "SC",
                  },
                  Object {
                    "text": "South Dakota",
                    "value": "SD",
                  },
                  Object {
                    "text": "Tennessee",
                    "value": "TN",
                  },
                  Object {
                    "text": "Texas",
                    "value": "TX",
                  },
                  Object {
                    "text": "Utah",
                    "value": "UT",
                  },
                  Object {
                    "text": "Vermont",
                    "value": "VT",
                  },
                  Object {
                    "text": "Virginia",
                    "value": "VA",
                  },
                  Object {
                    "text": "Washington",
                    "value": "WA",
                  },
                  Object {
                    "text": "West Virginia",
                    "value": "WV",
                  },
                  Object {
                    "text": "Wisconsin",
                    "value": "WI",
                  },
                  Object {
                    "text": "Wyoming",
                    "value": "WY",
                  },
                ]
              }
              defaultSelectedItem={
                Object {
                  "text": "Colorado",
                  "value": "CO",
                }
              }
              name="state"
              placeholder="Select..."
              placement="bottom-start"
              size="large"
            >
              <Select
                data={
                  Array [
                    Object {
                      "text": "Alabama",
                      "value": "AL",
                    },
                    Object {
                      "text": "Alaska",
                      "value": "AK",
                    },
                    Object {
                      "text": "Arizona",
                      "value": "AZ",
                    },
                    Object {
                      "text": "Arkansas",
                      "value": "AR",
                    },
                    Object {
                      "text": "California",
                      "value": "CA",
                    },
                    Object {
                      "text": "Colorado",
                      "value": "CO",
                    },
                    Object {
                      "text": "Connecticut",
                      "value": "CT",
                    },
                    Object {
                      "text": "Delaware",
                      "value": "DE",
                    },
                    Object {
                      "text": "Florida",
                      "value": "FL",
                    },
                    Object {
                      "text": "Georgia",
                      "value": "GA",
                    },
                    Object {
                      "text": "Hawaii",
                      "value": "HI",
                    },
                    Object {
                      "text": "Idaho",
                      "value": "ID",
                    },
                    Object {
                      "text": "Illinois",
                      "value": "IL",
                    },
                    Object {
                      "text": "Indiana",
                      "value": "IN",
                    },
                    Object {
                      "text": "Iowa",
                      "value": "IA",
                    },
                    Object {
                      "text": "Kansas",
                      "value": "KS",
                    },
                    Object {
                      "text": "Kentucky",
                      "value": "KY",
                    },
                    Object {
                      "text": "Louisiana",
                      "value": "LA",
                    },
                    Object {
                      "text": "Maine",
                      "value": "ME",
                    },
                    Object {
                      "text": "Maryland",
                      "value": "MD",
                    },
                    Object {
                      "text": "Massachusetts",
                      "value": "MA",
                    },
                    Object {
                      "text": "Michigan",
                      "value": "MI",
                    },
                    Object {
                      "text": "Minnesota",
                      "value": "MN",
                    },
                    Object {
                      "text": "Mississippi",
                      "value": "MS",
                    },
                    Object {
                      "text": "Missouri",
                      "value": "MO",
                    },
                    Object {
                      "text": "Montana",
                      "value": "MT",
                    },
                    Object {
                      "text": "Nebraska",
                      "value": "NE",
                    },
                    Object {
                      "text": "Nevada",
                      "value": "NV",
                    },
                    Object {
                      "text": "New Hampshire",
                      "value": "NH",
                    },
                    Object {
                      "text": "New Jersey",
                      "value": "NJ",
                    },
                    Object {
                      "text": "New Mexico",
                      "value": "NM",
                    },
                    Object {
                      "text": "New York",
                      "value": "NY",
                    },
                    Object {
                      "text": "North Carolina",
                      "value": "NC",
                    },
                    Object {
                      "text": "North Dakota",
                      "value": "ND",
                    },
                    Object {
                      "text": "Ohio",
                      "value": "OH",
                    },
                    Object {
                      "text": "Oklahoma",
                      "value": "OK",
                    },
                    Object {
                      "text": "Oregon",
                      "value": "OR",
                    },
                    Object {
                      "text": "Pennsylvania",
                      "value": "PA",
                    },
                    Object {
                      "text": "Rhode Island",
                      "value": "RI",
                    },
                    Object {
                      "text": "South Carolina",
                      "value": "SC",
                    },
                    Object {
                      "text": "South Dakota",
                      "value": "SD",
                    },
                    Object {
                      "text": "Tennessee",
                      "value": "TN",
                    },
                    Object {
                      "text": "Texas",
                      "value": "TX",
                    },
                    Object {
                      "text": "Utah",
                      "value": "UT",
                    },
                    Object {
                      "text": "Vermont",
                      "value": "VT",
                    },
                    Object {
                      "text": "Virginia",
                      "value": "VA",
                    },
                    Object {
                      "text": "Washington",
                      "value": "WA",
                    },
                    Object {
                      "text": "West Virginia",
                      "value": "WV",
                    },
                    Object {
                      "text": "Wisconsin",
                      "value": "WI",
                    },
                    Object {
                      "text": "Wyoming",
                      "value": "WY",
                    },
                  ]
                }
                defaultSelectedItem={
                  Object {
                    "text": "Colorado",
                    "value": "CO",
                  }
                }
                disabled={undefined}
                getItemProps={[Function]}
                getMenuProps={[Function]}
                getTriggerProps={[Function]}
                highlightedIndex={undefined}
                id="select-76"
                isOpen={false}
                modifiers={
                  Object {
                    "contentWidth": Object {
                      "enabled": true,
                      "fn": [Function],
                    },
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom-start"
              >
                <ThemedComponent
                  className="glamor-11"
                  data={
                    Array [
                      Object {
                        "text": "Alabama",
                        "value": "AL",
                      },
                      Object {
                        "text": "Alaska",
                        "value": "AK",
                      },
                      Object {
                        "text": "Arizona",
                        "value": "AZ",
                      },
                      Object {
                        "text": "Arkansas",
                        "value": "AR",
                      },
                      Object {
                        "text": "California",
                        "value": "CA",
                      },
                      Object {
                        "text": "Colorado",
                        "value": "CO",
                      },
                      Object {
                        "text": "Connecticut",
                        "value": "CT",
                      },
                      Object {
                        "text": "Delaware",
                        "value": "DE",
                      },
                      Object {
                        "text": "Florida",
                        "value": "FL",
                      },
                      Object {
                        "text": "Georgia",
                        "value": "GA",
                      },
                      Object {
                        "text": "Hawaii",
                        "value": "HI",
                      },
                      Object {
                        "text": "Idaho",
                        "value": "ID",
                      },
                      Object {
                        "text": "Illinois",
                        "value": "IL",
                      },
                      Object {
                        "text": "Indiana",
                        "value": "IN",
                      },
                      Object {
                        "text": "Iowa",
                        "value": "IA",
                      },
                      Object {
                        "text": "Kansas",
                        "value": "KS",
                      },
                      Object {
                        "text": "Kentucky",
                        "value": "KY",
                      },
                      Object {
                        "text": "Louisiana",
                        "value": "LA",
                      },
                      Object {
                        "text": "Maine",
                        "value": "ME",
                      },
                      Object {
                        "text": "Maryland",
                        "value": "MD",
                      },
                      Object {
                        "text": "Massachusetts",
                        "value": "MA",
                      },
                      Object {
                        "text": "Michigan",
                        "value": "MI",
                      },
                      Object {
                        "text": "Minnesota",
                        "value": "MN",
                      },
                      Object {
                        "text": "Mississippi",
                        "value": "MS",
                      },
                      Object {
                        "text": "Missouri",
                        "value": "MO",
                      },
                      Object {
                        "text": "Montana",
                        "value": "MT",
                      },
                      Object {
                        "text": "Nebraska",
                        "value": "NE",
                      },
                      Object {
                        "text": "Nevada",
                        "value": "NV",
                      },
                      Object {
                        "text": "New Hampshire",
                        "value": "NH",
                      },
                      Object {
                        "text": "New Jersey",
                        "value": "NJ",
                      },
                      Object {
                        "text": "New Mexico",
                        "value": "NM",
                      },
                      Object {
                        "text": "New York",
                        "value": "NY",
                      },
                      Object {
                        "text": "North Carolina",
                        "value": "NC",
                      },
                      Object {
                        "text": "North Dakota",
                        "value": "ND",
                      },
                      Object {
                        "text": "Ohio",
                        "value": "OH",
                      },
                      Object {
                        "text": "Oklahoma",
                        "value": "OK",
                      },
                      Object {
                        "text": "Oregon",
                        "value": "OR",
                      },
                      Object {
                        "text": "Pennsylvania",
                        "value": "PA",
                      },
                      Object {
                        "text": "Rhode Island",
                        "value": "RI",
                      },
                      Object {
                        "text": "South Carolina",
                        "value": "SC",
                      },
                      Object {
                        "text": "South Dakota",
                        "value": "SD",
                      },
                      Object {
                        "text": "Tennessee",
                        "value": "TN",
                      },
                      Object {
                        "text": "Texas",
                        "value": "TX",
                      },
                      Object {
                        "text": "Utah",
                        "value": "UT",
                      },
                      Object {
                        "text": "Vermont",
                        "value": "VT",
                      },
                      Object {
                        "text": "Virginia",
                        "value": "VA",
                      },
                      Object {
                        "text": "Washington",
                        "value": "WA",
                      },
                      Object {
                        "text": "West Virginia",
                        "value": "WV",
                      },
                      Object {
                        "text": "Wisconsin",
                        "value": "WI",
                      },
                      Object {
                        "text": "Wyoming",
                        "value": "WY",
                      },
                    ]
                  }
                  defaultSelectedItem={
                    Object {
                      "text": "Colorado",
                      "value": "CO",
                    }
                  }
                  disabled={undefined}
                  getItemProps={[Function]}
                  getMenuProps={[Function]}
                  getTriggerProps={[Function]}
                  highlightedIndex={undefined}
                  id="select-76"
                  isOpen={false}
                  modifiers={
                    Object {
                      "contentWidth": Object {
                        "enabled": true,
                        "fn": [Function],
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                >
                  <Themed(Dropdown)
                    className="glamor-11"
                    data={
                      Array [
                        Object {
                          "text": "Alabama",
                          "value": "AL",
                        },
                        Object {
                          "text": "Alaska",
                          "value": "AK",
                        },
                        Object {
                          "text": "Arizona",
                          "value": "AZ",
                        },
                        Object {
                          "text": "Arkansas",
                          "value": "AR",
                        },
                        Object {
                          "text": "California",
                          "value": "CA",
                        },
                        Object {
                          "text": "Colorado",
                          "value": "CO",
                        },
                        Object {
                          "text": "Connecticut",
                          "value": "CT",
                        },
                        Object {
                          "text": "Delaware",
                          "value": "DE",
                        },
                        Object {
                          "text": "Florida",
                          "value": "FL",
                        },
                        Object {
                          "text": "Georgia",
                          "value": "GA",
                        },
                        Object {
                          "text": "Hawaii",
                          "value": "HI",
                        },
                        Object {
                          "text": "Idaho",
                          "value": "ID",
                        },
                        Object {
                          "text": "Illinois",
                          "value": "IL",
                        },
                        Object {
                          "text": "Indiana",
                          "value": "IN",
                        },
                        Object {
                          "text": "Iowa",
                          "value": "IA",
                        },
                        Object {
                          "text": "Kansas",
                          "value": "KS",
                        },
                        Object {
                          "text": "Kentucky",
                          "value": "KY",
                        },
                        Object {
                          "text": "Louisiana",
                          "value": "LA",
                        },
                        Object {
                          "text": "Maine",
                          "value": "ME",
                        },
                        Object {
                          "text": "Maryland",
                          "value": "MD",
                        },
                        Object {
                          "text": "Massachusetts",
                          "value": "MA",
                        },
                        Object {
                          "text": "Michigan",
                          "value": "MI",
                        },
                        Object {
                          "text": "Minnesota",
                          "value": "MN",
                        },
                        Object {
                          "text": "Mississippi",
                          "value": "MS",
                        },
                        Object {
                          "text": "Missouri",
                          "value": "MO",
                        },
                        Object {
                          "text": "Montana",
                          "value": "MT",
                        },
                        Object {
                          "text": "Nebraska",
                          "value": "NE",
                        },
                        Object {
                          "text": "Nevada",
                          "value": "NV",
                        },
                        Object {
                          "text": "New Hampshire",
                          "value": "NH",
                        },
                        Object {
                          "text": "New Jersey",
                          "value": "NJ",
                        },
                        Object {
                          "text": "New Mexico",
                          "value": "NM",
                        },
                        Object {
                          "text": "New York",
                          "value": "NY",
                        },
                        Object {
                          "text": "North Carolina",
                          "value": "NC",
                        },
                        Object {
                          "text": "North Dakota",
                          "value": "ND",
                        },
                        Object {
                          "text": "Ohio",
                          "value": "OH",
                        },
                        Object {
                          "text": "Oklahoma",
                          "value": "OK",
                        },
                        Object {
                          "text": "Oregon",
                          "value": "OR",
                        },
                        Object {
                          "text": "Pennsylvania",
                          "value": "PA",
                        },
                        Object {
                          "text": "Rhode Island",
                          "value": "RI",
                        },
                        Object {
                          "text": "South Carolina",
                          "value": "SC",
                        },
                        Object {
                          "text": "South Dakota",
                          "value": "SD",
                        },
                        Object {
                          "text": "Tennessee",
                          "value": "TN",
                        },
                        Object {
                          "text": "Texas",
                          "value": "TX",
                        },
                        Object {
                          "text": "Utah",
                          "value": "UT",
                        },
                        Object {
                          "text": "Vermont",
                          "value": "VT",
                        },
                        Object {
                          "text": "Virginia",
                          "value": "VA",
                        },
                        Object {
                          "text": "Washington",
                          "value": "WA",
                        },
                        Object {
                          "text": "West Virginia",
                          "value": "WV",
                        },
                        Object {
                          "text": "Wisconsin",
                          "value": "WI",
                        },
                        Object {
                          "text": "Wyoming",
                          "value": "WY",
                        },
                      ]
                    }
                    defaultSelectedItem={
                      Object {
                        "text": "Colorado",
                        "value": "CO",
                      }
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-76"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Dropdown
                          className="glamor-11"
                          data={
                            Array [
                              Object {
                                "text": "Alabama",
                                "value": "AL",
                              },
                              Object {
                                "text": "Alaska",
                                "value": "AK",
                              },
                              Object {
                                "text": "Arizona",
                                "value": "AZ",
                              },
                              Object {
                                "text": "Arkansas",
                                "value": "AR",
                              },
                              Object {
                                "text": "California",
                                "value": "CA",
                              },
                              Object {
                                "text": "Colorado",
                                "value": "CO",
                              },
                              Object {
                                "text": "Connecticut",
                                "value": "CT",
                              },
                              Object {
                                "text": "Delaware",
                                "value": "DE",
                              },
                              Object {
                                "text": "Florida",
                                "value": "FL",
                              },
                              Object {
                                "text": "Georgia",
                                "value": "GA",
                              },
                              Object {
                                "text": "Hawaii",
                                "value": "HI",
                              },
                              Object {
                                "text": "Idaho",
                                "value": "ID",
                              },
                              Object {
                                "text": "Illinois",
                                "value": "IL",
                              },
                              Object {
                                "text": "Indiana",
                                "value": "IN",
                              },
                              Object {
                                "text": "Iowa",
                                "value": "IA",
                              },
                              Object {
                                "text": "Kansas",
                                "value": "KS",
                              },
                              Object {
                                "text": "Kentucky",
                                "value": "KY",
                              },
                              Object {
                                "text": "Louisiana",
                                "value": "LA",
                              },
                              Object {
                                "text": "Maine",
                                "value": "ME",
                              },
                              Object {
                                "text": "Maryland",
                                "value": "MD",
                              },
                              Object {
                                "text": "Massachusetts",
                                "value": "MA",
                              },
                              Object {
                                "text": "Michigan",
                                "value": "MI",
                              },
                              Object {
                                "text": "Minnesota",
                                "value": "MN",
                              },
                              Object {
                                "text": "Mississippi",
                                "value": "MS",
                              },
                              Object {
                                "text": "Missouri",
                                "value": "MO",
                              },
                              Object {
                                "text": "Montana",
                                "value": "MT",
                              },
                              Object {
                                "text": "Nebraska",
                                "value": "NE",
                              },
                              Object {
                                "text": "Nevada",
                                "value": "NV",
                              },
                              Object {
                                "text": "New Hampshire",
                                "value": "NH",
                              },
                              Object {
                                "text": "New Jersey",
                                "value": "NJ",
                              },
                              Object {
                                "text": "New Mexico",
                                "value": "NM",
                              },
                              Object {
                                "text": "New York",
                                "value": "NY",
                              },
                              Object {
                                "text": "North Carolina",
                                "value": "NC",
                              },
                              Object {
                                "text": "North Dakota",
                                "value": "ND",
                              },
                              Object {
                                "text": "Ohio",
                                "value": "OH",
                              },
                              Object {
                                "text": "Oklahoma",
                                "value": "OK",
                              },
                              Object {
                                "text": "Oregon",
                                "value": "OR",
                              },
                              Object {
                                "text": "Pennsylvania",
                                "value": "PA",
                              },
                              Object {
                                "text": "Rhode Island",
                                "value": "RI",
                              },
                              Object {
                                "text": "South Carolina",
                                "value": "SC",
                              },
                              Object {
                                "text": "South Dakota",
                                "value": "SD",
                              },
                              Object {
                                "text": "Tennessee",
                                "value": "TN",
                              },
                              Object {
                                "text": "Texas",
                                "value": "TX",
                              },
                              Object {
                                "text": "Utah",
                                "value": "UT",
                              },
                              Object {
                                "text": "Vermont",
                                "value": "VT",
                              },
                              Object {
                                "text": "Virginia",
                                "value": "VA",
                              },
                              Object {
                                "text": "Washington",
                                "value": "WA",
                              },
                              Object {
                                "text": "West Virginia",
                                "value": "WV",
                              },
                              Object {
                                "text": "Wisconsin",
                                "value": "WI",
                              },
                              Object {
                                "text": "Wyoming",
                                "value": "WY",
                              },
                            ]
                          }
                          defaultSelectedItem={
                            Object {
                              "text": "Colorado",
                              "value": "CO",
                            }
                          }
                          disabled={undefined}
                          getItemProps={[Function]}
                          getMenuProps={[Function]}
                          getTriggerProps={[Function]}
                          highlightedIndex={undefined}
                          id="select-76"
                          isOpen={false}
                          modifiers={
                            Object {
                              "contentWidth": Object {
                                "enabled": true,
                                "fn": [Function],
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom-start"
                        >
                          <Popover
                            className="glamor-11"
                            content={
                              <DropdownContent
                                data={
                                  Array [
                                    Object {
                                      "text": "Alabama",
                                      "value": "AL",
                                    },
                                    Object {
                                      "text": "Alaska",
                                      "value": "AK",
                                    },
                                    Object {
                                      "text": "Arizona",
                                      "value": "AZ",
                                    },
                                    Object {
                                      "text": "Arkansas",
                                      "value": "AR",
                                    },
                                    Object {
                                      "text": "California",
                                      "value": "CA",
                                    },
                                    Object {
                                      "text": "Colorado",
                                      "value": "CO",
                                    },
                                    Object {
                                      "text": "Connecticut",
                                      "value": "CT",
                                    },
                                    Object {
                                      "text": "Delaware",
                                      "value": "DE",
                                    },
                                    Object {
                                      "text": "Florida",
                                      "value": "FL",
                                    },
                                    Object {
                                      "text": "Georgia",
                                      "value": "GA",
                                    },
                                    Object {
                                      "text": "Hawaii",
                                      "value": "HI",
                                    },
                                    Object {
                                      "text": "Idaho",
                                      "value": "ID",
                                    },
                                    Object {
                                      "text": "Illinois",
                                      "value": "IL",
                                    },
                                    Object {
                                      "text": "Indiana",
                                      "value": "IN",
                                    },
                                    Object {
                                      "text": "Iowa",
                                      "value": "IA",
                                    },
                                    Object {
                                      "text": "Kansas",
                                      "value": "KS",
                                    },
                                    Object {
                                      "text": "Kentucky",
                                      "value": "KY",
                                    },
                                    Object {
                                      "text": "Louisiana",
                                      "value": "LA",
                                    },
                                    Object {
                                      "text": "Maine",
                                      "value": "ME",
                                    },
                                    Object {
                                      "text": "Maryland",
                                      "value": "MD",
                                    },
                                    Object {
                                      "text": "Massachusetts",
                                      "value": "MA",
                                    },
                                    Object {
                                      "text": "Michigan",
                                      "value": "MI",
                                    },
                                    Object {
                                      "text": "Minnesota",
                                      "value": "MN",
                                    },
                                    Object {
                                      "text": "Mississippi",
                                      "value": "MS",
                                    },
                                    Object {
                                      "text": "Missouri",
                                      "value": "MO",
                                    },
                                    Object {
                                      "text": "Montana",
                                      "value": "MT",
                                    },
                                    Object {
                                      "text": "Nebraska",
                                      "value": "NE",
                                    },
                                    Object {
                                      "text": "Nevada",
                                      "value": "NV",
                                    },
                                    Object {
                                      "text": "New Hampshire",
                                      "value": "NH",
                                    },
                                    Object {
                                      "text": "New Jersey",
                                      "value": "NJ",
                                    },
                                    Object {
                                      "text": "New Mexico",
                                      "value": "NM",
                                    },
                                    Object {
                                      "text": "New York",
                                      "value": "NY",
                                    },
                                    Object {
                                      "text": "North Carolina",
                                      "value": "NC",
                                    },
                                    Object {
                                      "text": "North Dakota",
                                      "value": "ND",
                                    },
                                    Object {
                                      "text": "Ohio",
                                      "value": "OH",
                                    },
                                    Object {
                                      "text": "Oklahoma",
                                      "value": "OK",
                                    },
                                    Object {
                                      "text": "Oregon",
                                      "value": "OR",
                                    },
                                    Object {
                                      "text": "Pennsylvania",
                                      "value": "PA",
                                    },
                                    Object {
                                      "text": "Rhode Island",
                                      "value": "RI",
                                    },
                                    Object {
                                      "text": "South Carolina",
                                      "value": "SC",
                                    },
                                    Object {
                                      "text": "South Dakota",
                                      "value": "SD",
                                    },
                                    Object {
                                      "text": "Tennessee",
                                      "value": "TN",
                                    },
                                    Object {
                                      "text": "Texas",
                                      "value": "TX",
                                    },
                                    Object {
                                      "text": "Utah",
                                      "value": "UT",
                                    },
                                    Object {
                                      "text": "Vermont",
                                      "value": "VT",
                                    },
                                    Object {
                                      "text": "Virginia",
                                      "value": "VA",
                                    },
                                    Object {
                                      "text": "Washington",
                                      "value": "WA",
                                    },
                                    Object {
                                      "text": "West Virginia",
                                      "value": "WV",
                                    },
                                    Object {
                                      "text": "Wisconsin",
                                      "value": "WI",
                                    },
                                    Object {
                                      "text": "Wyoming",
                                      "value": "WY",
                                    },
                                  ]
                                }
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                id="select-76-content"
                                modifiers={
                                  Object {
                                    "contentWidth": Object {
                                      "enabled": true,
                                      "fn": [Function],
                                    },
                                  }
                                }
                                placement="bottom-start"
                                wide={undefined}
                              />
                            }
                            defaultSelectedItem={
                              Object {
                                "text": "Colorado",
                                "value": "CO",
                              }
                            }
                            disabled={undefined}
                            focusTriggerOnClose={true}
                            getItemProps={[Function]}
                            getMenuProps={[Function]}
                            getTriggerProps={[Function]}
                            hasArrow={true}
                            highlightedIndex={undefined}
                            id="select-76"
                            isOpen={false}
                            onClose={[Function]}
                            onOpen={[Function]}
                            placement="bottom"
                            triggerRef={[Function]}
                            wrapContent={false}
                          >
                            <Popover
                              className="glamor-11"
                              content={
                                <DropdownContent
                                  data={
                                    Array [
                                      Object {
                                        "text": "Alabama",
                                        "value": "AL",
                                      },
                                      Object {
                                        "text": "Alaska",
                                        "value": "AK",
                                      },
                                      Object {
                                        "text": "Arizona",
                                        "value": "AZ",
                                      },
                                      Object {
                                        "text": "Arkansas",
                                        "value": "AR",
                                      },
                                      Object {
                                        "text": "California",
                                        "value": "CA",
                                      },
                                      Object {
                                        "text": "Colorado",
                                        "value": "CO",
                                      },
                                      Object {
                                        "text": "Connecticut",
                                        "value": "CT",
                                      },
                                      Object {
                                        "text": "Delaware",
                                        "value": "DE",
                                      },
                                      Object {
                                        "text": "Florida",
                                        "value": "FL",
                                      },
                                      Object {
                                        "text": "Georgia",
                                        "value": "GA",
                                      },
                                      Object {
                                        "text": "Hawaii",
                                        "value": "HI",
                                      },
                                      Object {
                                        "text": "Idaho",
                                        "value": "ID",
                                      },
                                      Object {
                                        "text": "Illinois",
                                        "value": "IL",
                                      },
                                      Object {
                                        "text": "Indiana",
                                        "value": "IN",
                                      },
                                      Object {
                                        "text": "Iowa",
                                        "value": "IA",
                                      },
                                      Object {
                                        "text": "Kansas",
                                        "value": "KS",
                                      },
                                      Object {
                                        "text": "Kentucky",
                                        "value": "KY",
                                      },
                                      Object {
                                        "text": "Louisiana",
                                        "value": "LA",
                                      },
                                      Object {
                                        "text": "Maine",
                                        "value": "ME",
                                      },
                                      Object {
                                        "text": "Maryland",
                                        "value": "MD",
                                      },
                                      Object {
                                        "text": "Massachusetts",
                                        "value": "MA",
                                      },
                                      Object {
                                        "text": "Michigan",
                                        "value": "MI",
                                      },
                                      Object {
                                        "text": "Minnesota",
                                        "value": "MN",
                                      },
                                      Object {
                                        "text": "Mississippi",
                                        "value": "MS",
                                      },
                                      Object {
                                        "text": "Missouri",
                                        "value": "MO",
                                      },
                                      Object {
                                        "text": "Montana",
                                        "value": "MT",
                                      },
                                      Object {
                                        "text": "Nebraska",
                                        "value": "NE",
                                      },
                                      Object {
                                        "text": "Nevada",
                                        "value": "NV",
                                      },
                                      Object {
                                        "text": "New Hampshire",
                                        "value": "NH",
                                      },
                                      Object {
                                        "text": "New Jersey",
                                        "value": "NJ",
                                      },
                                      Object {
                                        "text": "New Mexico",
                                        "value": "NM",
                                      },
                                      Object {
                                        "text": "New York",
                                        "value": "NY",
                                      },
                                      Object {
                                        "text": "North Carolina",
                                        "value": "NC",
                                      },
                                      Object {
                                        "text": "North Dakota",
                                        "value": "ND",
                                      },
                                      Object {
                                        "text": "Ohio",
                                        "value": "OH",
                                      },
                                      Object {
                                        "text": "Oklahoma",
                                        "value": "OK",
                                      },
                                      Object {
                                        "text": "Oregon",
                                        "value": "OR",
                                      },
                                      Object {
                                        "text": "Pennsylvania",
                                        "value": "PA",
                                      },
                                      Object {
                                        "text": "Rhode Island",
                                        "value": "RI",
                                      },
                                      Object {
                                        "text": "South Carolina",
                                        "value": "SC",
                                      },
                                      Object {
                                        "text": "South Dakota",
                                        "value": "SD",
                                      },
                                      Object {
                                        "text": "Tennessee",
                                        "value": "TN",
                                      },
                                      Object {
                                        "text": "Texas",
                                        "value": "TX",
                                      },
                                      Object {
                                        "text": "Utah",
                                        "value": "UT",
                                      },
                                      Object {
                                        "text": "Vermont",
                                        "value": "VT",
                                      },
                                      Object {
                                        "text": "Virginia",
                                        "value": "VA",
                                      },
                                      Object {
                                        "text": "Washington",
                                        "value": "WA",
                                      },
                                      Object {
                                        "text": "West Virginia",
                                        "value": "WV",
                                      },
                                      Object {
                                        "text": "Wisconsin",
                                        "value": "WI",
                                      },
                                      Object {
                                        "text": "Wyoming",
                                        "value": "WY",
                                      },
                                    ]
                                  }
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  id="select-76-content"
                                  modifiers={
                                    Object {
                                      "contentWidth": Object {
                                        "enabled": true,
                                        "fn": [Function],
                                      },
                                    }
                                  }
                                  placement="bottom-start"
                                  wide={undefined}
                                />
                              }
                              defaultSelectedItem={
                                Object {
                                  "text": "Colorado",
                                  "value": "CO",
                                }
                              }
                              disabled={undefined}
                              focusTriggerOnClose={true}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              hasArrow={true}
                              highlightedIndex={undefined}
                              id="select-76"
                              isOpen={false}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              tag="span"
                              triggerRef={[Function]}
                              wrapContent={false}
                            >
                              <Manager
                                className="glamor-9"
                                id="select-76"
                                tag="span"
                              >
                                <span
                                  className="glamor-9"
                                  id="select-76"
                                >
                                  <PopoverTrigger
                                    aria-activedescendant={undefined}
                                    aria-describedby="select-76-content"
                                    aria-disabled={undefined}
                                    aria-expanded={false}
                                    aria-haspopup="listbox"
                                    aria-invalid={undefined}
                                    aria-owns="select-76-content"
                                    aria-readonly={undefined}
                                    aria-required={undefined}
                                    disabled={undefined}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <PopoverTrigger
                                      component="span"
                                    >
                                      <Target
                                        className="glamor-7"
                                        component="span"
                                      >
                                        <span
                                          className="glamor-7"
                                        >
                                          <SelectTrigger
                                            aria-activedescendant={undefined}
                                            aria-describedby="select-76-content"
                                            aria-disabled={undefined}
                                            aria-expanded={false}
                                            aria-haspopup="listbox"
                                            aria-invalid={undefined}
                                            aria-owns="select-76-content"
                                            aria-readonly={undefined}
                                            aria-required={undefined}
                                            disabled={undefined}
                                            isOpen={false}
                                            item={
                                              Object {
                                                "text": "Colorado",
                                                "value": "CO",
                                              }
                                            }
                                            name="state"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            placeholder="Select..."
                                            readOnly={undefined}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                            triggerRef={[Function]}
                                            variant={undefined}
                                          >
                                            <SelectTrigger
                                              afterItems={
                                                Array [
                                                  <IconArrowDropdownDown
                                                    css={
                                                      Object {
                                                        "margin": "0.5em",
                                                      }
                                                    }
                                                    size="1.5em"
                                                  />,
                                                  <input
                                                    name="state"
                                                    type="hidden"
                                                    value="CO"
                                                  />,
                                                ]
                                              }
                                              aria-activedescendant={undefined}
                                              aria-describedby="select-76-content"
                                              aria-disabled={undefined}
                                              aria-expanded={false}
                                              aria-haspopup="listbox"
                                              aria-invalid={undefined}
                                              aria-owns="select-76-content"
                                              aria-readonly={undefined}
                                              aria-required={undefined}
                                              control={[Function]}
                                              controlProps={
                                                Object {
                                                  "hasPlaceholder": false,
                                                  "variant": undefined,
                                                }
                                              }
                                              disabled={undefined}
                                              fauxControlRef={[Function]}
                                              iconEnd={undefined}
                                              iconStart={undefined}
                                              item={
                                                Object {
                                                  "text": "Colorado",
                                                  "value": "CO",
                                                }
                                              }
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              readOnly={undefined}
                                              role="button"
                                              selectedItemVariant={undefined}
                                              size="large"
                                              tabIndex={0}
                                              variant={undefined}
                                            >
                                              <FauxControl
                                                afterItems={
                                                  Array [
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      size="1.5em"
                                                    />,
                                                    <input
                                                      name="state"
                                                      type="hidden"
                                                      value="CO"
                                                    />,
                                                  ]
                                                }
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-76-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-76-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                className="glamor-5"
                                                control={[Function]}
                                                controlProps={
                                                  Object {
                                                    "hasPlaceholder": false,
                                                    "variant": undefined,
                                                  }
                                                }
                                                disabled={undefined}
                                                fauxControlRef={[Function]}
                                                iconEnd={undefined}
                                                iconStart={undefined}
                                                item={
                                                  Object {
                                                    "text": "Colorado",
                                                    "value": "CO",
                                                  }
                                                }
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                readOnly={undefined}
                                                role="button"
                                                selectedItemVariant={undefined}
                                                size="large"
                                                tabIndex={0}
                                                variant={undefined}
                                              >
                                                <FauxControl
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-76-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-76-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  className="glamor-5"
                                                  control={[Function]}
                                                  disabled={undefined}
                                                  innerRef={[Function]}
                                                  item={
                                                    Object {
                                                      "text": "Colorado",
                                                      "value": "CO",
                                                    }
                                                  }
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  tabIndex={0}
                                                  variant={undefined}
                                                >
                                                  <div
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-76-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-76-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-4"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <glamorous(Trigger)
                                                      controlPropsIn={
                                                        Object {
                                                          "hasPlaceholder": false,
                                                          "variant": undefined,
                                                        }
                                                      }
                                                      disabled={undefined}
                                                      hasPlaceholder={false}
                                                      iconEnd={undefined}
                                                      iconStart={undefined}
                                                      innerRef={undefined}
                                                      key="control"
                                                      prefix={undefined}
                                                      readOnly={undefined}
                                                      size="large"
                                                      suffix={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-1"
                                                        prefix={undefined}
                                                        readOnly={undefined}
                                                      >
                                                        <TriggerContent>
                                                          <span
                                                            className="glamor-0"
                                                          >
                                                            Colorado
                                                          </span>
                                                        </TriggerContent>
                                                      </div>
                                                    </glamorous(Trigger)>
                                                    <IconArrowDropdownDown
                                                      css={
                                                        Object {
                                                          "margin": "0.5em",
                                                        }
                                                      }
                                                      key="arrow"
                                                      size="1.5em"
                                                    >
                                                      <Icon
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        rtl={false}
                                                        size="1.5em"
                                                      >
                                                        <glamorous(svg)
                                                          aria-hidden={true}
                                                          aria-labelledby={undefined}
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          role="img"
                                                          rtl={false}
                                                          size="1.5em"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={undefined}
                                                            className="glamor-2"
                                                            role="img"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <g>
                                                              <path
                                                                d="M12 17.5l-8-8h16z"
                                                              />
                                                            </g>
                                                          </svg>
                                                        </glamorous(svg)>
                                                      </Icon>
                                                    </IconArrowDropdownDown>
                                                    <input
                                                      key="input"
                                                      name="state"
                                                      type="hidden"
                                                      value="CO"
                                                    />
                                                    <Underlay
                                                      disabled={undefined}
                                                      readOnly={undefined}
                                                      variant={undefined}
                                                    >
                                                      <div
                                                        className="glamor-3"
                                                        readOnly={undefined}
                                                      />
                                                    </Underlay>
                                                  </div>
                                                </FauxControl>
                                              </FauxControl>
                                            </SelectTrigger>
                                          </SelectTrigger>
                                        </span>
                                      </Target>
                                    </PopoverTrigger>
                                  </PopoverTrigger>
                                </span>
                              </Manager>
                            </Popover>
                          </Popover>
                        </Dropdown>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Dropdown)>
                </ThemedComponent>
              </Select>
            </Select>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`Select demo examples variants 1`] = `
.glamor-12,
[data-glamor-12] {
  width: 100%;
}

.glamor-12 > span,
[data-glamor-12] > span {
  width: 100%;
}

.glamor-10,
[data-glamor-10] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  width: 100%;
}

.glamor-10 *,
[data-glamor-10] *,
.glamor-10 *::before,
[data-glamor-10] *::before,
.glamor-10 *::after,
[data-glamor-10] *::after {
  box-sizing: inherit;
}

.glamor-10 > span,
[data-glamor-10] > span {
  width: 100%;
}

.glamor-8,
[data-glamor-8] {
  display: inline-block;
}

.glamor-0,
[data-glamor-0] {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  user-select: none;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.glamor-3,
[data-glamor-3] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
  margin: 0.5em;
}

.glamor-6,
[data-glamor-6] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-6 [role="img"],
[data-glamor-6] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-6 [role="img"]:first-child,
[data-glamor-6] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-6 :not([role="img"]) ~ [role="img"],
[data-glamor-6] :not([role="img"]) ~ [role="img"] {
  fill: #db2929;
}

.glamor-6 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-6] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #db2929;
  margin-left: 0.5em;
}

.glamor-5,
[data-glamor-5] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 *,
[data-glamor-5] *,
.glamor-5 *::before,
[data-glamor-5] *::before,
.glamor-5 *::after,
[data-glamor-5] *::after {
  box-sizing: inherit;
}

.glamor-5:hover > div:last-child,
[data-glamor-5]:hover > div:last-child,
.glamor-5[data-simulate-hover] > div:last-child,
[data-glamor-5][data-simulate-hover] > div:last-child {
  border-color: #c71818;
}

.glamor-5:focus > div:last-child,
[data-glamor-5]:focus > div:last-child,
.glamor-5[data-simulate-focus] > div:last-child,
[data-glamor-5][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-5:active > div:last-child,
[data-glamor-5]:active > div:last-child,
.glamor-5[data-simulate-active] > div:last-child,
[data-glamor-5][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:first-child,
[data-glamor-5] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-5 :not([role="img"]) ~ [role="img"],
[data-glamor-5] :not([role="img"]) ~ [role="img"] {
  fill: #db2929;
}

.glamor-5 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-5] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #db2929;
  margin-left: 0.5em;
}

.glamor-1,
[data-glamor-1] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-4,
[data-glamor-4] {
  background-color: #fff;
  border-color: #db2929;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-23,
[data-glamor-23] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-23 [role="img"],
[data-glamor-23] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-23 [role="img"]:first-child,
[data-glamor-23] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-23 :not([role="img"]) ~ [role="img"],
[data-glamor-23] :not([role="img"]) ~ [role="img"] {
  fill: #06783f;
}

.glamor-23 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-23] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #06783f;
  margin-left: 0.5em;
}

.glamor-22,
[data-glamor-22] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-22 *,
[data-glamor-22] *,
.glamor-22 *::before,
[data-glamor-22] *::before,
.glamor-22 *::after,
[data-glamor-22] *::after {
  box-sizing: inherit;
}

.glamor-22:hover > div:last-child,
[data-glamor-22]:hover > div:last-child,
.glamor-22[data-simulate-hover] > div:last-child,
[data-glamor-22][data-simulate-hover] > div:last-child {
  border-color: #0a8f4c;
}

.glamor-22:focus > div:last-child,
[data-glamor-22]:focus > div:last-child,
.glamor-22[data-simulate-focus] > div:last-child,
[data-glamor-22][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-22:active > div:last-child,
[data-glamor-22]:active > div:last-child,
.glamor-22[data-simulate-active] > div:last-child,
[data-glamor-22][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-22 [role="img"],
[data-glamor-22] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-22 [role="img"]:first-child,
[data-glamor-22] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-22 :not([role="img"]) ~ [role="img"],
[data-glamor-22] :not([role="img"]) ~ [role="img"] {
  fill: #06783f;
}

.glamor-22 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-22] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #06783f;
  margin-left: 0.5em;
}

.glamor-18,
[data-glamor-18] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-18::placeholder,
[data-glamor-18]::placeholder,
.glamor-18[data-simulate-placeholder],
[data-glamor-18][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-18::-ms-input-placeholder,
[data-glamor-18]::-ms-input-placeholder,
.glamor-18[data-simulate-msinputplaceholder],
[data-glamor-18][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-18:-ms-input-placeholder,
[data-glamor-18]:-ms-input-placeholder,
.glamor-18[data-simulate-msinputplaceholder],
[data-glamor-18][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-18::-ms-clear,
[data-glamor-18]::-ms-clear,
.glamor-18[data-simulate-msclear],
[data-glamor-18][data-simulate-msclear] {
  display: none;
}

.glamor-18:focus ~ div:last-child,
[data-glamor-18]:focus ~ div:last-child,
.glamor-18[data-simulate-focus] ~ div:last-child,
[data-glamor-18][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-21,
[data-glamor-21] {
  background-color: #fff;
  border-color: #10a35a;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-40,
[data-glamor-40] {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-40 [role="img"],
[data-glamor-40] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-40 [role="img"]:first-child,
[data-glamor-40] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-40 :not([role="img"]) ~ [role="img"],
[data-glamor-40] :not([role="img"]) ~ [role="img"] {
  fill: #cf4615;
}

.glamor-40 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-40] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #cf4615;
  margin-left: 0.5em;
}

.glamor-39,
[data-glamor-39] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-39 *,
[data-glamor-39] *,
.glamor-39 *::before,
[data-glamor-39] *::before,
.glamor-39 *::after,
[data-glamor-39] *::after {
  box-sizing: inherit;
}

.glamor-39:hover > div:last-child,
[data-glamor-39]:hover > div:last-child,
.glamor-39[data-simulate-hover] > div:last-child,
[data-glamor-39][data-simulate-hover] > div:last-child {
  border-color: #cf4615;
}

.glamor-39:focus > div:last-child,
[data-glamor-39]:focus > div:last-child,
.glamor-39[data-simulate-focus] > div:last-child,
[data-glamor-39][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.glamor-39:active > div:last-child,
[data-glamor-39]:active > div:last-child,
.glamor-39[data-simulate-active] > div:last-child,
[data-glamor-39][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.glamor-39 [role="img"],
[data-glamor-39] [role="img"] {
  display: block;
  fill: #2e6fd9;
  flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
}

.glamor-39 [role="img"]:first-child,
[data-glamor-39] [role="img"]:first-child {
  fill: #2e6fd9;
  margin: 0 0.5em;
}

.glamor-39 :not([role="img"]) ~ [role="img"],
[data-glamor-39] :not([role="img"]) ~ [role="img"] {
  fill: #cf4615;
}

.glamor-39 :not([role="img"]) + [role="img"]:not(:last-of-type),
[data-glamor-39] :not([role="img"]) + [role="img"]:not(:last-of-type) {
  fill: #cf4615;
  margin-left: 0.5em;
}

.glamor-35,
[data-glamor-35] {
  align-items: center;
  color: #8e99ab;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: 1 1 auto;
  min-width: 0;
  font-size: 0.875em;
  font-style: italic;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: 1 1 auto;
}

.glamor-35::placeholder,
[data-glamor-35]::placeholder,
.glamor-35[data-simulate-placeholder],
[data-glamor-35][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-35::-ms-input-placeholder,
[data-glamor-35]::-ms-input-placeholder,
.glamor-35[data-simulate-msinputplaceholder],
[data-glamor-35][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-35:-ms-input-placeholder,
[data-glamor-35]:-ms-input-placeholder,
.glamor-35[data-simulate-msinputplaceholder],
[data-glamor-35][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-35::-ms-clear,
[data-glamor-35]::-ms-clear,
.glamor-35[data-simulate-msclear],
[data-glamor-35][data-simulate-msclear] {
  display: none;
}

.glamor-35:focus ~ div:last-child,
[data-glamor-35]:focus ~ div:last-child,
.glamor-35[data-simulate-focus] ~ div:last-child,
[data-glamor-35][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.glamor-38,
[data-glamor-38] {
  background-color: #fff;
  border-color: #e05b2b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "Select": [Function],
            "data": Array [
              Object {
                "text": "Alpha",
                "value": "alpha",
              },
              Object {
                "text": "Beta",
                "value": "beta",
              },
              Object {
                "text": "Gamma",
                "value": "gamma",
              },
            ],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-51"
              >
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Select..."
                  placement="bottom-start"
                  size="large"
                  variant="danger"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-100"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-12"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-100"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-12"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-100"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-12"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-100"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-12"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-100-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-100"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-12"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-100-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-100"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-10"
                                    id="select-100"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-10"
                                      id="select-100"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-100-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-100-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-8"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-8"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-100-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-100-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Select..."
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant="danger"
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-100-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-100-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant="danger"
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-100-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-100-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-6"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant="danger"
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-100-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-100-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-6"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant="danger"
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-100-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-100-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-5"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant="danger"
                                                        >
                                                          <div
                                                            className="glamor-1"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Select...
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconDanger
                                                          key="iconEnd"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconDanger>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-3"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant="danger"
                                                        >
                                                          <div
                                                            className="glamor-4"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Select..."
                  placement="bottom-start"
                  size="large"
                  variant="success"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-103"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-12"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-103"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-12"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-103"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-12"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-103"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-12"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-103-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-103"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-12"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-103-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-103"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-10"
                                    id="select-103"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-10"
                                      id="select-103"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-103-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-103-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-8"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-8"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-103-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-103-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Select..."
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant="success"
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-103-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-103-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant="success"
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-103-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-103-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-23"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant="success"
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-103-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-103-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-23"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant="success"
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-103-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-103-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-22"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant="success"
                                                        >
                                                          <div
                                                            className="glamor-18"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Select...
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconSuccess
                                                          key="iconEnd"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconSuccess>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-3"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant="success"
                                                        >
                                                          <div
                                                            className="glamor-21"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
                <Select
                  data={
                    Array [
                      Object {
                        "text": "Alpha",
                        "value": "alpha",
                      },
                      Object {
                        "text": "Beta",
                        "value": "beta",
                      },
                      Object {
                        "text": "Gamma",
                        "value": "gamma",
                      },
                    ]
                  }
                  placeholder="Select..."
                  placement="bottom-start"
                  size="large"
                  variant="warning"
                >
                  <Select
                    data={
                      Array [
                        Object {
                          "text": "Alpha",
                          "value": "alpha",
                        },
                        Object {
                          "text": "Beta",
                          "value": "beta",
                        },
                        Object {
                          "text": "Gamma",
                          "value": "gamma",
                        },
                      ]
                    }
                    disabled={undefined}
                    getItemProps={[Function]}
                    getMenuProps={[Function]}
                    getTriggerProps={[Function]}
                    highlightedIndex={undefined}
                    id="select-106"
                    isOpen={false}
                    modifiers={
                      Object {
                        "contentWidth": Object {
                          "enabled": true,
                          "fn": [Function],
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                  >
                    <ThemedComponent
                      className="glamor-12"
                      data={
                        Array [
                          Object {
                            "text": "Alpha",
                            "value": "alpha",
                          },
                          Object {
                            "text": "Beta",
                            "value": "beta",
                          },
                          Object {
                            "text": "Gamma",
                            "value": "gamma",
                          },
                        ]
                      }
                      disabled={undefined}
                      getItemProps={[Function]}
                      getMenuProps={[Function]}
                      getTriggerProps={[Function]}
                      highlightedIndex={undefined}
                      id="select-106"
                      isOpen={false}
                      modifiers={
                        Object {
                          "contentWidth": Object {
                            "enabled": true,
                            "fn": [Function],
                          },
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom-start"
                    >
                      <Themed(Dropdown)
                        className="glamor-12"
                        data={
                          Array [
                            Object {
                              "text": "Alpha",
                              "value": "alpha",
                            },
                            Object {
                              "text": "Beta",
                              "value": "beta",
                            },
                            Object {
                              "text": "Gamma",
                              "value": "gamma",
                            },
                          ]
                        }
                        disabled={undefined}
                        getItemProps={[Function]}
                        getMenuProps={[Function]}
                        getTriggerProps={[Function]}
                        highlightedIndex={undefined}
                        id="select-106"
                        isOpen={false}
                        modifiers={
                          Object {
                            "contentWidth": Object {
                              "enabled": true,
                              "fn": [Function],
                            },
                          }
                        }
                        onClose={[Function]}
                        onOpen={[Function]}
                        placement="bottom-start"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <Dropdown
                              className="glamor-12"
                              data={
                                Array [
                                  Object {
                                    "text": "Alpha",
                                    "value": "alpha",
                                  },
                                  Object {
                                    "text": "Beta",
                                    "value": "beta",
                                  },
                                  Object {
                                    "text": "Gamma",
                                    "value": "gamma",
                                  },
                                ]
                              }
                              disabled={undefined}
                              getItemProps={[Function]}
                              getMenuProps={[Function]}
                              getTriggerProps={[Function]}
                              highlightedIndex={undefined}
                              id="select-106"
                              isOpen={false}
                              modifiers={
                                Object {
                                  "contentWidth": Object {
                                    "enabled": true,
                                    "fn": [Function],
                                  },
                                }
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom-start"
                            >
                              <Popover
                                className="glamor-12"
                                content={
                                  <DropdownContent
                                    data={
                                      Array [
                                        Object {
                                          "text": "Alpha",
                                          "value": "alpha",
                                        },
                                        Object {
                                          "text": "Beta",
                                          "value": "beta",
                                        },
                                        Object {
                                          "text": "Gamma",
                                          "value": "gamma",
                                        },
                                      ]
                                    }
                                    getItemProps={[Function]}
                                    getMenuProps={[Function]}
                                    id="select-106-content"
                                    modifiers={
                                      Object {
                                        "contentWidth": Object {
                                          "enabled": true,
                                          "fn": [Function],
                                        },
                                      }
                                    }
                                    placement="bottom-start"
                                    wide={undefined}
                                  />
                                }
                                disabled={undefined}
                                focusTriggerOnClose={true}
                                getItemProps={[Function]}
                                getMenuProps={[Function]}
                                getTriggerProps={[Function]}
                                hasArrow={true}
                                highlightedIndex={undefined}
                                id="select-106"
                                isOpen={false}
                                onClose={[Function]}
                                onOpen={[Function]}
                                placement="bottom"
                                triggerRef={[Function]}
                                wrapContent={false}
                              >
                                <Popover
                                  className="glamor-12"
                                  content={
                                    <DropdownContent
                                      data={
                                        Array [
                                          Object {
                                            "text": "Alpha",
                                            "value": "alpha",
                                          },
                                          Object {
                                            "text": "Beta",
                                            "value": "beta",
                                          },
                                          Object {
                                            "text": "Gamma",
                                            "value": "gamma",
                                          },
                                        ]
                                      }
                                      getItemProps={[Function]}
                                      getMenuProps={[Function]}
                                      id="select-106-content"
                                      modifiers={
                                        Object {
                                          "contentWidth": Object {
                                            "enabled": true,
                                            "fn": [Function],
                                          },
                                        }
                                      }
                                      placement="bottom-start"
                                      wide={undefined}
                                    />
                                  }
                                  disabled={undefined}
                                  focusTriggerOnClose={true}
                                  getItemProps={[Function]}
                                  getMenuProps={[Function]}
                                  getTriggerProps={[Function]}
                                  hasArrow={true}
                                  highlightedIndex={undefined}
                                  id="select-106"
                                  isOpen={false}
                                  onClose={[Function]}
                                  onOpen={[Function]}
                                  placement="bottom"
                                  tag="span"
                                  triggerRef={[Function]}
                                  wrapContent={false}
                                >
                                  <Manager
                                    className="glamor-10"
                                    id="select-106"
                                    tag="span"
                                  >
                                    <span
                                      className="glamor-10"
                                      id="select-106"
                                    >
                                      <PopoverTrigger
                                        aria-activedescendant={undefined}
                                        aria-describedby="select-106-content"
                                        aria-disabled={undefined}
                                        aria-expanded={false}
                                        aria-haspopup="listbox"
                                        aria-invalid={undefined}
                                        aria-owns="select-106-content"
                                        aria-readonly={undefined}
                                        aria-required={undefined}
                                        disabled={undefined}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <PopoverTrigger
                                          component="span"
                                        >
                                          <Target
                                            className="glamor-8"
                                            component="span"
                                          >
                                            <span
                                              className="glamor-8"
                                            >
                                              <SelectTrigger
                                                aria-activedescendant={undefined}
                                                aria-describedby="select-106-content"
                                                aria-disabled={undefined}
                                                aria-expanded={false}
                                                aria-haspopup="listbox"
                                                aria-invalid={undefined}
                                                aria-owns="select-106-content"
                                                aria-readonly={undefined}
                                                aria-required={undefined}
                                                disabled={undefined}
                                                isOpen={false}
                                                item={undefined}
                                                name={undefined}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Select..."
                                                readOnly={undefined}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                triggerRef={[Function]}
                                                variant="warning"
                                              >
                                                <SelectTrigger
                                                  afterItems={
                                                    Array [
                                                      <IconArrowDropdownDown
                                                        css={
                                                          Object {
                                                            "margin": "0.5em",
                                                          }
                                                        }
                                                        size="1.5em"
                                                      />,
                                                      <input
                                                        name={undefined}
                                                        type="hidden"
                                                        value=""
                                                      />,
                                                    ]
                                                  }
                                                  aria-activedescendant={undefined}
                                                  aria-describedby="select-106-content"
                                                  aria-disabled={undefined}
                                                  aria-expanded={false}
                                                  aria-haspopup="listbox"
                                                  aria-invalid={undefined}
                                                  aria-owns="select-106-content"
                                                  aria-readonly={undefined}
                                                  aria-required={undefined}
                                                  control={[Function]}
                                                  controlProps={
                                                    Object {
                                                      "hasPlaceholder": true,
                                                      "variant": undefined,
                                                    }
                                                  }
                                                  disabled={undefined}
                                                  fauxControlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  readOnly={undefined}
                                                  role="button"
                                                  selectedItemVariant={undefined}
                                                  size="large"
                                                  tabIndex={0}
                                                  variant="warning"
                                                >
                                                  <FauxControl
                                                    afterItems={
                                                      Array [
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          size="1.5em"
                                                        />,
                                                        <input
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />,
                                                      ]
                                                    }
                                                    aria-activedescendant={undefined}
                                                    aria-describedby="select-106-content"
                                                    aria-disabled={undefined}
                                                    aria-expanded={false}
                                                    aria-haspopup="listbox"
                                                    aria-invalid={undefined}
                                                    aria-owns="select-106-content"
                                                    aria-readonly={undefined}
                                                    aria-required={undefined}
                                                    className="glamor-40"
                                                    control={[Function]}
                                                    controlProps={
                                                      Object {
                                                        "hasPlaceholder": true,
                                                        "variant": undefined,
                                                      }
                                                    }
                                                    disabled={undefined}
                                                    fauxControlRef={[Function]}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    readOnly={undefined}
                                                    role="button"
                                                    selectedItemVariant={undefined}
                                                    size="large"
                                                    tabIndex={0}
                                                    variant="warning"
                                                  >
                                                    <FauxControl
                                                      aria-activedescendant={undefined}
                                                      aria-describedby="select-106-content"
                                                      aria-disabled={undefined}
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      aria-invalid={undefined}
                                                      aria-owns="select-106-content"
                                                      aria-readonly={undefined}
                                                      aria-required={undefined}
                                                      className="glamor-40"
                                                      control={[Function]}
                                                      disabled={undefined}
                                                      innerRef={[Function]}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      role="button"
                                                      selectedItemVariant={undefined}
                                                      tabIndex={0}
                                                      variant="warning"
                                                    >
                                                      <div
                                                        aria-activedescendant={undefined}
                                                        aria-describedby="select-106-content"
                                                        aria-disabled={undefined}
                                                        aria-expanded={false}
                                                        aria-haspopup="listbox"
                                                        aria-invalid={undefined}
                                                        aria-owns="select-106-content"
                                                        aria-readonly={undefined}
                                                        aria-required={undefined}
                                                        className="glamor-39"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        role="button"
                                                        tabIndex={0}
                                                      >
                                                        <glamorous(Trigger)
                                                          controlPropsIn={
                                                            Object {
                                                              "hasPlaceholder": true,
                                                              "variant": undefined,
                                                            }
                                                          }
                                                          disabled={undefined}
                                                          hasPlaceholder={true}
                                                          iconEnd={undefined}
                                                          iconStart={undefined}
                                                          innerRef={undefined}
                                                          key="control"
                                                          prefix={undefined}
                                                          readOnly={undefined}
                                                          size="large"
                                                          suffix={undefined}
                                                          variant="warning"
                                                        >
                                                          <div
                                                            className="glamor-35"
                                                            prefix={undefined}
                                                            readOnly={undefined}
                                                          >
                                                            <TriggerContent>
                                                              <span
                                                                className="glamor-0"
                                                              >
                                                                Select...
                                                              </span>
                                                            </TriggerContent>
                                                          </div>
                                                        </glamorous(Trigger)>
                                                        <IconWarning
                                                          key="iconEnd"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-2"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconWarning>
                                                        <IconArrowDropdownDown
                                                          css={
                                                            Object {
                                                              "margin": "0.5em",
                                                            }
                                                          }
                                                          key="arrow"
                                                          size="1.5em"
                                                        >
                                                          <Icon
                                                            css={
                                                              Object {
                                                                "margin": "0.5em",
                                                              }
                                                            }
                                                            rtl={false}
                                                            size="1.5em"
                                                          >
                                                            <glamorous(svg)
                                                              aria-hidden={true}
                                                              aria-labelledby={undefined}
                                                              css={
                                                                Object {
                                                                  "margin": "0.5em",
                                                                }
                                                              }
                                                              role="img"
                                                              rtl={false}
                                                              size="1.5em"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={undefined}
                                                                className="glamor-3"
                                                                role="img"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <g>
                                                                  <path
                                                                    d="M12 17.5l-8-8h16z"
                                                                  />
                                                                </g>
                                                              </svg>
                                                            </glamorous(svg)>
                                                          </Icon>
                                                        </IconArrowDropdownDown>
                                                        <input
                                                          key="input"
                                                          name={undefined}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <Underlay
                                                          disabled={undefined}
                                                          readOnly={undefined}
                                                          variant="warning"
                                                        >
                                                          <div
                                                            className="glamor-38"
                                                            readOnly={undefined}
                                                          />
                                                        </Underlay>
                                                      </div>
                                                    </FauxControl>
                                                  </FauxControl>
                                                </SelectTrigger>
                                              </SelectTrigger>
                                            </span>
                                          </Target>
                                        </PopoverTrigger>
                                      </PopoverTrigger>
                                    </span>
                                  </Manager>
                                </Popover>
                              </Popover>
                            </Dropdown>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(Dropdown)>
                    </ThemedComponent>
                  </Select>
                </Select>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;
