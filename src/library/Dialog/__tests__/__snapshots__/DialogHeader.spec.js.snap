// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DialogHeader demo examples Snapshots: basic 1`] = `
.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-26 {
  opacity: 0;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-15 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-15 > div > :first-child {
  margin-top: 0;
}

.emotion-15 > div > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-14 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-14 > div > :first-child {
  margin-top: 0;
}

.emotion-14 > div > :last-child {
  margin-bottom: 0;
}

.emotion-10 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Transition
                appear={true}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entering"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-1-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-1"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-1-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-1"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-1-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-1-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-1-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-1-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-1-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-1-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-1-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-1-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-1-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-1-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                  scrollY={true}
                                                >
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                    scrollY={true}
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                      scrollY={true}
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                            scrollY={true}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                            >
                                                              <div
                                                                className="emotion-14"
                                                              >
                                                                <Scroller
                                                                  containerRef={[Function]}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Scroller
                                                                    className="emotion-10"
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <Themed(OverflowContainer)
                                                                      className="emotion-10"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <ThemeProvider>
                                                                        <ThemeProvider>
                                                                          <OverflowContainer
                                                                            className="emotion-10"
                                                                            containerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <OverflowContainer
                                                                              className="emotion-10"
                                                                              containerRef={[Function]}
                                                                              innerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <div
                                                                                className="emotion-9"
                                                                                onScroll={[Function]}
                                                                              >
                                                                                <EventListener
                                                                                  listeners={
                                                                                    Array [
                                                                                      Object {
                                                                                        "event": "resize",
                                                                                        "handler": [Function],
                                                                                        "target": "window",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                />
                                                                              </div>
                                                                            </OverflowContainer>
                                                                          </OverflowContainer>
                                                                        </ThemeProvider>
                                                                      </ThemeProvider>
                                                                    </Themed(OverflowContainer)>
                                                                  </Scroller>
                                                                </Scroller>
                                                              </div>
                                                            </OverflowContainerWithShadows>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </Transition>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`DialogHeader demo examples Snapshots: close-button 1`] = `
.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-31 {
  padding: 1em;
  position: relative;
}

.emotion-31:not(:last-child) {
  padding-bottom: 0;
}

.emotion-31 > div {
  position: static;
}

.emotion-31 [role="document"] {
  width: auto;
}

.emotion-28 {
  position: static;
}

.emotion-29 {
  opacity: 0;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-27 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-26 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-25 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-25 {
    max-height: 35em;
  }
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-23:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-23:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-22:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-18 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-18 > div > :first-child {
  margin-top: 0;
}

.emotion-18 > div > :last-child {
  margin-bottom: 0;
}

.emotion-17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-17 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-17 > div > :first-child {
  margin-top: 0;
}

.emotion-17 > div > :last-child {
  margin-bottom: 0;
}

.emotion-13 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-12 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-12:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-8 {
  box-sizing: border-box;
  color: #de1b1b;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0.1875em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-8:hover {
  background-color: #f5f7fa;
  border-color: #f55353;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-8:focus:active,
.emotion-8:focus:hover {
  border-color: #c8d1e0;
}

.emotion-8:active {
  background-color: #ebeff5;
  border-color: #b80d0d;
  color: #de1b1b;
}

.emotion-8::-moz-focus-inner {
  border: 0;
}

.emotion-8 [role="img"] {
  box-sizing: content-box;
  color: #de1b1b;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-8 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-8 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-8 [role="img"]:only-child {
  margin: 0;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-6 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

<Styled(div)>
  <div
    className="emotion-31"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-28"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Transition
                appear={true}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entering"
                >
                  <div
                    className="emotion-29"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-3-title"
                          aria-modal={true}
                          className="emotion-28"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-3"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-3-title"
                            aria-modal={true}
                            className="emotion-27"
                            id="dialog-3"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-26"
                              >
                                <DialogContent
                                  id="dialog-3-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-25"
                                    id="dialog-3-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      closeButton={
                                        <Button
                                          aria-label="Close"
                                          element="button"
                                          iconStart={<IconClear />}
                                          size="small"
                                          type="button"
                                          variant="danger"
                                        />
                                      }
                                      titleProps={
                                        Object {
                                          "id": "dialog-3-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-10"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-10"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-9"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-3-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-3-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-3-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-3-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-3-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-3-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-3-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                                <Button
                                                  aria-label="Close"
                                                  element="button"
                                                  iconStart={<IconClear />}
                                                  size="small"
                                                  type="button"
                                                  variant="danger"
                                                >
                                                  <Button
                                                    aria-label="Close"
                                                    element="button"
                                                    size="small"
                                                    type="button"
                                                    variant="danger"
                                                  >
                                                    <button
                                                      aria-label="Close"
                                                      className="emotion-8"
                                                      type="button"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          <IconClear
                                                            key="iconStart"
                                                            size="medium"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="medium"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="medium"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-6"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconClear>
                                                        </span>
                                                      </Styled(span)>
                                                    </button>
                                                  </Button>
                                                </Button>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-23"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-23"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-22"
                                            >
                                              <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                  scrollY={true}
                                                >
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-18"
                                                    scrollY={true}
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-18"
                                                      scrollY={true}
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-18"
                                                            scrollY={true}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-18"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                            >
                                                              <div
                                                                className="emotion-17"
                                                              >
                                                                <Scroller
                                                                  containerRef={[Function]}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Scroller
                                                                    className="emotion-13"
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <Themed(OverflowContainer)
                                                                      className="emotion-13"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <ThemeProvider>
                                                                        <ThemeProvider>
                                                                          <OverflowContainer
                                                                            className="emotion-13"
                                                                            containerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <OverflowContainer
                                                                              className="emotion-13"
                                                                              containerRef={[Function]}
                                                                              innerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <div
                                                                                className="emotion-12"
                                                                                onScroll={[Function]}
                                                                              >
                                                                                <EventListener
                                                                                  listeners={
                                                                                    Array [
                                                                                      Object {
                                                                                        "event": "resize",
                                                                                        "handler": [Function],
                                                                                        "target": "window",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                />
                                                                              </div>
                                                                            </OverflowContainer>
                                                                          </OverflowContainer>
                                                                        </ThemeProvider>
                                                                      </ThemeProvider>
                                                                    </Themed(OverflowContainer)>
                                                                  </Scroller>
                                                                </Scroller>
                                                              </div>
                                                            </OverflowContainerWithShadows>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </Transition>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;
