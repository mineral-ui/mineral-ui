// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog demo examples Snapshots: actions 1`] = `
.emotion-46 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-43 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-42 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-42 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-33 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-48 {
  padding: 1em;
  position: relative;
}

.emotion-48:not(:last-child) {
  padding-bottom: 0;
}

.emotion-48 > div {
  position: static;
}

.emotion-48 [role="document"] {
  width: auto;
}

.emotion-45 {
  position: static;
}

.emotion-44 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-44 *,
.emotion-44 *::before,
.emotion-44 *::after {
  box-sizing: inherit;
}

.emotion-30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-30:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-30:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-30 > :first-child {
  margin-top: 0;
}

.emotion-30 > :last-child {
  margin-bottom: 0;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-29:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-29:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-29 > :first-child {
  margin-top: 0;
}

.emotion-29 > :last-child {
  margin-bottom: 0;
}

.emotion-24 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-20 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-19 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-19:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-40 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-39 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-39 *,
.emotion-39 *::before,
.emotion-39 *::after {
  box-sizing: inherit;
}

.emotion-38 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-38 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-34 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-34:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-34:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-34:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-34::-moz-focus-inner {
  border: 0;
}

.emotion-34 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-34 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-34 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-34 [role="img"]:only-child {
  margin: 0;
}

.emotion-32 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-18 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-18 *,
.emotion-18 *::before,
.emotion-18 *::after {
  box-sizing: inherit;
}

.emotion-10 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-10 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-9 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-14 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-14 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-13 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-13 *,
.emotion-13 *::before,
.emotion-13 *::after {
  box-sizing: inherit;
}

.emotion-13:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-13:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-13:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-13 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-13 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-11 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-11[type="search"] {
  -webkit-appearance: none;
}

.emotion-11[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-11::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::-ms-clear {
  display: none;
}

.emotion-11:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-12 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-37 {
  box-sizing: border-box;
  color: #afbacc;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #dde3ed;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-37 *,
.emotion-37 *::before,
.emotion-37 *::after {
  box-sizing: inherit;
}

.emotion-37:focus {
  background-color: #2a854e;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-37:hover {
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-37:active {
  color: #afbacc;
}

.emotion-37::-moz-focus-inner {
  border: 0;
}

.emotion-37 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-37 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-37 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-37 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-48"
  >
    <withProps(DemoDialog)
      actions={
        Array [
          Object {
            "text": "Cancel",
          },
          Object {
            "disabled": true,
            "text": "Continue",
            "variant": "success",
          },
        ]
      }
      title="Lorem ipsum dolor sit amet"
    >
      <DemoDialog
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "disabled": true,
              "text": "Continue",
              "variant": "success",
            },
          ]
        }
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        title="Lorem ipsum dolor sit amet"
        usePortal={false}
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "disabled": true,
                "text": "Continue",
                "variant": "success",
              },
            ]
          }
          className="emotion-45"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title="Lorem ipsum dolor sit amet"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-46"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          actions={
                            Array [
                              Object {
                                "text": "Cancel",
                              },
                              Object {
                                "disabled": true,
                                "text": "Continue",
                                "variant": "success",
                              },
                            ]
                          }
                          aria-labelledby="dialog-10-title"
                          aria-modal={true}
                          className="emotion-45"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-10"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-10-title"
                            aria-modal={true}
                            className="emotion-44"
                            id="dialog-10"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-43"
                              >
                                <DialogContent
                                  id="dialog-10-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-42"
                                    id="dialog-10-content"
                                    role="document"
                                  >
                                    <DialogHeader>
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-10-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-10-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-10-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-10-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-10-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-10-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-10-title"
                                                                  >
                                                                    Lorem ipsum dolor sit amet
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-30"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-30"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-29"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-24"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-24"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-24"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-24"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-24"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-20"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-20"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-20"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-20"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-19"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <FormField
                                                                              input={[Function]}
                                                                              key=".0"
                                                                              label="Lorem ipsum"
                                                                              required={true}
                                                                              requiredText="Required"
                                                                            >
                                                                              <FormField>
                                                                                <div
                                                                                  className="emotion-18"
                                                                                >
                                                                                  <label>
                                                                                    <Styled(div)
                                                                                      key="formField-11-textWrapper"
                                                                                    >
                                                                                      <div
                                                                                        className="emotion-10"
                                                                                      >
                                                                                        <span
                                                                                          id="formField-11-labelText"
                                                                                        >
                                                                                          Lorem ipsum
                                                                                        </span>
                                                                                        <Styled(span)>
                                                                                          <span
                                                                                            className="emotion-9"
                                                                                          >
                                                                                            Required
                                                                                          </span>
                                                                                        </Styled(span)>
                                                                                      </div>
                                                                                    </Styled(div)>
                                                                                    <TextInput
                                                                                      key="formField-11-control"
                                                                                      required={true}
                                                                                      size="large"
                                                                                      type="text"
                                                                                    >
                                                                                      <TextInput
                                                                                        control={[Function]}
                                                                                        controlProps={
                                                                                          Object {
                                                                                            "aria-describedby": undefined,
                                                                                            "aria-invalid": undefined,
                                                                                            "aria-required": true,
                                                                                            "controlRef": undefined,
                                                                                            "disabled": undefined,
                                                                                            "readOnly": undefined,
                                                                                            "required": true,
                                                                                            "type": "text",
                                                                                          }
                                                                                        }
                                                                                        size="large"
                                                                                      >
                                                                                        <TextInput
                                                                                          className="emotion-14"
                                                                                          control={[Function]}
                                                                                          controlProps={
                                                                                            Object {
                                                                                              "aria-describedby": undefined,
                                                                                              "aria-invalid": undefined,
                                                                                              "aria-required": true,
                                                                                              "controlRef": undefined,
                                                                                              "disabled": undefined,
                                                                                              "readOnly": undefined,
                                                                                              "required": true,
                                                                                              "type": "text",
                                                                                            }
                                                                                          }
                                                                                          size="large"
                                                                                        >
                                                                                          <Themed(FauxControl)
                                                                                            className="emotion-14"
                                                                                            control={[Function]}
                                                                                            controlProps={
                                                                                              Object {
                                                                                                "aria-describedby": undefined,
                                                                                                "aria-invalid": undefined,
                                                                                                "aria-required": true,
                                                                                                "controlRef": undefined,
                                                                                                "disabled": undefined,
                                                                                                "readOnly": undefined,
                                                                                                "required": true,
                                                                                                "type": "text",
                                                                                              }
                                                                                            }
                                                                                            size="large"
                                                                                          >
                                                                                            <ThemeProvider>
                                                                                              <ThemeProvider>
                                                                                                <FauxControl
                                                                                                  className="emotion-14"
                                                                                                  control={[Function]}
                                                                                                  controlProps={
                                                                                                    Object {
                                                                                                      "aria-describedby": undefined,
                                                                                                      "aria-invalid": undefined,
                                                                                                      "aria-required": true,
                                                                                                      "controlRef": undefined,
                                                                                                      "disabled": undefined,
                                                                                                      "readOnly": undefined,
                                                                                                      "required": true,
                                                                                                      "type": "text",
                                                                                                    }
                                                                                                  }
                                                                                                  size="large"
                                                                                                >
                                                                                                  <FauxControl
                                                                                                    className="emotion-14"
                                                                                                    control={[Function]}
                                                                                                  >
                                                                                                    <div
                                                                                                      className="emotion-13"
                                                                                                    >
                                                                                                      <Control
                                                                                                        aria-required={true}
                                                                                                        controlPropsIn={
                                                                                                          Object {
                                                                                                            "aria-describedby": undefined,
                                                                                                            "aria-invalid": undefined,
                                                                                                            "aria-required": true,
                                                                                                            "controlRef": undefined,
                                                                                                            "disabled": undefined,
                                                                                                            "readOnly": undefined,
                                                                                                            "required": true,
                                                                                                            "type": "text",
                                                                                                          }
                                                                                                        }
                                                                                                        key="control"
                                                                                                        required={true}
                                                                                                        size="large"
                                                                                                        type="text"
                                                                                                      >
                                                                                                        <input
                                                                                                          aria-required={true}
                                                                                                          className="emotion-11"
                                                                                                          required={true}
                                                                                                          size="large"
                                                                                                          type="text"
                                                                                                        />
                                                                                                      </Control>
                                                                                                      <Underlay>
                                                                                                        <div
                                                                                                          className="emotion-12"
                                                                                                        />
                                                                                                      </Underlay>
                                                                                                    </div>
                                                                                                  </FauxControl>
                                                                                                </FauxControl>
                                                                                              </ThemeProvider>
                                                                                            </ThemeProvider>
                                                                                          </Themed(FauxControl)>
                                                                                        </TextInput>
                                                                                      </TextInput>
                                                                                    </TextInput>
                                                                                  </label>
                                                                                </div>
                                                                              </FormField>
                                                                            </FormField>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                    <DialogFooter>
                                      <withProps(DialogFooter)>
                                        <DialogFooter
                                          element="footer"
                                        >
                                          <DialogHeader
                                            className="emotion-40"
                                            element="footer"
                                          >
                                            <Styled(footer)
                                              className="emotion-40"
                                              element="footer"
                                            >
                                              <footer
                                                className="emotion-39"
                                              >
                                                <DialogActions>
                                                  <DialogActions>
                                                    <div
                                                      className="emotion-38"
                                                    >
                                                      <Button
                                                        element="button"
                                                        key="0"
                                                        minimal={true}
                                                        primary={false}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          text="Cancel"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-34"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-33"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-32"
                                                                  >
                                                                    Cancel
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                      <Button
                                                        disabled={true}
                                                        element="button"
                                                        key="1"
                                                        minimal={false}
                                                        primary={true}
                                                        size="medium"
                                                        type="button"
                                                        variant="success"
                                                      >
                                                        <Button
                                                          disabled={true}
                                                          element="button"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          text="Continue"
                                                          type="button"
                                                          variant="success"
                                                        >
                                                          <button
                                                            className="emotion-37"
                                                            disabled={true}
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-33"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-32"
                                                                  >
                                                                    Continue
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                    </div>
                                                  </DialogActions>
                                                </DialogActions>
                                              </footer>
                                            </Styled(footer)>
                                          </DialogHeader>
                                        </DialogFooter>
                                      </withProps(DialogFooter)>
                                    </DialogFooter>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: actions 2`] = `
.emotion-33 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-29 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-29 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-35 {
  padding: 1em;
  position: relative;
}

.emotion-35:not(:last-child) {
  padding-bottom: 0;
}

.emotion-35 > div {
  position: static;
}

.emotion-35 [role="document"] {
  width: auto;
}

.emotion-32 {
  position: static;
}

.emotion-31 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-27:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-27:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-27 > :first-child {
  margin-top: 0;
}

.emotion-27 > :last-child {
  margin-bottom: 0;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-26:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-26 > :first-child {
  margin-top: 0;
}

.emotion-26 > :last-child {
  margin-bottom: 0;
}

.emotion-21 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-17 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-15 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-11 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-11::-moz-focus-inner {
  border: 0;
}

.emotion-11 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-11 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-11 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-11 [role="img"]:only-child {
  margin: 0;
}

.emotion-9 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-14 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-35"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-32"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-33"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-38-title"
                          aria-modal={true}
                          className="emotion-32"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-38"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-38-title"
                            aria-modal={true}
                            className="emotion-31"
                            id="dialog-38"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-30"
                              >
                                <DialogContent
                                  id="dialog-38-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-29"
                                    id="dialog-38-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-38-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-38-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-38-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-38-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-38-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-38-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-38-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-38-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-27"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-26"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-21"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-21"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-21"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-21"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-21"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-17"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-17"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-17"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-17"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-16"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <DialogActions
                                                                              key=".1"
                                                                            >
                                                                              <DialogActions>
                                                                                <div
                                                                                  className="emotion-15"
                                                                                >
                                                                                  <Button
                                                                                    element="button"
                                                                                    key="0"
                                                                                    minimal={true}
                                                                                    primary={false}
                                                                                    size="medium"
                                                                                    type="button"
                                                                                  >
                                                                                    <Button
                                                                                      element="button"
                                                                                      minimal={true}
                                                                                      primary={false}
                                                                                      size="medium"
                                                                                      text="Cancel"
                                                                                      type="button"
                                                                                    >
                                                                                      <button
                                                                                        className="emotion-11"
                                                                                        type="button"
                                                                                      >
                                                                                        <Styled(span)>
                                                                                          <span
                                                                                            className="emotion-10"
                                                                                          >
                                                                                            <Styled(span)
                                                                                              size="medium"
                                                                                            >
                                                                                              <span
                                                                                                className="emotion-9"
                                                                                              >
                                                                                                Cancel
                                                                                              </span>
                                                                                            </Styled(span)>
                                                                                          </span>
                                                                                        </Styled(span)>
                                                                                      </button>
                                                                                    </Button>
                                                                                  </Button>
                                                                                  <Button
                                                                                    element="button"
                                                                                    key="1"
                                                                                    minimal={false}
                                                                                    primary={true}
                                                                                    size="medium"
                                                                                    type="button"
                                                                                  >
                                                                                    <Button
                                                                                      element="button"
                                                                                      minimal={false}
                                                                                      primary={true}
                                                                                      size="medium"
                                                                                      text="Action"
                                                                                      type="button"
                                                                                    >
                                                                                      <button
                                                                                        className="emotion-14"
                                                                                        type="button"
                                                                                      >
                                                                                        <Styled(span)>
                                                                                          <span
                                                                                            className="emotion-10"
                                                                                          >
                                                                                            <Styled(span)
                                                                                              size="medium"
                                                                                            >
                                                                                              <span
                                                                                                className="emotion-9"
                                                                                              >
                                                                                                Action
                                                                                              </span>
                                                                                            </Styled(span)>
                                                                                          </span>
                                                                                        </Styled(span)>
                                                                                      </button>
                                                                                    </Button>
                                                                                  </Button>
                                                                                </div>
                                                                              </DialogActions>
                                                                            </DialogActions>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: alternate 1`] = `
.emotion-36 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-32 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-32 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-38 {
  padding: 1em;
  position: relative;
}

.emotion-38:not(:last-child) {
  padding-bottom: 0;
}

.emotion-38 > div {
  position: static;
}

.emotion-38 [role="document"] {
  width: auto;
}

.emotion-35 {
  position: static;
}

.emotion-34 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-30 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-28 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-24 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-24:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-24::-moz-focus-inner {
  border: 0;
}

.emotion-24 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-24 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-24 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-24 [role="img"]:only-child {
  margin: 0;
}

.emotion-22 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-27 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-38"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-35"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-36"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-4-title"
                          aria-modal={true}
                          className="emotion-35"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-4"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-4-title"
                            aria-modal={true}
                            className="emotion-34"
                            id="dialog-4"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-33"
                              >
                                <DialogContent
                                  id="dialog-4-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-32"
                                    id="dialog-4-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-4-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-4-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-4-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-4-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-4-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-4-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-4-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-4-title"
                                                                  >
                                                                    Lorem ipsum dolor sit amet
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <p>
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                            </p>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                    <DialogFooter>
                                      <withProps(DialogFooter)>
                                        <DialogFooter
                                          element="footer"
                                        >
                                          <DialogHeader
                                            className="emotion-30"
                                            element="footer"
                                          >
                                            <Styled(footer)
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <footer
                                                className="emotion-29"
                                              >
                                                <DialogActions>
                                                  <DialogActions>
                                                    <div
                                                      className="emotion-28"
                                                    >
                                                      <Button
                                                        element="button"
                                                        key="0"
                                                        minimal={true}
                                                        primary={false}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          text="Cancel"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-24"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-23"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-22"
                                                                  >
                                                                    Cancel
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                      <Button
                                                        element="button"
                                                        key="1"
                                                        minimal={false}
                                                        primary={true}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          text="Action"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-27"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-23"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-22"
                                                                  >
                                                                    Action
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                    </div>
                                                  </DialogActions>
                                                </DialogActions>
                                              </footer>
                                            </Styled(footer)>
                                          </DialogHeader>
                                        </DialogFooter>
                                      </withProps(DialogFooter)>
                                    </DialogFooter>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: basic 1`] = `
.emotion-36 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-32 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-32 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-38 {
  padding: 1em;
  position: relative;
}

.emotion-38:not(:last-child) {
  padding-bottom: 0;
}

.emotion-38 > div {
  position: static;
}

.emotion-38 [role="document"] {
  width: auto;
}

.emotion-35 {
  position: static;
}

.emotion-34 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-30 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-28 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-24 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-24:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-24::-moz-focus-inner {
  border: 0;
}

.emotion-24 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-24 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-24 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-24 [role="img"]:only-child {
  margin: 0;
}

.emotion-22 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-27 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-38"
  >
    <withProps(DemoDialog)
      actions={
        Array [
          Object {
            "text": "Cancel",
          },
          Object {
            "text": "Action",
          },
        ]
      }
      title="Lorem ipsum dolor sit amet"
    >
      <DemoDialog
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        title="Lorem ipsum dolor sit amet"
        usePortal={false}
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          className="emotion-35"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title="Lorem ipsum dolor sit amet"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-36"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          actions={
                            Array [
                              Object {
                                "text": "Cancel",
                              },
                              Object {
                                "text": "Action",
                              },
                            ]
                          }
                          aria-labelledby="dialog-2-title"
                          aria-modal={true}
                          className="emotion-35"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-2"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-2-title"
                            aria-modal={true}
                            className="emotion-34"
                            id="dialog-2"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-33"
                              >
                                <DialogContent
                                  id="dialog-2-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-32"
                                    id="dialog-2-content"
                                    role="document"
                                  >
                                    <DialogHeader>
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-2-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-2-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-2-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-2-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-2-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-2-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-2-title"
                                                                  >
                                                                    Lorem ipsum dolor sit amet
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <p
                                                                              key=".0"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                            </p>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                    <DialogFooter>
                                      <withProps(DialogFooter)>
                                        <DialogFooter
                                          element="footer"
                                        >
                                          <DialogHeader
                                            className="emotion-30"
                                            element="footer"
                                          >
                                            <Styled(footer)
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <footer
                                                className="emotion-29"
                                              >
                                                <DialogActions>
                                                  <DialogActions>
                                                    <div
                                                      className="emotion-28"
                                                    >
                                                      <Button
                                                        element="button"
                                                        key="0"
                                                        minimal={true}
                                                        primary={false}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          text="Cancel"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-24"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-23"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-22"
                                                                  >
                                                                    Cancel
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                      <Button
                                                        element="button"
                                                        key="1"
                                                        minimal={false}
                                                        primary={true}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          text="Action"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-27"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-23"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-22"
                                                                  >
                                                                    Action
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                    </div>
                                                  </DialogActions>
                                                </DialogActions>
                                              </footer>
                                            </Styled(footer)>
                                          </DialogHeader>
                                        </DialogFooter>
                                      </withProps(DialogFooter)>
                                    </DialogFooter>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: basic 2`] = `
.emotion-26 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-46-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-46"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-46-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-46"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-46-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-46-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-46-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-46-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-46-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-46-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-46-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-46-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-46-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-46-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <p>
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin.
                                                                            </p>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: basic 3`] = `
.emotion-36 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-32 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-32 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-38 {
  padding: 1em;
  position: relative;
}

.emotion-38:not(:last-child) {
  padding-bottom: 0;
}

.emotion-38 > div {
  position: static;
}

.emotion-38 [role="document"] {
  width: auto;
}

.emotion-35 {
  position: static;
}

.emotion-34 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-30 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-28 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-24 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-24:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-24::-moz-focus-inner {
  border: 0;
}

.emotion-24 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-24 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-24 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-24 [role="img"]:only-child {
  margin: 0;
}

.emotion-22 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-27 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-38"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-35"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-36"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-50-title"
                          aria-modal={true}
                          className="emotion-35"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-50"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-50-title"
                            aria-modal={true}
                            className="emotion-34"
                            id="dialog-50"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-33"
                              >
                                <DialogContent
                                  id="dialog-50-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-32"
                                    id="dialog-50-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-50-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-50-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-50-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-50-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-50-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-50-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-50-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-50-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                    <DialogFooter>
                                      <withProps(DialogFooter)>
                                        <DialogFooter
                                          element="footer"
                                        >
                                          <DialogHeader
                                            className="emotion-30"
                                            element="footer"
                                          >
                                            <Styled(footer)
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <footer
                                                className="emotion-29"
                                              >
                                                <DialogActions>
                                                  <DialogActions>
                                                    <div
                                                      className="emotion-28"
                                                    >
                                                      <Button
                                                        element="button"
                                                        key="0"
                                                        minimal={true}
                                                        primary={false}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          text="Cancel"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-24"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-23"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-22"
                                                                  >
                                                                    Cancel
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                      <Button
                                                        element="button"
                                                        key="1"
                                                        minimal={false}
                                                        primary={true}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          text="Action"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-27"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-23"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-22"
                                                                  >
                                                                    Action
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                    </div>
                                                  </DialogActions>
                                                </DialogActions>
                                              </footer>
                                            </Styled(footer)>
                                          </DialogHeader>
                                        </DialogFooter>
                                      </withProps(DialogFooter)>
                                    </DialogFooter>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: basic 4`] = `
.emotion-26 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-52-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-52"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-52-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-52"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-52-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-52-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-52-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-52-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-52-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-52-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-52-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-52-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-52-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-52-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: basic 5`] = `
.emotion-26 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-58-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-58"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-58-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-58"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-58-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-58-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-58-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-58-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-58-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-58-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-58-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-58-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-58-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-58-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: close-button 1`] = `
.emotion-43 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-40 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-39 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-39 {
    max-height: 35em;
  }
}

.emotion-14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-13 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-13 *,
.emotion-13 *::before,
.emotion-13 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-9 {
  margin-left: 0.5em;
}

.emotion-8 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0.1875em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  margin-left: 0.5em;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-8:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-8:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-8::-moz-focus-inner {
  border: 0;
}

.emotion-8 [role="img"] {
  box-sizing: content-box;
  color: #333840;
  display: block;
}

.emotion-8 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-8 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-8 [role="img"]:only-child {
  margin: 0;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-6 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-45 {
  padding: 1em;
  position: relative;
}

.emotion-45:not(:last-child) {
  padding-bottom: 0;
}

.emotion-45 > div {
  position: static;
}

.emotion-45 [role="document"] {
  width: auto;
}

.emotion-42 {
  position: static;
}

.emotion-41 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-41 *,
.emotion-41 *::before,
.emotion-41 *::after {
  box-sizing: inherit;
}

.emotion-27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-27:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-27:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-27 > :first-child {
  margin-top: 0;
}

.emotion-27 > :last-child {
  margin-bottom: 0;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-26:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-26 > :first-child {
  margin-top: 0;
}

.emotion-26 > :last-child {
  margin-bottom: 0;
}

.emotion-21 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-17 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-37 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-36 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-36 *,
.emotion-36 *::before,
.emotion-36 *::after {
  box-sizing: inherit;
}

.emotion-35 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-35 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-31 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-31:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-31:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-31:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-31::-moz-focus-inner {
  border: 0;
}

.emotion-31 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-31 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-31 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-31 [role="img"]:only-child {
  margin: 0;
}

.emotion-29 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-34 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-34:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-34:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-34:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-34::-moz-focus-inner {
  border: 0;
}

.emotion-34 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-34 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-34 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-34 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-45"
  >
    <withProps(DemoDialog)
      actions={
        Array [
          Object {
            "text": "Cancel",
          },
          Object {
            "text": "Action",
          },
        ]
      }
      showCloseButton={true}
      title="Lorem ipsum dolor sit amet"
    >
      <DemoDialog
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        showCloseButton={true}
        size="medium"
        title="Lorem ipsum dolor sit amet"
        usePortal={false}
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          className="emotion-42"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          showCloseButton={true}
          size="medium"
          title="Lorem ipsum dolor sit amet"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-43"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          actions={
                            Array [
                              Object {
                                "text": "Cancel",
                              },
                              Object {
                                "text": "Action",
                              },
                            ]
                          }
                          aria-labelledby="dialog-14-title"
                          aria-modal={true}
                          className="emotion-42"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-14"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          showCloseButton={true}
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-14-title"
                            aria-modal={true}
                            className="emotion-41"
                            id="dialog-14"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-40"
                              >
                                <DialogContent
                                  id="dialog-14-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-39"
                                    id="dialog-14-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      closeButton={
                                        <withProps(CloseButton)
                                          aria-label="close"
                                        />
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-14"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-14"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-13"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-14-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-14-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-14-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-14-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-14-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-14-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-14-title"
                                                                  >
                                                                    Lorem ipsum dolor sit amet
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                                <withProps(CloseButton)
                                                  aria-label="close"
                                                >
                                                  <CloseButton
                                                    aria-label="close"
                                                    iconStart={<IconClose />}
                                                    minimal={true}
                                                    size="small"
                                                  >
                                                    <CloseButton
                                                      aria-label="close"
                                                      className="emotion-9"
                                                      iconStart={<IconClose />}
                                                      minimal={true}
                                                      size="small"
                                                    >
                                                      <Themed(Button)
                                                        aria-label="close"
                                                        className="emotion-9"
                                                        iconStart={<IconClose />}
                                                        minimal={true}
                                                        size="small"
                                                      >
                                                        <ThemeProvider>
                                                          <ThemeProvider>
                                                            <Button
                                                              aria-label="close"
                                                              className="emotion-9"
                                                              element="button"
                                                              iconStart={<IconClose />}
                                                              minimal={true}
                                                              size="small"
                                                              type="button"
                                                            >
                                                              <Button
                                                                aria-label="close"
                                                                className="emotion-9"
                                                                element="button"
                                                                minimal={true}
                                                                size="small"
                                                                type="button"
                                                              >
                                                                <button
                                                                  aria-label="close"
                                                                  className="emotion-8"
                                                                  type="button"
                                                                >
                                                                  <Styled(span)>
                                                                    <span
                                                                      className="emotion-7"
                                                                    >
                                                                      <IconClose
                                                                        key="iconStart"
                                                                        size="medium"
                                                                      >
                                                                        <Icon
                                                                          rtl={false}
                                                                          size="medium"
                                                                        >
                                                                          <Styled(svg)
                                                                            aria-hidden={true}
                                                                            focusable="false"
                                                                            role="img"
                                                                            rtl={false}
                                                                            size="medium"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="emotion-6"
                                                                              focusable="false"
                                                                              role="img"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <g>
                                                                                <path
                                                                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                />
                                                                              </g>
                                                                            </svg>
                                                                          </Styled(svg)>
                                                                        </Icon>
                                                                      </IconClose>
                                                                    </span>
                                                                  </Styled(span)>
                                                                </button>
                                                              </Button>
                                                            </Button>
                                                          </ThemeProvider>
                                                        </ThemeProvider>
                                                      </Themed(Button)>
                                                    </CloseButton>
                                                  </CloseButton>
                                                </withProps(CloseButton)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-27"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-26"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-21"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-21"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-21"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-21"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-21"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-17"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-17"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-17"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-17"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-16"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <p
                                                                              key=".0"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                            </p>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                    <DialogFooter>
                                      <withProps(DialogFooter)>
                                        <DialogFooter
                                          element="footer"
                                        >
                                          <DialogHeader
                                            className="emotion-37"
                                            element="footer"
                                          >
                                            <Styled(footer)
                                              className="emotion-37"
                                              element="footer"
                                            >
                                              <footer
                                                className="emotion-36"
                                              >
                                                <DialogActions>
                                                  <DialogActions>
                                                    <div
                                                      className="emotion-35"
                                                    >
                                                      <Button
                                                        element="button"
                                                        key="0"
                                                        minimal={true}
                                                        primary={false}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          text="Cancel"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-31"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-7"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-29"
                                                                  >
                                                                    Cancel
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                      <Button
                                                        element="button"
                                                        key="1"
                                                        minimal={false}
                                                        primary={true}
                                                        size="medium"
                                                        type="button"
                                                      >
                                                        <Button
                                                          element="button"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          text="Action"
                                                          type="button"
                                                        >
                                                          <button
                                                            className="emotion-34"
                                                            type="button"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-7"
                                                              >
                                                                <Styled(span)
                                                                  size="medium"
                                                                >
                                                                  <span
                                                                    className="emotion-29"
                                                                  >
                                                                    Action
                                                                  </span>
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </button>
                                                        </Button>
                                                      </Button>
                                                    </div>
                                                  </DialogActions>
                                                </DialogActions>
                                              </footer>
                                            </Styled(footer)>
                                          </DialogHeader>
                                        </DialogFooter>
                                      </withProps(DialogFooter)>
                                    </DialogFooter>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: close-button 2`] = `
.emotion-29 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-26 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-25 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-25 {
    max-height: 35em;
  }
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-6 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-31 {
  padding: 1em;
  position: relative;
}

.emotion-31:not(:last-child) {
  padding-bottom: 0;
}

.emotion-31 > div {
  position: static;
}

.emotion-31 [role="document"] {
  width: auto;
}

.emotion-28 {
  position: static;
}

.emotion-27 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-23:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-23:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-23 > :first-child {
  margin-top: 0;
}

.emotion-23 > :last-child {
  margin-bottom: 0;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-22:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-22 > :first-child {
  margin-top: 0;
}

.emotion-22 > :last-child {
  margin-bottom: 0;
}

.emotion-17 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-13 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-12 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-12:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-8 {
  box-sizing: border-box;
  color: #de1b1b;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0.1875em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-8:hover {
  background-color: #f5f7fa;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-8:active {
  background-color: #dde3ed;
  color: #de1b1b;
}

.emotion-8::-moz-focus-inner {
  border: 0;
}

.emotion-8 [role="img"] {
  box-sizing: content-box;
  color: #de1b1b;
  display: block;
}

.emotion-8 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-8 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-8 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-31"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-28"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-29"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-54-title"
                          aria-modal={true}
                          className="emotion-28"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-54"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-54-title"
                            aria-modal={true}
                            className="emotion-27"
                            id="dialog-54"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-26"
                              >
                                <DialogContent
                                  id="dialog-54-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-25"
                                    id="dialog-54-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      closeButton={
                                        <Button
                                          aria-label="Close"
                                          element="button"
                                          iconStart={<IconClear />}
                                          size="small"
                                          type="button"
                                          variant="danger"
                                        />
                                      }
                                      titleProps={
                                        Object {
                                          "id": "dialog-54-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-10"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-10"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-9"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-54-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-54-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-54-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-54-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-54-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-54-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-54-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                                <Button
                                                  aria-label="Close"
                                                  element="button"
                                                  iconStart={<IconClear />}
                                                  size="small"
                                                  type="button"
                                                  variant="danger"
                                                >
                                                  <Button
                                                    aria-label="Close"
                                                    element="button"
                                                    size="small"
                                                    type="button"
                                                    variant="danger"
                                                  >
                                                    <button
                                                      aria-label="Close"
                                                      className="emotion-8"
                                                      type="button"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          <IconClear
                                                            key="iconStart"
                                                            size="medium"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="medium"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="medium"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-6"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconClear>
                                                        </span>
                                                      </Styled(span)>
                                                    </button>
                                                  </Button>
                                                </Button>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-23"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-23"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-22"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-17"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-17"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-17"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-17"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-17"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-13"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-13"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-13"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-13"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-12"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: element-appearance 1`] = `
.emotion-26 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-1 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 34px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 800;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-60-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-60"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-60-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-60"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-60-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-60-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-60-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  appearance="h1"
                                                  element="h3"
                                                  id="dialog-60-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h1"
                                                    element="h3"
                                                    id="dialog-60-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h1"
                                                      element="h3"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h1"
                                                          element="h3"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h1"
                                                            element="h3"
                                                            id="dialog-60-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h1"
                                                              className="emotion-2"
                                                              element="h3"
                                                              id="dialog-60-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h1"
                                                                className="emotion-2"
                                                                element="h3"
                                                                id="dialog-60-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h3)
                                                                  appearance="h1"
                                                                  className="emotion-2"
                                                                  element="h3"
                                                                  id="dialog-60-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h3
                                                                    className="emotion-1"
                                                                    id="dialog-60-title"
                                                                  >
                                                                    This title is an h3 that looks like a level 1 heading
                                                                  </h3>
                                                                </Styled(h3)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: rtl 1`] = `
.emotion-36 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-32 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-32 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-38 {
  padding: 1em;
  position: relative;
}

.emotion-38:not(:last-child) {
  padding-bottom: 0;
}

.emotion-38 > div {
  position: static;
}

.emotion-38 [role="document"] {
  width: auto;
}

.emotion-35 {
  position: static;
}

.emotion-34 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-30 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-22 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-left: 0.5em;
}

.emotion-28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-28 > *:not(:last-child) {
  margin-left: 0.5em;
}

.emotion-24 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-24:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-24::-moz-focus-inner {
  border: 0;
}

.emotion-24 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-24 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-24 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-24 [role="img"]:only-child {
  margin: 0;
}

.emotion-27 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-27 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <Styled(div)>
        <div
          className="emotion-38"
        >
          <withProps(DemoDialog)
            actions={
              Array [
                Object {
                  "text": "إلغاء",
                },
                Object {
                  "text": "قبول الشروط",
                },
              ]
            }
            title="الأحكام والشروط"
          >
            <DemoDialog
              actions={
                Array [
                  Object {
                    "text": "إلغاء",
                  },
                  Object {
                    "text": "قبول الشروط",
                  },
                ]
              }
              closeButtonLabel="close"
              closeOnClickOutside={false}
              closeOnEscape={false}
              disableFocusOnOpen={true}
              disableFocusTrap={true}
              isOpen={true}
              preventCloseButtonClose={true}
              size="medium"
              title="الأحكام والشروط"
              usePortal={false}
            >
              <DemoDialog
                actions={
                  Array [
                    Object {
                      "text": "إلغاء",
                    },
                    Object {
                      "text": "قبول الشروط",
                    },
                  ]
                }
                className="emotion-35"
                closeButtonLabel="close"
                closeOnClickOutside={false}
                closeOnEscape={false}
                disableFocusOnOpen={true}
                disableFocusTrap={true}
                isOpen={true}
                preventCloseButtonClose={true}
                size="medium"
                title="الأحكام والشروط"
                usePortal={false}
              >
                <WithTheme(Component)
                  in={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                >
                  <Component
                    in={true}
                    onEntered={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                  >
                    <mockConstructor
                      appear={true}
                      in={true}
                      mountOnEnter={true}
                      onEntered={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={250}
                      unmountOnExit={true}
                    >
                      <Animate
                        state="entered"
                      >
                        <div
                          className="emotion-36"
                        >
                          <FocusTrap
                            _createFocusTrap={[Function]}
                            active={false}
                            focusTrapOptions={Object {}}
                            paused={false}
                            tag="div"
                          >
                            <div>
                              <Dialog
                                actions={
                                  Array [
                                    Object {
                                      "text": "إلغاء",
                                    },
                                    Object {
                                      "text": "قبول الشروط",
                                    },
                                  ]
                                }
                                aria-labelledby="dialog-36-title"
                                aria-modal={true}
                                className="emotion-35"
                                closeButtonLabel="close"
                                disableFocusOnOpen={true}
                                id="dialog-36"
                                innerRef={[Function]}
                                preventCloseButtonClose={true}
                                role="dialog"
                                tabIndex="-1"
                              >
                                <div
                                  aria-labelledby="dialog-36-title"
                                  aria-modal={true}
                                  className="emotion-34"
                                  id="dialog-36"
                                  role="dialog"
                                  tabIndex="-1"
                                >
                                  <Overlay>
                                    <div
                                      className="emotion-0"
                                    />
                                  </Overlay>
                                  <Styled(div)>
                                    <div
                                      className="emotion-33"
                                    >
                                      <DialogContent
                                        id="dialog-36-content"
                                        innerRef={[Function]}
                                        role="document"
                                        size="medium"
                                      >
                                        <div
                                          className="emotion-32"
                                          id="dialog-36-content"
                                          role="document"
                                        >
                                          <DialogHeader>
                                            <withProps(DialogHeader)>
                                              <DialogHeader
                                                element="header"
                                              >
                                                <DialogHeader
                                                  className="emotion-7"
                                                  element="header"
                                                >
                                                  <Styled(header)
                                                    className="emotion-7"
                                                    element="header"
                                                  >
                                                    <header
                                                      className="emotion-6"
                                                    >
                                                      <WithTheme(DialogTitle)
                                                        id="dialog-36-title"
                                                      >
                                                        <DialogTitle
                                                          appearance="h4"
                                                          element="h1"
                                                          id="dialog-36-title"
                                                        >
                                                          <DialogTitle
                                                            appearance="h4"
                                                            element="h1"
                                                          >
                                                            <div
                                                              className="emotion-5"
                                                            >
                                                              <TitleContent
                                                                appearance="h4"
                                                                element="h1"
                                                                noMargins={true}
                                                              >
                                                                <Styled(Text)
                                                                  appearance="h4"
                                                                  element="h1"
                                                                  id="dialog-36-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Text
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-36-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <TextProvider
                                                                      appearance="h4"
                                                                      className="emotion-2"
                                                                      element="h1"
                                                                      id="dialog-36-title"
                                                                      noMargins={true}
                                                                    >
                                                                      <Styled(h1)
                                                                        appearance="h4"
                                                                        className="emotion-2"
                                                                        element="h1"
                                                                        id="dialog-36-title"
                                                                        noMargins={true}
                                                                      >
                                                                        <h1
                                                                          className="emotion-1"
                                                                          id="dialog-36-title"
                                                                        >
                                                                          الأحكام والشروط
                                                                        </h1>
                                                                      </Styled(h1)>
                                                                    </TextProvider>
                                                                  </Text>
                                                                </Styled(Text)>
                                                              </TitleContent>
                                                            </div>
                                                          </DialogTitle>
                                                        </DialogTitle>
                                                      </WithTheme(DialogTitle)>
                                                    </header>
                                                  </Styled(header)>
                                                </DialogHeader>
                                              </DialogHeader>
                                            </withProps(DialogHeader)>
                                          </DialogHeader>
                                          <DialogBody>
                                            <DialogBody
                                              element="div"
                                            >
                                              <DialogHeader
                                                className="emotion-20"
                                                element="div"
                                              >
                                                <Styled(div)
                                                  className="emotion-20"
                                                  element="div"
                                                >
                                                  <div
                                                    className="emotion-19"
                                                  >
                                                    <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                      <WithTheme(Themed(OverflowContainerWithShadows))
                                                        className="emotion-14"
                                                      >
                                                        <Themed(OverflowContainerWithShadows)
                                                          className="emotion-14"
                                                        >
                                                          <ThemeProvider>
                                                            <ThemeProvider>
                                                              <OverflowContainerWithShadows
                                                                className="emotion-14"
                                                              >
                                                                <withProps(OverflowContainerWithShadows)
                                                                  className="emotion-14"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  innerRef={[Function]}
                                                                  onScroll={[Function]}
                                                                >
                                                                  <OverflowContainerWithShadows
                                                                    className="emotion-14"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    innerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <OverflowContainerWithShadows
                                                                      className="emotion-10"
                                                                      hasShadowBottom={false}
                                                                      hasShadowTop={false}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <Themed(OverflowContainer)
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <ThemeProvider>
                                                                          <ThemeProvider>
                                                                            <OverflowContainer
                                                                              className="emotion-10"
                                                                              hasShadowBottom={false}
                                                                              hasShadowTop={false}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <OverflowContainer
                                                                                className="emotion-10"
                                                                                hasShadowBottom={false}
                                                                                hasShadowTop={false}
                                                                                innerRef={[Function]}
                                                                                onScroll={[Function]}
                                                                                scrollY={true}
                                                                              >
                                                                                <div
                                                                                  className="emotion-9"
                                                                                  onScroll={[Function]}
                                                                                >
                                                                                  <p
                                                                                    key=".0"
                                                                                  >
                                                                                    ان يبق إستعمل بأضرار الإحتفاظ, هذا إذ ا وبالرغم. أوسع الشهيرة ٣٠ تلك, بحث ثم أوسع أجزاء, مع فصل ودول وسوء الحيلولة. عن مكن المارق واتّجه الإقتصادي, رئيس يعادل الأسيوي كان من, المحيط بتحدّي إذ جُل. تم يتم فرنسا العالم. فقد قد تمهيد الأرواح. ليركز تغييرات أخذ ما, عن جعل بمباركة الولايات.
                                                                                  </p>
                                                                                  <EventListener
                                                                                    listeners={
                                                                                      Array [
                                                                                        Object {
                                                                                          "event": "resize",
                                                                                          "handler": [Function],
                                                                                          "target": "window",
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                  />
                                                                                </div>
                                                                              </OverflowContainer>
                                                                            </OverflowContainer>
                                                                          </ThemeProvider>
                                                                        </ThemeProvider>
                                                                      </Themed(OverflowContainer)>
                                                                    </OverflowContainerWithShadows>
                                                                  </OverflowContainerWithShadows>
                                                                </withProps(OverflowContainerWithShadows)>
                                                              </OverflowContainerWithShadows>
                                                            </ThemeProvider>
                                                          </ThemeProvider>
                                                        </Themed(OverflowContainerWithShadows)>
                                                      </WithTheme(Themed(OverflowContainerWithShadows))>
                                                    </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  </div>
                                                </Styled(div)>
                                              </DialogHeader>
                                            </DialogBody>
                                          </DialogBody>
                                          <DialogFooter>
                                            <withProps(DialogFooter)>
                                              <DialogFooter
                                                element="footer"
                                              >
                                                <DialogHeader
                                                  className="emotion-30"
                                                  element="footer"
                                                >
                                                  <Styled(footer)
                                                    className="emotion-30"
                                                    element="footer"
                                                  >
                                                    <footer
                                                      className="emotion-29"
                                                    >
                                                      <DialogActions>
                                                        <DialogActions>
                                                          <div
                                                            className="emotion-28"
                                                          >
                                                            <Button
                                                              element="button"
                                                              key="0"
                                                              minimal={true}
                                                              primary={false}
                                                              size="medium"
                                                              type="button"
                                                            >
                                                              <Button
                                                                element="button"
                                                                minimal={true}
                                                                primary={false}
                                                                size="medium"
                                                                text="إلغاء"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="emotion-24"
                                                                  type="button"
                                                                >
                                                                  <Styled(span)>
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      <Styled(span)
                                                                        size="medium"
                                                                      >
                                                                        <span
                                                                          className="emotion-22"
                                                                        >
                                                                          إلغاء
                                                                        </span>
                                                                      </Styled(span)>
                                                                    </span>
                                                                  </Styled(span)>
                                                                </button>
                                                              </Button>
                                                            </Button>
                                                            <Button
                                                              element="button"
                                                              key="1"
                                                              minimal={false}
                                                              primary={true}
                                                              size="medium"
                                                              type="button"
                                                            >
                                                              <Button
                                                                element="button"
                                                                minimal={false}
                                                                primary={true}
                                                                size="medium"
                                                                text="قبول الشروط"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="emotion-27"
                                                                  type="button"
                                                                >
                                                                  <Styled(span)>
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      <Styled(span)
                                                                        size="medium"
                                                                      >
                                                                        <span
                                                                          className="emotion-22"
                                                                        >
                                                                          قبول الشروط
                                                                        </span>
                                                                      </Styled(span)>
                                                                    </span>
                                                                  </Styled(span)>
                                                                </button>
                                                              </Button>
                                                            </Button>
                                                          </div>
                                                        </DialogActions>
                                                      </DialogActions>
                                                    </footer>
                                                  </Styled(footer)>
                                                </DialogHeader>
                                              </DialogFooter>
                                            </withProps(DialogFooter)>
                                          </DialogFooter>
                                        </div>
                                      </DialogContent>
                                    </div>
                                  </Styled(div)>
                                </div>
                              </Dialog>
                            </div>
                          </FocusTrap>
                        </div>
                      </Animate>
                    </mockConstructor>
                  </Component>
                </WithTheme(Component)>
              </DemoDialog>
            </DemoDialog>
          </withProps(DemoDialog)>
        </div>
      </Styled(div)>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`Dialog demo examples Snapshots: scrolling 1`] = `
.emotion-26 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <DemoDialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <mockConstructor
                appear={true}
                in={true}
                mountOnEnter={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entered"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-48-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-48"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-48-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-48"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-48-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-48-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-48-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogHeader
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-48-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-48-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-48-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-48-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-48-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-48-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-48-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogHeader>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogHeader
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                <WithTheme(Themed(OverflowContainerWithShadows))
                                                  className="emotion-14"
                                                >
                                                  <Themed(OverflowContainerWithShadows)
                                                    className="emotion-14"
                                                  >
                                                    <ThemeProvider>
                                                      <ThemeProvider>
                                                        <OverflowContainerWithShadows
                                                          className="emotion-14"
                                                        >
                                                          <withProps(OverflowContainerWithShadows)
                                                            className="emotion-14"
                                                            hasShadowBottom={false}
                                                            hasShadowTop={false}
                                                            innerRef={[Function]}
                                                            onScroll={[Function]}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                              scrollY={true}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-10"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <Themed(OverflowContainer)
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <ThemeProvider>
                                                                    <ThemeProvider>
                                                                      <OverflowContainer
                                                                        className="emotion-10"
                                                                        hasShadowBottom={false}
                                                                        hasShadowTop={false}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          innerRef={[Function]}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <div
                                                                            className="emotion-9"
                                                                            onScroll={[Function]}
                                                                          >
                                                                            <p
                                                                              key="0"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                            </p>
                                                                            <p
                                                                              key="1"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                            </p>
                                                                            <p
                                                                              key="2"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                            </p>
                                                                            <p
                                                                              key="3"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                            </p>
                                                                            <p
                                                                              key="4"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                            </p>
                                                                            <p
                                                                              key="5"
                                                                            >
                                                                              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                            </p>
                                                                            <EventListener
                                                                              listeners={
                                                                                Array [
                                                                                  Object {
                                                                                    "event": "resize",
                                                                                    "handler": [Function],
                                                                                    "target": "window",
                                                                                  },
                                                                                ]
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </OverflowContainer>
                                                                      </OverflowContainer>
                                                                    </ThemeProvider>
                                                                  </ThemeProvider>
                                                                </Themed(OverflowContainer)>
                                                              </OverflowContainerWithShadows>
                                                            </OverflowContainerWithShadows>
                                                          </withProps(OverflowContainerWithShadows)>
                                                        </OverflowContainerWithShadows>
                                                      </ThemeProvider>
                                                    </ThemeProvider>
                                                  </Themed(OverflowContainerWithShadows)>
                                                </WithTheme(Themed(OverflowContainerWithShadows))>
                                              </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                            </div>
                                          </Styled(div)>
                                        </DialogHeader>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </mockConstructor>
            </Component>
          </WithTheme(Component)>
        </DemoDialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`Dialog demo examples Snapshots: sizes 1`] = `
.emotion-36 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-71 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-71 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-38 {
  padding: 1em;
  position: relative;
}

.emotion-38:not(:last-child) {
  padding-bottom: 0;
}

.emotion-38 > div {
  position: static;
}

.emotion-38 [role="document"] {
  width: auto;
}

.emotion-35 {
  position: static;
}

.emotion-34 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-30 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-28 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-24 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-24:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-24::-moz-focus-inner {
  border: 0;
}

.emotion-24 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-24 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-24 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-24 [role="img"]:only-child {
  margin: 0;
}

.emotion-22 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-27 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

.emotion-100 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-100:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-100:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-32 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 25em;
  width: 35vw;
}

@media (min-height:43em) {
  .emotion-32 {
    max-height: 35em;
  }
}

.emotion-110 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 75em;
  width: 80vw;
}

@media (min-height:53em) {
  .emotion-110 {
    max-height: 45em;
  }
}

.emotion-102 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-102 *,
.emotion-102 *::before,
.emotion-102 *::after {
  box-sizing: inherit;
}

.emotion-102:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-102:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-102:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-102::-moz-focus-inner {
  border: 0;
}

.emotion-102 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-102 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-102 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-102 [role="img"]:only-child {
  margin: 0;
}

.emotion-105 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-105 *,
.emotion-105 *::before,
.emotion-105 *::after {
  box-sizing: inherit;
}

.emotion-105:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-105:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-105:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-105::-moz-focus-inner {
  border: 0;
}

.emotion-105 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-105 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-105 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-105 [role="img"]:only-child {
  margin: 0;
}

<Component>
  <Styled(div)
    key="small"
  >
    <div
      className="emotion-38"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        size="small"
        title="Lorem ipsum dolor sit amet"
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="small"
          title="Lorem ipsum dolor sit amet"
          usePortal={false}
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-35"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="small"
            title="Lorem ipsum dolor sit amet"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-36"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-18-title"
                            aria-modal={true}
                            className="emotion-35"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-18"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-18-title"
                              aria-modal={true}
                              className="emotion-34"
                              id="dialog-18"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-33"
                                >
                                  <DialogContent
                                    id="dialog-18-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="small"
                                  >
                                    <div
                                      className="emotion-32"
                                      id="dialog-18-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-18-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-18-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-18-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-18-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-18-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-18-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-18-title"
                                                                    >
                                                                      Lorem ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-20"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-19"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-14"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-14"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-14"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-14"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-10"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-10"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-9"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-30"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-29"
                                                >
                                                  <DialogActions>
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-28"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="medium"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-24"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-22"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="medium"
                                                            text="Action"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-27"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-22"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="medium"
  >
    <div
      className="emotion-38"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        size="medium"
        title="Lorem ipsum dolor sit amet"
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title="Lorem ipsum dolor sit amet"
          usePortal={false}
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-35"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            title="Lorem ipsum dolor sit amet"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-36"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-19-title"
                            aria-modal={true}
                            className="emotion-35"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-19"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-19-title"
                              aria-modal={true}
                              className="emotion-34"
                              id="dialog-19"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-33"
                                >
                                  <DialogContent
                                    id="dialog-19-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-71"
                                      id="dialog-19-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-19-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-19-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-19-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-19-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-19-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-19-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-19-title"
                                                                    >
                                                                      Lorem ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-20"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-19"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-14"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-14"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-14"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-14"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-10"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-10"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-9"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-30"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-29"
                                                >
                                                  <DialogActions>
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-28"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="medium"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-24"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-22"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="medium"
                                                            text="Action"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-27"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-22"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="large"
  >
    <div
      className="emotion-38"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        size="large"
        title="Lorem ipsum dolor sit amet"
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="large"
          title="Lorem ipsum dolor sit amet"
          usePortal={false}
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-35"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="large"
            title="Lorem ipsum dolor sit amet"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-36"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-20-title"
                            aria-modal={true}
                            className="emotion-35"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-20"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-20-title"
                              aria-modal={true}
                              className="emotion-34"
                              id="dialog-20"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-33"
                                >
                                  <DialogContent
                                    id="dialog-20-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="large"
                                  >
                                    <div
                                      className="emotion-110"
                                      id="dialog-20-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-20-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-20-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-20-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-20-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-20-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-20-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-20-title"
                                                                    >
                                                                      Lorem ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-20"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-19"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-14"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-14"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-14"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-14"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-10"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-10"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-9"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-30"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-29"
                                                >
                                                  <DialogActions>
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-28"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="large"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="large"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-102"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="large"
                                                                  >
                                                                    <span
                                                                      className="emotion-100"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="large"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="large"
                                                            text="Action"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-105"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="large"
                                                                  >
                                                                    <span
                                                                      className="emotion-100"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
</Component>
`;

exports[`Dialog demo examples Snapshots: title 1`] = `
.emotion-36 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-32 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-32 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-38 {
  padding: 1em;
  position: relative;
}

.emotion-38:not(:last-child) {
  padding-bottom: 0;
}

.emotion-38 > div {
  position: static;
}

.emotion-38 [role="document"] {
  width: auto;
}

.emotion-35 {
  position: static;
}

.emotion-34 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-34 *,
.emotion-34 *::before,
.emotion-34 *::after {
  box-sizing: inherit;
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 > :first-child {
  margin-top: 0;
}

.emotion-19 > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-30 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-28 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-24 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-24:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-24:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-24::-moz-focus-inner {
  border: 0;
}

.emotion-24 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-24 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-24 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-24 [role="img"]:only-child {
  margin: 0;
}

.emotion-22 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-27 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-27:active {
  background-color: #1d5bbf;
  color: #ffffff;
}

.emotion-27::-moz-focus-inner {
  border: 0;
}

.emotion-27 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-27 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-27 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-27 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 22px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

<div>
  <Styled(div)>
    <div
      className="emotion-38"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        title={
          <WithTheme(DialogTitle)
            appearance="h3"
            element="h2"
          >
            Lorem 
            <em>
              ipsum
            </em>
             dolor sit amet
          </WithTheme(DialogTitle)>
        }
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title={
            <WithTheme(DialogTitle)
              appearance="h3"
              element="h2"
            >
              Lorem 
              <em>
                ipsum
              </em>
               dolor sit amet
            </WithTheme(DialogTitle)>
          }
          usePortal={false}
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-35"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            title={
              <WithTheme(DialogTitle)
                appearance="h3"
                element="h2"
              >
                Lorem 
                <em>
                  ipsum
                </em>
                 dolor sit amet
              </WithTheme(DialogTitle)>
            }
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-36"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-8-title"
                            aria-modal={true}
                            className="emotion-35"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-8"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-8-title"
                              aria-modal={true}
                              className="emotion-34"
                              id="dialog-8"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-33"
                                >
                                  <DialogContent
                                    id="dialog-8-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-32"
                                      id="dialog-8-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    appearance="h3"
                                                    element="h2"
                                                    id="dialog-8-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h3"
                                                      element="h2"
                                                      id="dialog-8-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h3"
                                                        element="h2"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h3"
                                                            element="h2"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h3"
                                                              element="h2"
                                                              id="dialog-8-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h3"
                                                                className="emotion-2"
                                                                element="h2"
                                                                id="dialog-8-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h3"
                                                                  className="emotion-2"
                                                                  element="h2"
                                                                  id="dialog-8-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h2)
                                                                    appearance="h3"
                                                                    className="emotion-2"
                                                                    element="h2"
                                                                    id="dialog-8-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h2
                                                                      className="emotion-1"
                                                                      id="dialog-8-title"
                                                                    >
                                                                      Lorem 
                                                                      <em>
                                                                        ipsum
                                                                      </em>
                                                                       dolor sit amet
                                                                    </h2>
                                                                  </Styled(h2)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-20"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-19"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-14"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-14"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-14"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-14"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-14"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-10"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-10"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-10"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-10"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-9"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-30"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-30"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-29"
                                                >
                                                  <DialogActions>
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-28"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="medium"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-24"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-22"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="medium"
                                                            text="Action"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-27"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-23"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-22"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
</div>
`;

exports[`Dialog demo examples Snapshots: trigger 1`] = `
.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Demo>
    <div>
      <Button
        element="button"
        onClick={[Function]}
        size="large"
        type="button"
      >
        <Button
          element="button"
          onClick={[Function]}
          size="large"
          text={
            Array [
              "Open",
              " Dialog",
            ]
          }
          type="button"
        >
          <button
            className="emotion-2"
            onClick={[Function]}
            type="button"
          >
            <Styled(span)>
              <span
                className="emotion-1"
              >
                <Styled(span)
                  size="large"
                >
                  <span
                    className="emotion-0"
                  >
                    Open
                     Dialog
                  </span>
                </Styled(span)>
              </span>
            </Styled(span)>
          </button>
        </Button>
      </Button>
      <DemoDialog
        actions={
          Array [
            Object {
              "onClick": [Function],
              "text": "Cancel",
            },
            Object {
              "onClick": [Function],
              "text": "Action",
            },
          ]
        }
        appSelector="#app"
        closeButtonLabel="close"
        closeOnClickOutside={true}
        closeOnEscape={true}
        isOpen={false}
        onClose={[Function]}
        size="medium"
        title="Lorem ipsum dolor sit amet"
        usePortal={true}
      >
        <Portal />
      </DemoDialog>
    </div>
  </Demo>
</Component>
`;

exports[`Dialog demo examples Snapshots: variants 1`] = `
.emotion-37 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-34 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-33 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-33 {
    max-height: 35em;
  }
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-2 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-24 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-39 {
  padding: 1em;
  position: relative;
}

.emotion-39:not(:last-child) {
  padding-bottom: 0;
}

.emotion-39 > div {
  position: static;
}

.emotion-39 [role="document"] {
  width: auto;
}

.emotion-36 {
  position: static;
}

.emotion-35 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-35 *,
.emotion-35 *::before,
.emotion-35 *::after {
  box-sizing: inherit;
}

.emotion-21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-21:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-21:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-21 > :first-child {
  margin-top: 0;
}

.emotion-21 > :last-child {
  margin-bottom: 0;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-15 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-11 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-31 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-30 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-30 *,
.emotion-30 *::before,
.emotion-30 *::after {
  box-sizing: inherit;
}

.emotion-29 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-29 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-25 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-25 *,
.emotion-25 *::before,
.emotion-25 *::after {
  box-sizing: inherit;
}

.emotion-25:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-25:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-25:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-25::-moz-focus-inner {
  border: 0;
}

.emotion-25 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-25 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-25 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-25 [role="img"]:only-child {
  margin: 0;
}

.emotion-23 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-6 {
  color: #2a854e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 > [role="img"] {
  color: #2a854e;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-28 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #2a854e;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-28 *,
.emotion-28 *::before,
.emotion-28 *::after {
  box-sizing: inherit;
}

.emotion-28:focus {
  background-color: #2a854e;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:hover {
  background-color: #3ba164;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:active {
  background-color: #20693d;
  color: #ffffff;
}

.emotion-28::-moz-focus-inner {
  border: 0;
}

.emotion-28 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-28 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-28 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-28 [role="img"]:only-child {
  margin: 0;
}

.emotion-46 {
  color: #ad5f00;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-46 > [role="img"] {
  color: #ad5f00;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-68 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ad5f00;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-68 *,
.emotion-68 *::before,
.emotion-68 *::after {
  box-sizing: inherit;
}

.emotion-68:focus {
  background-color: #ad5f00;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-68:hover {
  background-color: #cf7911;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-68:active {
  background-color: #8a4d03;
  color: #ffffff;
}

.emotion-68::-moz-focus-inner {
  border: 0;
}

.emotion-68 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-68 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-68 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-68 [role="img"]:only-child {
  margin: 0;
}

.emotion-86 {
  color: #de1b1b;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-86 > [role="img"] {
  color: #de1b1b;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-108 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #de1b1b;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-108 *,
.emotion-108 *::before,
.emotion-108 *::after {
  box-sizing: inherit;
}

.emotion-108:focus {
  background-color: #de1b1b;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-108:hover {
  background-color: #f55353;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-108:active {
  background-color: #b80d0d;
  color: #ffffff;
}

.emotion-108::-moz-focus-inner {
  border: 0;
}

.emotion-108 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-108 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-108 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-108 [role="img"]:only-child {
  margin: 0;
}

<Component>
  <Styled(div)
    key="success"
  >
    <div
      className="emotion-39"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        title="Success ipsum dolor sit amet"
        variant="success"
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title="Success ipsum dolor sit amet"
          usePortal={false}
          variant="success"
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-36"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            title="Success ipsum dolor sit amet"
            usePortal={false}
            variant="success"
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-37"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-24-title"
                            aria-modal={true}
                            className="emotion-36"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-24"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                            variant="success"
                          >
                            <div
                              aria-labelledby="dialog-24-title"
                              aria-modal={true}
                              className="emotion-35"
                              id="dialog-24"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-34"
                                >
                                  <DialogContent
                                    id="dialog-24-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-33"
                                      id="dialog-24-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-8"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-8"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-7"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-24-title"
                                                    variant="success"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-24-title"
                                                      variant="success"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                        variant="success"
                                                      >
                                                        <div
                                                          className="emotion-6"
                                                        >
                                                          <IconSuccess
                                                            size="1.5em"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="1.5em"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="1.5em"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-1"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconSuccess>
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-24-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-3"
                                                                element="h1"
                                                                id="dialog-24-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-3"
                                                                  element="h1"
                                                                  id="dialog-24-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-3"
                                                                    element="h1"
                                                                    id="dialog-24-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-2"
                                                                      id="dialog-24-title"
                                                                    >
                                                                      Success ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-21"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-20"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-15"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-11"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-11"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-11"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-10"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-31"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-31"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-30"
                                                >
                                                  <DialogActions
                                                    variant="success"
                                                  >
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-29"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="medium"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-25"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-24"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          type="button"
                                                          variant="success"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="medium"
                                                            text="Action"
                                                            type="button"
                                                            variant="success"
                                                          >
                                                            <button
                                                              className="emotion-28"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-24"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="warning"
  >
    <div
      className="emotion-39"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        title="Warning ipsum dolor sit amet"
        variant="warning"
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title="Warning ipsum dolor sit amet"
          usePortal={false}
          variant="warning"
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-36"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            title="Warning ipsum dolor sit amet"
            usePortal={false}
            variant="warning"
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-37"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-26-title"
                            aria-modal={true}
                            className="emotion-36"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-26"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                            variant="warning"
                          >
                            <div
                              aria-labelledby="dialog-26-title"
                              aria-modal={true}
                              className="emotion-35"
                              id="dialog-26"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-34"
                                >
                                  <DialogContent
                                    id="dialog-26-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-33"
                                      id="dialog-26-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-8"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-8"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-7"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-26-title"
                                                    variant="warning"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-26-title"
                                                      variant="warning"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                        variant="warning"
                                                      >
                                                        <div
                                                          className="emotion-46"
                                                        >
                                                          <IconWarning
                                                            size="1.5em"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="1.5em"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="1.5em"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-1"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconWarning>
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-26-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-3"
                                                                element="h1"
                                                                id="dialog-26-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-3"
                                                                  element="h1"
                                                                  id="dialog-26-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-3"
                                                                    element="h1"
                                                                    id="dialog-26-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-2"
                                                                      id="dialog-26-title"
                                                                    >
                                                                      Warning ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-21"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-20"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-15"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-11"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-11"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-11"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-10"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-31"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-31"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-30"
                                                >
                                                  <DialogActions
                                                    variant="warning"
                                                  >
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-29"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="medium"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-25"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-24"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          type="button"
                                                          variant="warning"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="medium"
                                                            text="Action"
                                                            type="button"
                                                            variant="warning"
                                                          >
                                                            <button
                                                              className="emotion-68"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-24"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="danger"
  >
    <div
      className="emotion-39"
    >
      <withProps(DemoDialog)
        actions={
          Array [
            Object {
              "text": "Cancel",
            },
            Object {
              "text": "Action",
            },
          ]
        }
        title="Danger ipsum dolor sit amet"
        variant="danger"
      >
        <DemoDialog
          actions={
            Array [
              Object {
                "text": "Cancel",
              },
              Object {
                "text": "Action",
              },
            ]
          }
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          title="Danger ipsum dolor sit amet"
          usePortal={false}
          variant="danger"
        >
          <DemoDialog
            actions={
              Array [
                Object {
                  "text": "Cancel",
                },
                Object {
                  "text": "Action",
                },
              ]
            }
            className="emotion-36"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            title="Danger ipsum dolor sit amet"
            usePortal={false}
            variant="danger"
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-37"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            actions={
                              Array [
                                Object {
                                  "text": "Cancel",
                                },
                                Object {
                                  "text": "Action",
                                },
                              ]
                            }
                            aria-labelledby="dialog-28-title"
                            aria-modal={true}
                            className="emotion-36"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-28"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                            variant="danger"
                          >
                            <div
                              aria-labelledby="dialog-28-title"
                              aria-modal={true}
                              className="emotion-35"
                              id="dialog-28"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-34"
                                >
                                  <DialogContent
                                    id="dialog-28-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-33"
                                      id="dialog-28-content"
                                      role="document"
                                    >
                                      <DialogHeader>
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-8"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-8"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-7"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-28-title"
                                                    variant="danger"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-28-title"
                                                      variant="danger"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          className="emotion-86"
                                                        >
                                                          <IconDanger
                                                            size="1.5em"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="1.5em"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="1.5em"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-1"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconDanger>
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-28-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-3"
                                                                element="h1"
                                                                id="dialog-28-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-3"
                                                                  element="h1"
                                                                  id="dialog-28-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-3"
                                                                    element="h1"
                                                                    id="dialog-28-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-2"
                                                                      id="dialog-28-title"
                                                                    >
                                                                      Danger ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-21"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-20"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-15"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-11"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-11"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-11"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-10"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <p
                                                                                key=".0"
                                                                              >
                                                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                                                              </p>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                      <DialogFooter>
                                        <withProps(DialogFooter)>
                                          <DialogFooter
                                            element="footer"
                                          >
                                            <DialogHeader
                                              className="emotion-31"
                                              element="footer"
                                            >
                                              <Styled(footer)
                                                className="emotion-31"
                                                element="footer"
                                              >
                                                <footer
                                                  className="emotion-30"
                                                >
                                                  <DialogActions
                                                    variant="danger"
                                                  >
                                                    <DialogActions>
                                                      <div
                                                        className="emotion-29"
                                                      >
                                                        <Button
                                                          element="button"
                                                          key="0"
                                                          minimal={true}
                                                          primary={false}
                                                          size="medium"
                                                          type="button"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={true}
                                                            primary={false}
                                                            size="medium"
                                                            text="Cancel"
                                                            type="button"
                                                          >
                                                            <button
                                                              className="emotion-25"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-24"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                        <Button
                                                          element="button"
                                                          key="1"
                                                          minimal={false}
                                                          primary={true}
                                                          size="medium"
                                                          type="button"
                                                          variant="danger"
                                                        >
                                                          <Button
                                                            element="button"
                                                            minimal={false}
                                                            primary={true}
                                                            size="medium"
                                                            text="Action"
                                                            type="button"
                                                            variant="danger"
                                                          >
                                                            <button
                                                              className="emotion-108"
                                                              type="button"
                                                            >
                                                              <Styled(span)>
                                                                <span
                                                                  className="emotion-24"
                                                                >
                                                                  <Styled(span)
                                                                    size="medium"
                                                                  >
                                                                    <span
                                                                      className="emotion-23"
                                                                    >
                                                                      Action
                                                                    </span>
                                                                  </Styled(span)>
                                                                </span>
                                                              </Styled(span)>
                                                            </button>
                                                          </Button>
                                                        </Button>
                                                      </div>
                                                    </DialogActions>
                                                  </DialogActions>
                                                </footer>
                                              </Styled(footer)>
                                            </DialogHeader>
                                          </DialogFooter>
                                        </withProps(DialogFooter)>
                                      </DialogFooter>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
</Component>
`;

exports[`Dialog demo examples Snapshots: variants 2`] = `
.emotion-33 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-29 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-29 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-35 {
  padding: 1em;
  position: relative;
}

.emotion-35:not(:last-child) {
  padding-bottom: 0;
}

.emotion-35 > div {
  position: static;
}

.emotion-35 [role="document"] {
  width: auto;
}

.emotion-32 {
  position: static;
}

.emotion-31 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-27:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-27:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-27 > :first-child {
  margin-top: 0;
}

.emotion-27 > :last-child {
  margin-bottom: 0;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-26:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-26 > :first-child {
  margin-top: 0;
}

.emotion-26 > :last-child {
  margin-bottom: 0;
}

.emotion-21 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-17 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-15 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-11 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-11::-moz-focus-inner {
  border: 0;
}

.emotion-11 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-11 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-11 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-11 [role="img"]:only-child {
  margin: 0;
}

.emotion-9 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-14 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #2a854e;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  background-color: #2a854e;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #3ba164;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:active {
  background-color: #20693d;
  color: #ffffff;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

.emotion-50 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ad5f00;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-50 *,
.emotion-50 *::before,
.emotion-50 *::after {
  box-sizing: inherit;
}

.emotion-50:focus {
  background-color: #ad5f00;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-50:hover {
  background-color: #cf7911;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-50:active {
  background-color: #8a4d03;
  color: #ffffff;
}

.emotion-50::-moz-focus-inner {
  border: 0;
}

.emotion-50 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-50 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-50 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-50 [role="img"]:only-child {
  margin: 0;
}

.emotion-86 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #de1b1b;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-86 *,
.emotion-86 *::before,
.emotion-86 *::after {
  box-sizing: inherit;
}

.emotion-86:focus {
  background-color: #de1b1b;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-86:hover {
  background-color: #f55353;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-86:active {
  background-color: #b80d0d;
  color: #ffffff;
}

.emotion-86::-moz-focus-inner {
  border: 0;
}

.emotion-86 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-86 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-86 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-86 [role="img"]:only-child {
  margin: 0;
}

<Component>
  <Styled(div)
    key="success"
  >
    <div
      className="emotion-35"
    >
      <withProps(DemoDialog)>
        <DemoDialog
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <DemoDialog
            className="emotion-32"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-33"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            aria-labelledby="dialog-40-title"
                            aria-modal={true}
                            className="emotion-32"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-40"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-40-title"
                              aria-modal={true}
                              className="emotion-31"
                              id="dialog-40"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-30"
                                >
                                  <DialogContent
                                    id="dialog-40-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-29"
                                      id="dialog-40-content"
                                      role="document"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-40-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-40-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-40-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-40-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-40-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-40-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-40-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-40-title"
                                                                    >
                                                                      Title
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-27"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-26"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-21"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-21"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-21"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-21"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-21"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-17"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-17"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-17"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-17"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-16"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <DialogActions
                                                                                key=".1"
                                                                                variant="success"
                                                                              >
                                                                                <DialogActions>
                                                                                  <div
                                                                                    className="emotion-15"
                                                                                  >
                                                                                    <Button
                                                                                      element="button"
                                                                                      key="0"
                                                                                      minimal={true}
                                                                                      primary={false}
                                                                                      size="medium"
                                                                                      type="button"
                                                                                    >
                                                                                      <Button
                                                                                        element="button"
                                                                                        minimal={true}
                                                                                        primary={false}
                                                                                        size="medium"
                                                                                        text="Cancel"
                                                                                        type="button"
                                                                                      >
                                                                                        <button
                                                                                          className="emotion-11"
                                                                                          type="button"
                                                                                        >
                                                                                          <Styled(span)>
                                                                                            <span
                                                                                              className="emotion-10"
                                                                                            >
                                                                                              <Styled(span)
                                                                                                size="medium"
                                                                                              >
                                                                                                <span
                                                                                                  className="emotion-9"
                                                                                                >
                                                                                                  Cancel
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </span>
                                                                                          </Styled(span)>
                                                                                        </button>
                                                                                      </Button>
                                                                                    </Button>
                                                                                    <Button
                                                                                      element="button"
                                                                                      key="1"
                                                                                      minimal={false}
                                                                                      primary={true}
                                                                                      size="medium"
                                                                                      type="button"
                                                                                      variant="success"
                                                                                    >
                                                                                      <Button
                                                                                        element="button"
                                                                                        minimal={false}
                                                                                        primary={true}
                                                                                        size="medium"
                                                                                        text="Success"
                                                                                        type="button"
                                                                                        variant="success"
                                                                                      >
                                                                                        <button
                                                                                          className="emotion-14"
                                                                                          type="button"
                                                                                        >
                                                                                          <Styled(span)>
                                                                                            <span
                                                                                              className="emotion-10"
                                                                                            >
                                                                                              <Styled(span)
                                                                                                size="medium"
                                                                                              >
                                                                                                <span
                                                                                                  className="emotion-9"
                                                                                                >
                                                                                                  Success
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </span>
                                                                                          </Styled(span)>
                                                                                        </button>
                                                                                      </Button>
                                                                                    </Button>
                                                                                  </div>
                                                                                </DialogActions>
                                                                              </DialogActions>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="warning"
  >
    <div
      className="emotion-35"
    >
      <withProps(DemoDialog)>
        <DemoDialog
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <DemoDialog
            className="emotion-32"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-33"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            aria-labelledby="dialog-41-title"
                            aria-modal={true}
                            className="emotion-32"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-41"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-41-title"
                              aria-modal={true}
                              className="emotion-31"
                              id="dialog-41"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-30"
                                >
                                  <DialogContent
                                    id="dialog-41-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-29"
                                      id="dialog-41-content"
                                      role="document"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-41-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-41-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-41-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-41-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-41-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-41-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-41-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-41-title"
                                                                    >
                                                                      Title
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-27"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-26"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-21"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-21"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-21"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-21"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-21"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-17"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-17"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-17"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-17"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-16"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <DialogActions
                                                                                key=".1"
                                                                                variant="warning"
                                                                              >
                                                                                <DialogActions>
                                                                                  <div
                                                                                    className="emotion-15"
                                                                                  >
                                                                                    <Button
                                                                                      element="button"
                                                                                      key="0"
                                                                                      minimal={true}
                                                                                      primary={false}
                                                                                      size="medium"
                                                                                      type="button"
                                                                                    >
                                                                                      <Button
                                                                                        element="button"
                                                                                        minimal={true}
                                                                                        primary={false}
                                                                                        size="medium"
                                                                                        text="Cancel"
                                                                                        type="button"
                                                                                      >
                                                                                        <button
                                                                                          className="emotion-11"
                                                                                          type="button"
                                                                                        >
                                                                                          <Styled(span)>
                                                                                            <span
                                                                                              className="emotion-10"
                                                                                            >
                                                                                              <Styled(span)
                                                                                                size="medium"
                                                                                              >
                                                                                                <span
                                                                                                  className="emotion-9"
                                                                                                >
                                                                                                  Cancel
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </span>
                                                                                          </Styled(span)>
                                                                                        </button>
                                                                                      </Button>
                                                                                    </Button>
                                                                                    <Button
                                                                                      element="button"
                                                                                      key="1"
                                                                                      minimal={false}
                                                                                      primary={true}
                                                                                      size="medium"
                                                                                      type="button"
                                                                                      variant="warning"
                                                                                    >
                                                                                      <Button
                                                                                        element="button"
                                                                                        minimal={false}
                                                                                        primary={true}
                                                                                        size="medium"
                                                                                        text="Warning"
                                                                                        type="button"
                                                                                        variant="warning"
                                                                                      >
                                                                                        <button
                                                                                          className="emotion-50"
                                                                                          type="button"
                                                                                        >
                                                                                          <Styled(span)>
                                                                                            <span
                                                                                              className="emotion-10"
                                                                                            >
                                                                                              <Styled(span)
                                                                                                size="medium"
                                                                                              >
                                                                                                <span
                                                                                                  className="emotion-9"
                                                                                                >
                                                                                                  Warning
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </span>
                                                                                          </Styled(span)>
                                                                                        </button>
                                                                                      </Button>
                                                                                    </Button>
                                                                                  </div>
                                                                                </DialogActions>
                                                                              </DialogActions>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="danger"
  >
    <div
      className="emotion-35"
    >
      <withProps(DemoDialog)>
        <DemoDialog
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <DemoDialog
            className="emotion-32"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-33"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            aria-labelledby="dialog-42-title"
                            aria-modal={true}
                            className="emotion-32"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-42"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-42-title"
                              aria-modal={true}
                              className="emotion-31"
                              id="dialog-42"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-30"
                                >
                                  <DialogContent
                                    id="dialog-42-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-29"
                                      id="dialog-42-content"
                                      role="document"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-42-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-42-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-42-title"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-42-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-42-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-42-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-42-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-42-title"
                                                                    >
                                                                      Title
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-27"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-26"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-21"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-21"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-21"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-21"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-21"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-17"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-17"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-17"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-17"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-16"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <DialogActions
                                                                                key=".1"
                                                                                variant="danger"
                                                                              >
                                                                                <DialogActions>
                                                                                  <div
                                                                                    className="emotion-15"
                                                                                  >
                                                                                    <Button
                                                                                      element="button"
                                                                                      key="0"
                                                                                      minimal={true}
                                                                                      primary={false}
                                                                                      size="medium"
                                                                                      type="button"
                                                                                    >
                                                                                      <Button
                                                                                        element="button"
                                                                                        minimal={true}
                                                                                        primary={false}
                                                                                        size="medium"
                                                                                        text="Cancel"
                                                                                        type="button"
                                                                                      >
                                                                                        <button
                                                                                          className="emotion-11"
                                                                                          type="button"
                                                                                        >
                                                                                          <Styled(span)>
                                                                                            <span
                                                                                              className="emotion-10"
                                                                                            >
                                                                                              <Styled(span)
                                                                                                size="medium"
                                                                                              >
                                                                                                <span
                                                                                                  className="emotion-9"
                                                                                                >
                                                                                                  Cancel
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </span>
                                                                                          </Styled(span)>
                                                                                        </button>
                                                                                      </Button>
                                                                                    </Button>
                                                                                    <Button
                                                                                      element="button"
                                                                                      key="1"
                                                                                      minimal={false}
                                                                                      primary={true}
                                                                                      size="medium"
                                                                                      type="button"
                                                                                      variant="danger"
                                                                                    >
                                                                                      <Button
                                                                                        element="button"
                                                                                        minimal={false}
                                                                                        primary={true}
                                                                                        size="medium"
                                                                                        text="Danger"
                                                                                        type="button"
                                                                                        variant="danger"
                                                                                      >
                                                                                        <button
                                                                                          className="emotion-86"
                                                                                          type="button"
                                                                                        >
                                                                                          <Styled(span)>
                                                                                            <span
                                                                                              className="emotion-10"
                                                                                            >
                                                                                              <Styled(span)
                                                                                                size="medium"
                                                                                              >
                                                                                                <span
                                                                                                  className="emotion-9"
                                                                                                >
                                                                                                  Danger
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </span>
                                                                                          </Styled(span)>
                                                                                        </button>
                                                                                      </Button>
                                                                                    </Button>
                                                                                  </div>
                                                                                </DialogActions>
                                                                              </DialogActions>
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
</Component>
`;

exports[`Dialog demo examples Snapshots: variants 3`] = `
.emotion-27 {
  opacity: 1;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-23 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-23 {
    max-height: 35em;
  }
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-2 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-29 {
  padding: 1em;
  position: relative;
}

.emotion-29:not(:last-child) {
  padding-bottom: 0;
}

.emotion-29 > div {
  position: static;
}

.emotion-29 [role="document"] {
  width: auto;
}

.emotion-26 {
  position: static;
}

.emotion-25 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-25 *,
.emotion-25 *::before,
.emotion-25 *::after {
  box-sizing: inherit;
}

.emotion-21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-21:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-21:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-21 > :first-child {
  margin-top: 0;
}

.emotion-21 > :last-child {
  margin-bottom: 0;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 > :first-child {
  margin-top: 0;
}

.emotion-20 > :last-child {
  margin-bottom: 0;
}

.emotion-15 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-11 {
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-10:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-6 {
  color: #2a854e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 > [role="img"] {
  color: #2a854e;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-36 {
  color: #ad5f00;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-36 > [role="img"] {
  color: #ad5f00;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-66 {
  color: #de1b1b;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-66 > [role="img"] {
  color: #de1b1b;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

<Component>
  <Styled(div)
    key="success"
  >
    <div
      className="emotion-29"
    >
      <withProps(DemoDialog)>
        <DemoDialog
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <DemoDialog
            className="emotion-26"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-27"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            aria-labelledby="dialog-62-title"
                            aria-modal={true}
                            className="emotion-26"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-62"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-62-title"
                              aria-modal={true}
                              className="emotion-25"
                              id="dialog-62"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-24"
                                >
                                  <DialogContent
                                    id="dialog-62-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-23"
                                      id="dialog-62-content"
                                      role="document"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-62-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-8"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-8"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-7"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-62-title"
                                                    variant="success"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-62-title"
                                                      variant="success"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                        variant="success"
                                                      >
                                                        <div
                                                          className="emotion-6"
                                                        >
                                                          <IconSuccess
                                                            size="1.5em"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="1.5em"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="1.5em"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-1"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconSuccess>
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-62-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-3"
                                                                element="h1"
                                                                id="dialog-62-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-3"
                                                                  element="h1"
                                                                  id="dialog-62-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-3"
                                                                    element="h1"
                                                                    id="dialog-62-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-2"
                                                                      id="dialog-62-title"
                                                                    >
                                                                      Success ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-21"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-20"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-15"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-11"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-11"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-11"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-10"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="warning"
  >
    <div
      className="emotion-29"
    >
      <withProps(DemoDialog)>
        <DemoDialog
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <DemoDialog
            className="emotion-26"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-27"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            aria-labelledby="dialog-64-title"
                            aria-modal={true}
                            className="emotion-26"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-64"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-64-title"
                              aria-modal={true}
                              className="emotion-25"
                              id="dialog-64"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-24"
                                >
                                  <DialogContent
                                    id="dialog-64-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-23"
                                      id="dialog-64-content"
                                      role="document"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-64-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-8"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-8"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-7"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-64-title"
                                                    variant="warning"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-64-title"
                                                      variant="warning"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                        variant="warning"
                                                      >
                                                        <div
                                                          className="emotion-36"
                                                        >
                                                          <IconWarning
                                                            size="1.5em"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="1.5em"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="1.5em"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-1"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconWarning>
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-64-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-3"
                                                                element="h1"
                                                                id="dialog-64-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-3"
                                                                  element="h1"
                                                                  id="dialog-64-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-3"
                                                                    element="h1"
                                                                    id="dialog-64-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-2"
                                                                      id="dialog-64-title"
                                                                    >
                                                                      Warning ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-21"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-20"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-15"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-11"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-11"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-11"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-10"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
  <Styled(div)
    key="danger"
  >
    <div
      className="emotion-29"
    >
      <withProps(DemoDialog)>
        <DemoDialog
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <DemoDialog
            className="emotion-26"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <mockConstructor
                  appear={true}
                  in={true}
                  mountOnEnter={true}
                  onEntered={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Animate
                    state="entered"
                  >
                    <div
                      className="emotion-27"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Dialog
                            aria-labelledby="dialog-66-title"
                            aria-modal={true}
                            className="emotion-26"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-66"
                            innerRef={[Function]}
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-66-title"
                              aria-modal={true}
                              className="emotion-25"
                              id="dialog-66"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Overlay>
                                <div
                                  className="emotion-0"
                                />
                              </Overlay>
                              <Styled(div)>
                                <div
                                  className="emotion-24"
                                >
                                  <DialogContent
                                    id="dialog-66-content"
                                    innerRef={[Function]}
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-23"
                                      id="dialog-66-content"
                                      role="document"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-66-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(DialogHeader)>
                                          <DialogHeader
                                            element="header"
                                          >
                                            <DialogHeader
                                              className="emotion-8"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-8"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-7"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-66-title"
                                                    variant="danger"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-66-title"
                                                      variant="danger"
                                                    >
                                                      <DialogTitle
                                                        appearance="h4"
                                                        element="h1"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          className="emotion-66"
                                                        >
                                                          <IconDanger
                                                            size="1.5em"
                                                          >
                                                            <Icon
                                                              rtl={false}
                                                              size="1.5em"
                                                            >
                                                              <Styled(svg)
                                                                aria-hidden={true}
                                                                focusable="false"
                                                                role="img"
                                                                rtl={false}
                                                                size="1.5em"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="emotion-1"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <g>
                                                                    <path
                                                                      d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                                                    />
                                                                  </g>
                                                                </svg>
                                                              </Styled(svg)>
                                                            </Icon>
                                                          </IconDanger>
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-66-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-3"
                                                                element="h1"
                                                                id="dialog-66-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-3"
                                                                  element="h1"
                                                                  id="dialog-66-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-3"
                                                                    element="h1"
                                                                    id="dialog-66-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-2"
                                                                      id="dialog-66-title"
                                                                    >
                                                                      Danger ipsum dolor sit amet
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </DialogTitle>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogHeader>
                                          </DialogHeader>
                                        </withProps(DialogHeader)>
                                      </DialogHeader>
                                      <DialogBody>
                                        <DialogBody
                                          element="div"
                                        >
                                          <DialogHeader
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-21"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-20"
                                              >
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                          >
                                                            <withProps(OverflowContainerWithShadows)
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                              innerRef={[Function]}
                                                              onScroll={[Function]}
                                                            >
                                                              <OverflowContainerWithShadows
                                                                className="emotion-15"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                                innerRef={[Function]}
                                                                onScroll={[Function]}
                                                                scrollY={true}
                                                              >
                                                                <OverflowContainerWithShadows
                                                                  className="emotion-11"
                                                                  hasShadowBottom={false}
                                                                  hasShadowTop={false}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <Themed(OverflowContainer)
                                                                    className="emotion-11"
                                                                    hasShadowBottom={false}
                                                                    hasShadowTop={false}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <ThemeProvider>
                                                                      <ThemeProvider>
                                                                        <OverflowContainer
                                                                          className="emotion-11"
                                                                          hasShadowBottom={false}
                                                                          hasShadowTop={false}
                                                                          onScroll={[Function]}
                                                                          scrollY={true}
                                                                        >
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            hasShadowBottom={false}
                                                                            hasShadowTop={false}
                                                                            innerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <div
                                                                              className="emotion-10"
                                                                              onScroll={[Function]}
                                                                            >
                                                                              <EventListener
                                                                                listeners={
                                                                                  Array [
                                                                                    Object {
                                                                                      "event": "resize",
                                                                                      "handler": [Function],
                                                                                      "target": "window",
                                                                                    },
                                                                                  ]
                                                                                }
                                                                              />
                                                                            </div>
                                                                          </OverflowContainer>
                                                                        </OverflowContainer>
                                                                      </ThemeProvider>
                                                                    </ThemeProvider>
                                                                  </Themed(OverflowContainer)>
                                                                </OverflowContainerWithShadows>
                                                              </OverflowContainerWithShadows>
                                                            </withProps(OverflowContainerWithShadows)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </div>
                                            </Styled(div)>
                                          </DialogHeader>
                                        </DialogBody>
                                      </DialogBody>
                                    </div>
                                  </DialogContent>
                                </div>
                              </Styled(div)>
                            </div>
                          </Dialog>
                        </div>
                      </FocusTrap>
                    </div>
                  </Animate>
                </mockConstructor>
              </Component>
            </WithTheme(Component)>
          </DemoDialog>
        </DemoDialog>
      </withProps(DemoDialog)>
    </div>
  </Styled(div)>
</Component>
`;
