// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DialogBody demo examples Snapshots: basic 1`] = `
.emotion-21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-21:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-21:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
}

.emotion-16 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-16 > div > :first-child {
  margin-top: 0;
}

.emotion-16 > div > :last-child {
  margin-bottom: 0;
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
}

.emotion-15 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-15 > div > :first-child {
  margin-top: 0;
}

.emotion-15 > div > :last-child {
  margin-bottom: 0;
}

.emotion-11 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-10 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-10:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-29 {
  padding: 1em;
  position: relative;
}

.emotion-29:not(:last-child) {
  padding-bottom: 0;
}

.emotion-29 > div {
  position: static;
}

.emotion-29 [role="document"] {
  width: auto;
}

.emotion-26 {
  position: static;
}

.emotion-27 {
  opacity: 0;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-25 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-25 *,
.emotion-25 *::before,
.emotion-25 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-23 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-23 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 14px;
  line-height: 1.5;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin-bottom: 1em;
  margin-top: 0;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

<Styled(div)>
  <div
    className="emotion-29"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <Dialog
          className="emotion-26"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Transition
                appear={true}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entering"
                >
                  <div
                    className="emotion-27"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-2-title"
                          aria-modal={true}
                          className="emotion-26"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-2"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-2-title"
                            aria-modal={true}
                            className="emotion-25"
                            id="dialog-2"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-24"
                              >
                                <DialogContent
                                  id="dialog-2-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-23"
                                    id="dialog-2-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-2-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogRow
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-2-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-2-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-2-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-2-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-2-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-2-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-2-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogRow>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogRow
                                          className="emotion-21"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-21"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-20"
                                            >
                                              <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                  scrollY={true}
                                                >
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-16"
                                                    scrollY={true}
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-16"
                                                      scrollY={true}
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-16"
                                                            scrollY={true}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-16"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                            >
                                                              <div
                                                                className="emotion-15"
                                                              >
                                                                <Scroller
                                                                  containerRef={[Function]}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <WithTheme(Themed(OverflowContainer))
                                                                    className="emotion-11"
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <Themed(OverflowContainer)
                                                                      className="emotion-11"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <ThemeProvider>
                                                                        <ThemeProvider>
                                                                          <OverflowContainer
                                                                            className="emotion-11"
                                                                            containerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <OverflowContainer
                                                                              className="emotion-11"
                                                                              containerRef={[Function]}
                                                                              innerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <div
                                                                                className="emotion-10"
                                                                                onScroll={[Function]}
                                                                              >
                                                                                <Text
                                                                                  appearance="p"
                                                                                  element="p"
                                                                                >
                                                                                  <TextProvider
                                                                                    appearance="p"
                                                                                    element="p"
                                                                                  >
                                                                                    <Styled(p)
                                                                                      appearance="p"
                                                                                      element="p"
                                                                                    >
                                                                                      <p
                                                                                        className="emotion-9"
                                                                                      >
                                                                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin.
                                                                                      </p>
                                                                                    </Styled(p)>
                                                                                  </TextProvider>
                                                                                </Text>
                                                                                <EventListener
                                                                                  listeners={
                                                                                    Array [
                                                                                      Object {
                                                                                        "event": "resize",
                                                                                        "handler": [Function],
                                                                                        "target": "window",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                />
                                                                              </div>
                                                                            </OverflowContainer>
                                                                          </OverflowContainer>
                                                                        </ThemeProvider>
                                                                      </ThemeProvider>
                                                                    </Themed(OverflowContainer)>
                                                                  </WithTheme(Themed(OverflowContainer))>
                                                                </Scroller>
                                                              </div>
                                                            </OverflowContainerWithShadows>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                            </div>
                                          </Styled(div)>
                                        </DialogRow>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </Transition>
            </Component>
          </WithTheme(Component)>
        </Dialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;

exports[`DialogBody demo examples Snapshots: scrolling 1`] = `
.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-20:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-20:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-19:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
}

.emotion-15 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-15 > div > :first-child {
  margin-top: 0;
}

.emotion-15 > div > :last-child {
  margin-bottom: 0;
}

.emotion-14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
}

.emotion-14 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-14 > div > :first-child {
  margin-top: 0;
}

.emotion-14 > div > :last-child {
  margin-bottom: 0;
}

.emotion-10 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-9 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-9:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-28 {
  padding: 1em;
  position: relative;
}

.emotion-28:not(:last-child) {
  padding-bottom: 0;
}

.emotion-28 > div {
  position: static;
}

.emotion-28 [role="document"] {
  width: auto;
}

.emotion-25 {
  position: static;
}

.emotion-26 {
  opacity: 0;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-24 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-24 *,
.emotion-24 *::before,
.emotion-24 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-22 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-22 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

<Styled(div)>
  <div
    className="emotion-28"
  >
    <withProps(DemoDialog)>
      <DemoDialog
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <Dialog
          className="emotion-25"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Transition
                appear={true}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Animate
                  state="entering"
                >
                  <div
                    className="emotion-26"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Dialog
                          aria-labelledby="dialog-4-title"
                          aria-modal={true}
                          className="emotion-25"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-4"
                          innerRef={[Function]}
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-4-title"
                            aria-modal={true}
                            className="emotion-24"
                            id="dialog-4"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Overlay>
                              <div
                                className="emotion-0"
                              />
                            </Overlay>
                            <Styled(div)>
                              <div
                                className="emotion-23"
                              >
                                <DialogContent
                                  id="dialog-4-content"
                                  innerRef={[Function]}
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-22"
                                    id="dialog-4-content"
                                    role="document"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-4-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(DialogHeader)>
                                        <DialogHeader
                                          element="header"
                                        >
                                          <DialogRow
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-4-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-4-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-4-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-4-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-4-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-4-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-4-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </DialogTitle>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogRow>
                                        </DialogHeader>
                                      </withProps(DialogHeader)>
                                    </DialogHeader>
                                    <DialogBody>
                                      <DialogBody
                                        element="div"
                                      >
                                        <DialogRow
                                          className="emotion-20"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-20"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-19"
                                            >
                                              <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                  scrollY={true}
                                                >
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-15"
                                                    scrollY={true}
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-15"
                                                      scrollY={true}
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-15"
                                                            scrollY={true}
                                                          >
                                                            <OverflowContainerWithShadows
                                                              className="emotion-15"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                            >
                                                              <div
                                                                className="emotion-14"
                                                              >
                                                                <Scroller
                                                                  containerRef={[Function]}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <WithTheme(Themed(OverflowContainer))
                                                                    className="emotion-10"
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <Themed(OverflowContainer)
                                                                      className="emotion-10"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <ThemeProvider>
                                                                        <ThemeProvider>
                                                                          <OverflowContainer
                                                                            className="emotion-10"
                                                                            containerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <OverflowContainer
                                                                              className="emotion-10"
                                                                              containerRef={[Function]}
                                                                              innerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <div
                                                                                className="emotion-9"
                                                                                onScroll={[Function]}
                                                                              >
                                                                                <p
                                                                                  key="0"
                                                                                >
                                                                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                                </p>
                                                                                <p
                                                                                  key="1"
                                                                                >
                                                                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                                </p>
                                                                                <p
                                                                                  key="2"
                                                                                >
                                                                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                                </p>
                                                                                <p
                                                                                  key="3"
                                                                                >
                                                                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                                </p>
                                                                                <p
                                                                                  key="4"
                                                                                >
                                                                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                                </p>
                                                                                <p
                                                                                  key="5"
                                                                                >
                                                                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra nam libero justo laoreet sit amet. Vitae sapien pellentesque habitant morbi tristique. Posuere lorem ipsum dolor sit. Vel risus commodo viverra maecenas accumsan. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Lectus mauris ultrices eros in cursus turpis. Natoque penatibus et magnis dis. Eget aliquet nibh praesent tristique magna sit amet. Pellentesque elit eget gravida cum sociis natoque penatibus. Luctus accumsan tortor posuere ac ut consequat semper viverra. Sed vulputate odio ut enim. Vivamus at augue eget arcu.
                                                                                </p>
                                                                                <EventListener
                                                                                  listeners={
                                                                                    Array [
                                                                                      Object {
                                                                                        "event": "resize",
                                                                                        "handler": [Function],
                                                                                        "target": "window",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                />
                                                                              </div>
                                                                            </OverflowContainer>
                                                                          </OverflowContainer>
                                                                        </ThemeProvider>
                                                                      </ThemeProvider>
                                                                    </Themed(OverflowContainer)>
                                                                  </WithTheme(Themed(OverflowContainer))>
                                                                </Scroller>
                                                              </div>
                                                            </OverflowContainerWithShadows>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                            </div>
                                          </Styled(div)>
                                        </DialogRow>
                                      </DialogBody>
                                    </DialogBody>
                                  </div>
                                </DialogContent>
                              </div>
                            </Styled(div)>
                          </div>
                        </Dialog>
                      </div>
                    </FocusTrap>
                  </div>
                </Animate>
              </Transition>
            </Component>
          </WithTheme(Component)>
        </Dialog>
      </DemoDialog>
    </withProps(DemoDialog)>
  </div>
</Styled(div)>
`;
