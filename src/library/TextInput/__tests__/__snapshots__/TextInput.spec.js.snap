// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput demo examples controlled 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Component": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <MyForm>
                <TextInput
                  onChange={[Function]}
                  value="Hello World"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "onChange": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                        "value": "Hello World",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="large"
                    suffix={undefined}
                    variant={undefined}
                  >
                    <FauxControl
                      className="glamor-3"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "onChange": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                          "value": "Hello World",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-2"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "onChange": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                                "value": "Hello World",
                              }
                            }
                            controlRef={undefined}
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            onChange={[Function]}
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="large"
                            suffix={undefined}
                            type="text"
                            value="Hello World"
                            variant={undefined}
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-0"
                              disabled={undefined}
                              onChange={[Function]}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              type="text"
                              value="Hello World"
                            />
                          </glamorous(glamorous(input))>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-1"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
              </MyForm>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples disabled 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #afbacc;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <TextInput
              defaultValue="Hello World"
              disabled={true}
            >
              <TextInput
                className={undefined}
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Hello World",
                    "disabled": true,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                disabled={true}
                iconEnd={undefined}
                iconStart={undefined}
                prefix={undefined}
                readOnly={undefined}
                size="large"
                suffix={undefined}
                variant={undefined}
              >
                <FauxControl
                  className="glamor-3"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Hello World",
                      "disabled": true,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  disabled={true}
                  iconEnd={undefined}
                  iconStart={undefined}
                  prefix={undefined}
                  readOnly={undefined}
                  size="large"
                  suffix={undefined}
                  variant={undefined}
                >
                  <FauxControl
                    className="glamor-3"
                    control={[Function]}
                    disabled={true}
                    innerRef={undefined}
                    variant={undefined}
                  >
                    <div
                      className="glamor-2"
                    >
                      <glamorous(glamorous(input))
                        aria-invalid={undefined}
                        aria-required={undefined}
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Hello World",
                            "disabled": true,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        controlRef={undefined}
                        defaultValue="Hello World"
                        disabled={true}
                        iconEnd={undefined}
                        iconStart={undefined}
                        innerRef={undefined}
                        key="control"
                        prefix={undefined}
                        readOnly={undefined}
                        required={undefined}
                        size="large"
                        suffix={undefined}
                        type="text"
                        variant={undefined}
                      >
                        <input
                          aria-invalid={undefined}
                          aria-required={undefined}
                          className="glamor-0"
                          defaultValue="Hello World"
                          disabled={true}
                          prefix={undefined}
                          readOnly={undefined}
                          required={undefined}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay
                        disabled={true}
                        readOnly={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-1"
                          readOnly={undefined}
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples form-field 1`] = `
.glamor-6,
[data-glamor-6] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-6 [role="img"],
[data-glamor-6] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-6 [role="img"]:last-of-type,
[data-glamor-6] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-5,
[data-glamor-5] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-5 *,
[data-glamor-5] *,
.glamor-5 *::before,
[data-glamor-5] *::before,
.glamor-5 *::after,
[data-glamor-5] *::after {
  box-sizing: inherit;
}

.glamor-5:hover > div:last-child,
[data-glamor-5]:hover > div:last-child,
.glamor-5[data-simulate-hover] > div:last-child,
[data-glamor-5][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-5:focus > div:last-child,
[data-glamor-5]:focus > div:last-child,
.glamor-5[data-simulate-focus] > div:last-child,
[data-glamor-5][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-5:active > div:last-child,
[data-glamor-5]:active > div:last-child,
.glamor-5[data-simulate-active] > div:last-child,
[data-glamor-5][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-5 [role="img"],
[data-glamor-5] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-5 [role="img"]:last-of-type,
[data-glamor-5] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-4,
[data-glamor-4] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-10 > *:not(:last-child),
[data-glamor-10] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-2,
[data-glamor-2] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-3,
[data-glamor-3] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-3::placeholder,
[data-glamor-3]::placeholder,
.glamor-3[data-simulate-placeholder],
[data-glamor-3][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-3::-ms-input-placeholder,
[data-glamor-3]::-ms-input-placeholder,
.glamor-3[data-simulate-msinputplaceholder],
[data-glamor-3][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-3:-ms-input-placeholder,
[data-glamor-3]:-ms-input-placeholder,
.glamor-3[data-simulate-msinputplaceholder],
[data-glamor-3][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-3::-ms-clear,
[data-glamor-3]::-ms-clear,
.glamor-3[data-simulate-msclear],
[data-glamor-3][data-simulate-msclear] {
  display: none;
}

.glamor-3:focus ~ div:last-child,
[data-glamor-3]:focus ~ div:last-child,
.glamor-3[data-simulate-focus] ~ div:last-child,
[data-glamor-3][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-1,
[data-glamor-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.glamor-1 > *,
[data-glamor-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.glamor-0,
[data-glamor-0] {
  color: #db2929;
  font-size: 0.6875em;
}

.glamor-8,
[data-glamor-8] {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "FormField": [Function],
            "IconAccountBox": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-10"
              >
                <FormField
                  caption="Surname, family name"
                  iconStart={<IconAccountBox />}
                  input={[Function]}
                  label="Last Name"
                  required={true}
                  requiredText="Required"
                >
                  <FormField
                    className={undefined}
                  >
                    <div
                      className="glamor-9"
                    >
                      <label>
                        <glamorous(div)
                          hideLabel={undefined}
                          key="formField-11-textWrapper"
                        >
                          <div
                            className="glamor-1"
                          >
                            <span
                              id="formField-11-labelText"
                            >
                              Last Name
                            </span>
                            <glamorous(span)
                              secondaryText={undefined}
                            >
                              <span
                                className="glamor-0"
                              >
                                Required
                              </span>
                            </glamorous(span)>
                          </div>
                        </glamorous(div)>
                        <TextInput
                          aria-describedby="formField-11-caption"
                          iconStart={<IconAccountBox />}
                          key="formField-11-control"
                          required={true}
                          rootProps={undefined}
                          variant={undefined}
                        >
                          <TextInput
                            className={undefined}
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": "formField-11-caption",
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": true,
                                "type": "text",
                              }
                            }
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={<IconAccountBox />}
                            prefix={undefined}
                            readOnly={undefined}
                            size="large"
                            suffix={undefined}
                            variant={undefined}
                          >
                            <FauxControl
                              className="glamor-6"
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-describedby": "formField-11-caption",
                                  "aria-invalid": undefined,
                                  "aria-required": true,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": true,
                                  "type": "text",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={<IconAccountBox />}
                              prefix={undefined}
                              readOnly={undefined}
                              size="large"
                              suffix={undefined}
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-6"
                                control={[Function]}
                                disabled={undefined}
                                innerRef={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-5"
                                >
                                  <IconAccountBox
                                    key="iconStart"
                                    size="1.5em"
                                  >
                                    <Icon
                                      rtl={false}
                                      size="1.5em"
                                    >
                                      <glamorous(svg)
                                        aria-hidden={true}
                                        aria-labelledby={undefined}
                                        role="img"
                                        rtl={false}
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          className="glamor-2"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M3 5v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5a2 2 0 0 0-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"
                                            />
                                          </g>
                                        </svg>
                                      </glamorous(svg)>
                                    </Icon>
                                  </IconAccountBox>
                                  <glamorous(glamorous(input))
                                    aria-describedby="formField-11-caption"
                                    aria-invalid={undefined}
                                    aria-required={true}
                                    controlPropsIn={
                                      Object {
                                        "aria-describedby": "formField-11-caption",
                                        "aria-invalid": undefined,
                                        "aria-required": true,
                                        "controlRef": undefined,
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": true,
                                        "type": "text",
                                      }
                                    }
                                    controlRef={undefined}
                                    disabled={undefined}
                                    iconEnd={undefined}
                                    iconStart={<IconAccountBox />}
                                    innerRef={undefined}
                                    key="control"
                                    prefix={undefined}
                                    readOnly={undefined}
                                    required={true}
                                    size="large"
                                    suffix={undefined}
                                    type="text"
                                    variant={undefined}
                                  >
                                    <input
                                      aria-describedby="formField-11-caption"
                                      aria-invalid={undefined}
                                      aria-required={true}
                                      className="glamor-3"
                                      disabled={undefined}
                                      prefix={undefined}
                                      readOnly={undefined}
                                      required={true}
                                      size="large"
                                      type="text"
                                    />
                                  </glamorous(glamorous(input))>
                                  <Underlay
                                    disabled={undefined}
                                    readOnly={undefined}
                                    variant={undefined}
                                  >
                                    <div
                                      className="glamor-4"
                                      readOnly={undefined}
                                    />
                                  </Underlay>
                                </div>
                              </FauxControl>
                            </FauxControl>
                          </TextInput>
                        </TextInput>
                      </label>
                      <glamorous(div)
                        caption="Surname, family name"
                        id="formField-11-caption"
                        isGroup={false}
                        variant={undefined}
                      >
                        <div
                          className="glamor-8"
                          id="formField-11-caption"
                        >
                          Surname, family name
                        </div>
                      </glamorous(div)>
                    </div>
                  </FormField>
                </FormField>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples icons 1`] = `
.glamor-4,
[data-glamor-4] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:last-of-type,
[data-glamor-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-3,
[data-glamor-3] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 *,
[data-glamor-3] *,
.glamor-3 *::before,
[data-glamor-3] *::before,
.glamor-3 *::after,
[data-glamor-3] *::after {
  box-sizing: inherit;
}

.glamor-3:hover > div:last-child,
[data-glamor-3]:hover > div:last-child,
.glamor-3[data-simulate-hover] > div:last-child,
[data-glamor-3][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-3:focus > div:last-child,
[data-glamor-3]:focus > div:last-child,
.glamor-3[data-simulate-focus] > div:last-child,
[data-glamor-3][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3:active > div:last-child,
[data-glamor-3]:active > div:last-child,
.glamor-3[data-simulate-active] > div:last-child,
[data-glamor-3][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-19 > *:not(:last-child),
[data-glamor-19] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-0,
[data-glamor-0] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-1,
[data-glamor-1] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-6,
[data-glamor-6] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-6::placeholder,
[data-glamor-6]::placeholder,
.glamor-6[data-simulate-placeholder],
[data-glamor-6][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-input-placeholder,
[data-glamor-6]::-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6:-ms-input-placeholder,
[data-glamor-6]:-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-clear,
[data-glamor-6]::-ms-clear,
.glamor-6[data-simulate-msclear],
[data-glamor-6][data-simulate-msclear] {
  display: none;
}

.glamor-6:focus ~ div:last-child,
[data-glamor-6]:focus ~ div:last-child,
.glamor-6[data-simulate-focus] ~ div:last-child,
[data-glamor-6][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-13,
[data-glamor-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-13::placeholder,
[data-glamor-13]::placeholder,
.glamor-13[data-simulate-placeholder],
[data-glamor-13][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-13::-ms-input-placeholder,
[data-glamor-13]::-ms-input-placeholder,
.glamor-13[data-simulate-msinputplaceholder],
[data-glamor-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-13:-ms-input-placeholder,
[data-glamor-13]:-ms-input-placeholder,
.glamor-13[data-simulate-msinputplaceholder],
[data-glamor-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-13::-ms-clear,
[data-glamor-13]::-ms-clear,
.glamor-13[data-simulate-msclear],
[data-glamor-13][data-simulate-msclear] {
  display: none;
}

.glamor-13:focus ~ div:last-child,
[data-glamor-13]:focus ~ div:last-child,
.glamor-13[data-simulate-focus] ~ div:last-child,
[data-glamor-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "IconCloud": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <glamorous(div)>
                <div
                  className="glamor-19"
                >
                  <TextInput
                    iconStart={<IconCloud />}
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={<IconCloud />}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-4"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={<IconCloud />}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-4"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-3"
                          >
                            <IconCloud
                              key="iconStart"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <glamorous(svg)
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    className="glamor-0"
                                    role="img"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </glamorous(svg)>
                              </Icon>
                            </IconCloud>
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={<IconCloud />}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-1"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-2"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <TextInput
                    iconEnd={<IconCloud />}
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={<IconCloud />}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-4"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={<IconCloud />}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-4"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-3"
                          >
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              disabled={undefined}
                              iconEnd={<IconCloud />}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-6"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <IconCloud
                              key="iconEnd"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <glamorous(svg)
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    className="glamor-0"
                                    role="img"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </glamorous(svg)>
                              </Icon>
                            </IconCloud>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-2"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <TextInput
                    iconEnd={<IconCloud />}
                    iconStart={<IconCloud />}
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={<IconCloud />}
                      iconStart={<IconCloud />}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-4"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={<IconCloud />}
                        iconStart={<IconCloud />}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-4"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-3"
                          >
                            <IconCloud
                              key="iconStart"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <glamorous(svg)
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    className="glamor-0"
                                    role="img"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </glamorous(svg)>
                              </Icon>
                            </IconCloud>
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              disabled={undefined}
                              iconEnd={<IconCloud />}
                              iconStart={<IconCloud />}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-13"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <IconCloud
                              key="iconEnd"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <glamorous(svg)
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    className="glamor-0"
                                    role="img"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </glamorous(svg)>
                              </Icon>
                            </IconCloud>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-2"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                </div>
              </glamorous(div)>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples input-ref 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-8 > *:not(:last-child),
[data-glamor-8] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-7,
[data-glamor-7] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.glamor-7 *,
[data-glamor-7] *,
.glamor-7 *::before,
[data-glamor-7] *::before,
.glamor-7 *::after,
[data-glamor-7] *::after {
  box-sizing: inherit;
}

.glamor-7:focus,
[data-glamor-7]:focus,
.glamor-7[data-simulate-focus],
[data-glamor-7][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.glamor-7:hover,
[data-glamor-7]:hover,
.glamor-7[data-simulate-hover],
[data-glamor-7][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.glamor-7:active,
[data-glamor-7]:active,
.glamor-7[data-simulate-active],
[data-glamor-7][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.glamor-7::-moz-focus-inner,
[data-glamor-7]::-moz-focus-inner,
.glamor-7[data-simulate-mozfocusinner],
[data-glamor-7][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-7 [role="img"],
[data-glamor-7] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.glamor-7 [role="img"]:first-child,
[data-glamor-7] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-7 [role="img"]:last-child,
[data-glamor-7] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-7 [role="img"]:only-child,
[data-glamor-7] [role="img"]:only-child {
  margin: 0;
}

.glamor-6,
[data-glamor-6] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-5,
[data-glamor-5] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.glamor-5:first-child,
[data-glamor-5]:first-child,
.glamor-5[data-simulate-firstchild],
[data-glamor-5][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.glamor-5:last-child,
[data-glamor-5]:last-child,
.glamor-5[data-simulate-lastchild],
[data-glamor-5][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Button": [Function],
            "Component": [Function],
            "DemoLayout": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <MyForm>
                <glamorous(div)>
                  <div
                    className="glamor-8"
                  >
                    <TextInput
                      inputRef={[Function]}
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": [Function],
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": [Function],
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                controlRef={[Function]}
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                innerRef={[Function]}
                                key="control"
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix={undefined}
                                type="text"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-0"
                                  disabled={undefined}
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="text"
                                />
                              </glamorous(glamorous(input))>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <Button
                      element="button"
                      onClick={[Function]}
                      size="large"
                      type="button"
                      variant="regular"
                    >
                      <glamorous(button)
                        element="button"
                        onClick={[Function]}
                        size="large"
                        text="Focus the input"
                        type="button"
                        variant="regular"
                      >
                        <button
                          className="glamor-7"
                          onClick={[Function]}
                          type="button"
                        >
                          <glamorous(span)>
                            <span
                              className="glamor-6"
                            >
                              <glamorous(span)
                                size="large"
                              >
                                <span
                                  className="glamor-5"
                                >
                                  Focus the input
                                </span>
                              </glamorous(span)>
                            </span>
                          </glamorous(span)>
                        </button>
                      </glamorous(button)>
                    </Button>
                  </div>
                </glamorous(div)>
              </MyForm>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples invalid 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <TextInput
              invalid={true}
            >
              <TextInput
                className={undefined}
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": true,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                disabled={undefined}
                iconEnd={undefined}
                iconStart={undefined}
                prefix={undefined}
                readOnly={undefined}
                size="large"
                suffix={undefined}
                variant={undefined}
              >
                <FauxControl
                  className="glamor-3"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": true,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  disabled={undefined}
                  iconEnd={undefined}
                  iconStart={undefined}
                  prefix={undefined}
                  readOnly={undefined}
                  size="large"
                  suffix={undefined}
                  variant={undefined}
                >
                  <FauxControl
                    className="glamor-3"
                    control={[Function]}
                    disabled={undefined}
                    innerRef={undefined}
                    variant={undefined}
                  >
                    <div
                      className="glamor-2"
                    >
                      <glamorous(glamorous(input))
                        aria-invalid={true}
                        aria-required={undefined}
                        controlPropsIn={
                          Object {
                            "aria-invalid": true,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        controlRef={undefined}
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        innerRef={undefined}
                        key="control"
                        prefix={undefined}
                        readOnly={undefined}
                        required={undefined}
                        size="large"
                        suffix={undefined}
                        type="text"
                        variant={undefined}
                      >
                        <input
                          aria-invalid={true}
                          aria-required={undefined}
                          className="glamor-0"
                          disabled={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          required={undefined}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay
                        disabled={undefined}
                        readOnly={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-1"
                          readOnly={undefined}
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples kitchen-sink 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-63 > *:not(:last-child),
[data-glamor-63] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-24,
[data-glamor-24] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-52,
[data-glamor-52] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-52 [role="img"],
[data-glamor-52] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-52 [role="img"]:last-of-type,
[data-glamor-52] [role="img"]:last-of-type {
  fill: #db2929;
}

.glamor-51,
[data-glamor-51] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-51 *,
[data-glamor-51] *,
.glamor-51 *::before,
[data-glamor-51] *::before,
.glamor-51 *::after,
[data-glamor-51] *::after {
  box-sizing: inherit;
}

.glamor-51:hover > div:last-child,
[data-glamor-51]:hover > div:last-child,
.glamor-51[data-simulate-hover] > div:last-child,
[data-glamor-51][data-simulate-hover] > div:last-child {
  border-color: #c71818;
}

.glamor-51:focus > div:last-child,
[data-glamor-51]:focus > div:last-child,
.glamor-51[data-simulate-focus] > div:last-child,
[data-glamor-51][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-51:active > div:last-child,
[data-glamor-51]:active > div:last-child,
.glamor-51[data-simulate-active] > div:last-child,
[data-glamor-51][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-51 [role="img"],
[data-glamor-51] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-51 [role="img"]:last-of-type,
[data-glamor-51] [role="img"]:last-of-type {
  fill: #db2929;
}

.glamor-47,
[data-glamor-47] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-47::placeholder,
[data-glamor-47]::placeholder,
.glamor-47[data-simulate-placeholder],
[data-glamor-47][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-47::-ms-input-placeholder,
[data-glamor-47]::-ms-input-placeholder,
.glamor-47[data-simulate-msinputplaceholder],
[data-glamor-47][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-47:-ms-input-placeholder,
[data-glamor-47]:-ms-input-placeholder,
.glamor-47[data-simulate-msinputplaceholder],
[data-glamor-47][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-47::-ms-clear,
[data-glamor-47]::-ms-clear,
.glamor-47[data-simulate-msclear],
[data-glamor-47][data-simulate-msclear] {
  display: none;
}

.glamor-47:focus ~ div:last-child,
[data-glamor-47]:focus ~ div:last-child,
.glamor-47[data-simulate-focus] ~ div:last-child,
[data-glamor-47][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-50,
[data-glamor-50] {
  background-color: #fff;
  border-color: #db2929;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-6,
[data-glamor-6] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-6::placeholder,
[data-glamor-6]::placeholder,
.glamor-6[data-simulate-placeholder],
[data-glamor-6][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-input-placeholder,
[data-glamor-6]::-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6:-ms-input-placeholder,
[data-glamor-6]:-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-clear,
[data-glamor-6]::-ms-clear,
.glamor-6[data-simulate-msclear],
[data-glamor-6][data-simulate-msclear] {
  display: none;
}

.glamor-6:focus ~ div:last-child,
[data-glamor-6]:focus ~ div:last-child,
.glamor-6[data-simulate-focus] ~ div:last-child,
[data-glamor-6][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-11,
[data-glamor-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-11::placeholder,
[data-glamor-11]::placeholder,
.glamor-11[data-simulate-placeholder],
[data-glamor-11][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-11::-ms-input-placeholder,
[data-glamor-11]::-ms-input-placeholder,
.glamor-11[data-simulate-msinputplaceholder],
[data-glamor-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-11:-ms-input-placeholder,
[data-glamor-11]:-ms-input-placeholder,
.glamor-11[data-simulate-msinputplaceholder],
[data-glamor-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-11::-ms-clear,
[data-glamor-11]::-ms-clear,
.glamor-11[data-simulate-msclear],
[data-glamor-11][data-simulate-msclear] {
  display: none;
}

.glamor-11:focus ~ div:last-child,
[data-glamor-11]:focus ~ div:last-child,
.glamor-11[data-simulate-focus] ~ div:last-child,
[data-glamor-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-18,
[data-glamor-18] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-18::placeholder,
[data-glamor-18]::placeholder,
.glamor-18[data-simulate-placeholder],
[data-glamor-18][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-18::-ms-input-placeholder,
[data-glamor-18]::-ms-input-placeholder,
.glamor-18[data-simulate-msinputplaceholder],
[data-glamor-18][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-18:-ms-input-placeholder,
[data-glamor-18]:-ms-input-placeholder,
.glamor-18[data-simulate-msinputplaceholder],
[data-glamor-18][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-18::-ms-clear,
[data-glamor-18]::-ms-clear,
.glamor-18[data-simulate-msclear],
[data-glamor-18][data-simulate-msclear] {
  display: none;
}

.glamor-18:focus ~ div:last-child,
[data-glamor-18]:focus ~ div:last-child,
.glamor-18[data-simulate-focus] ~ div:last-child,
[data-glamor-18][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-5,
[data-glamor-5] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-12,
[data-glamor-12] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 1.1428571428571428em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-97,
[data-glamor-97] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  transform: scaleX(-1);
  width: 1.5em;
  -webkit-transform: scaleX(-1);
}

.glamor-25,
[data-glamor-25] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-32,
[data-glamor-32] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 0;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-54,
[data-glamor-54] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.glamor-55,
[data-glamor-55] {
  flex: 0 0 auto;
  font-size: 0.75em;
  margin-left: 0;
  margin-right: 0.3333333333333333em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-56,
[data-glamor-56] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.75em;
  height: 2em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-56::placeholder,
[data-glamor-56]::placeholder,
.glamor-56[data-simulate-placeholder],
[data-glamor-56][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-56::-ms-input-placeholder,
[data-glamor-56]::-ms-input-placeholder,
.glamor-56[data-simulate-msinputplaceholder],
[data-glamor-56][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-56:-ms-input-placeholder,
[data-glamor-56]:-ms-input-placeholder,
.glamor-56[data-simulate-msinputplaceholder],
[data-glamor-56][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-56::-ms-clear,
[data-glamor-56]::-ms-clear,
.glamor-56[data-simulate-msclear],
[data-glamor-56][data-simulate-msclear] {
  display: none;
}

.glamor-56:focus ~ div:last-child,
[data-glamor-56]:focus ~ div:last-child,
.glamor-56[data-simulate-focus] ~ div:last-child,
[data-glamor-56][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-57,
[data-glamor-57] {
  flex: 0 0 auto;
  font-size: 0.75em;
  margin-left: 0.3333333333333333em;
  margin-right: 0;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-111,
[data-glamor-111] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-111::placeholder,
[data-glamor-111]::placeholder,
.glamor-111[data-simulate-placeholder],
[data-glamor-111][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-111::-ms-input-placeholder,
[data-glamor-111]::-ms-input-placeholder,
.glamor-111[data-simulate-msinputplaceholder],
[data-glamor-111][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-111:-ms-input-placeholder,
[data-glamor-111]:-ms-input-placeholder,
.glamor-111[data-simulate-msinputplaceholder],
[data-glamor-111][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-111::-ms-clear,
[data-glamor-111]::-ms-clear,
.glamor-111[data-simulate-msclear],
[data-glamor-111][data-simulate-msclear] {
  display: none;
}

.glamor-111:focus ~ div:last-child,
[data-glamor-111]:focus ~ div:last-child,
.glamor-111[data-simulate-focus] ~ div:last-child,
[data-glamor-111][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-122,
[data-glamor-122] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  transform: scaleX(-1);
  width: 1em;
  -webkit-transform: scaleX(-1);
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "KitchenSink": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <KitchenSink>
              <div>
                <glamorous(div)>
                  <div
                    className="glamor-63"
                  >
                    <TextInput
                      defaultValue="000"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                innerRef={undefined}
                                key="control"
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix={undefined}
                                type="text"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-0"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="text"
                                />
                              </glamorous(glamorous(input))>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      prefix="$"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix="$"
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix="$"
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <glamorous(span)
                                iconEnd={undefined}
                                iconStart={undefined}
                                key="prefix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-5"
                                >
                                  $
                                </span>
                              </glamorous(span)>
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                innerRef={undefined}
                                key="control"
                                prefix="$"
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix={undefined}
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-6"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix="$"
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      suffix="cm"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix="cm"
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix="cm"
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                innerRef={undefined}
                                key="control"
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix="cm"
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-11"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <glamorous(span)
                                iconEnd={undefined}
                                iconStart={undefined}
                                key="suffix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-12"
                                >
                                  cm
                                </span>
                              </glamorous(span)>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      prefix="$"
                      suffix="cm"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix="$"
                        readOnly={undefined}
                        size="large"
                        suffix="cm"
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix="$"
                          readOnly={undefined}
                          size="large"
                          suffix="cm"
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <glamorous(span)
                                iconEnd={undefined}
                                iconStart={undefined}
                                key="prefix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-5"
                                >
                                  $
                                </span>
                              </glamorous(span)>
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                innerRef={undefined}
                                key="control"
                                prefix="$"
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix="cm"
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-18"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix="$"
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <glamorous(span)
                                iconEnd={undefined}
                                iconStart={undefined}
                                key="suffix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-12"
                                >
                                  cm
                                </span>
                              </glamorous(span)>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      iconStart={<IconCloud />}
                      prefix="$"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={<IconCloud />}
                        prefix="$"
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={<IconCloud />}
                          prefix="$"
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <IconCloud
                                key="iconStart"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={false}
                                  size="1.5em"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={false}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-24"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCloud>
                              <glamorous(span)
                                iconEnd={undefined}
                                iconStart={<IconCloud />}
                                key="prefix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-25"
                                >
                                  $
                                </span>
                              </glamorous(span)>
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={<IconCloud />}
                                innerRef={undefined}
                                key="control"
                                prefix="$"
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix={undefined}
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-6"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix="$"
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      iconEnd={<IconBackspace />}
                      suffix="cm"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={<IconBackspace />}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix="cm"
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={<IconBackspace />}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix="cm"
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={<IconBackspace />}
                                iconStart={undefined}
                                innerRef={undefined}
                                key="control"
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix="cm"
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-11"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <glamorous(span)
                                iconEnd={<IconBackspace />}
                                iconStart={undefined}
                                key="suffix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-32"
                                >
                                  cm
                                </span>
                              </glamorous(span)>
                              <IconBackspace
                                key="iconEnd"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={true}
                                  size="1.5em"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={true}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-24"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconBackspace>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      iconEnd={<IconBackspace />}
                      iconStart={<IconCloud />}
                      prefix="$"
                      suffix="cm"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={<IconBackspace />}
                        iconStart={<IconCloud />}
                        prefix="$"
                        readOnly={undefined}
                        size="large"
                        suffix="cm"
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          prefix="$"
                          readOnly={undefined}
                          size="large"
                          suffix="cm"
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <IconCloud
                                key="iconStart"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={false}
                                  size="1.5em"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={false}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-24"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCloud>
                              <glamorous(span)
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                key="prefix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-25"
                                >
                                  $
                                </span>
                              </glamorous(span)>
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                innerRef={undefined}
                                key="control"
                                prefix="$"
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix="cm"
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-18"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix="$"
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <glamorous(span)
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                key="suffix"
                                size="large"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-32"
                                >
                                  cm
                                </span>
                              </glamorous(span)>
                              <IconBackspace
                                key="iconEnd"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={true}
                                  size="1.5em"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={true}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-24"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconBackspace>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      suffix="cm"
                      type="number"
                      variant="danger"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix="cm"
                        variant="danger"
                      >
                        <FauxControl
                          className="glamor-52"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix="cm"
                          variant="danger"
                        >
                          <FauxControl
                            className="glamor-52"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant="danger"
                          >
                            <div
                              className="glamor-51"
                            >
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                innerRef={undefined}
                                key="control"
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                suffix="cm"
                                type="number"
                                variant="danger"
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-47"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <glamorous(span)
                                iconEnd={undefined}
                                iconStart={undefined}
                                key="suffix"
                                size="large"
                                variant="danger"
                              >
                                <span
                                  className="glamor-32"
                                >
                                  cm
                                </span>
                              </glamorous(span)>
                              <IconDanger
                                key="iconEnd"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={false}
                                  size="1.5em"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={false}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-24"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconDanger>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant="danger"
                              >
                                <div
                                  className="glamor-50"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                    <TextInput
                      defaultValue="000"
                      iconEnd={<IconBackspace />}
                      iconStart={<IconCloud />}
                      prefix="$"
                      size="small"
                      suffix="cm"
                      type="number"
                    >
                      <TextInput
                        className={undefined}
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={<IconBackspace />}
                        iconStart={<IconCloud />}
                        prefix="$"
                        readOnly={undefined}
                        size="small"
                        suffix="cm"
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          disabled={undefined}
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          prefix="$"
                          readOnly={undefined}
                          size="small"
                          suffix="cm"
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-3"
                            control={[Function]}
                            disabled={undefined}
                            innerRef={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-2"
                            >
                              <IconCloud
                                key="iconStart"
                                size="medium"
                              >
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-54"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCloud>
                              <glamorous(span)
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                key="prefix"
                                size="small"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-55"
                                >
                                  $
                                </span>
                              </glamorous(span)>
                              <glamorous(glamorous(input))
                                aria-invalid={undefined}
                                aria-required={undefined}
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                controlRef={undefined}
                                defaultValue="000"
                                disabled={undefined}
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                innerRef={undefined}
                                key="control"
                                prefix="$"
                                readOnly={undefined}
                                required={undefined}
                                size="small"
                                suffix="cm"
                                type="number"
                                variant={undefined}
                              >
                                <input
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  className="glamor-56"
                                  defaultValue="000"
                                  disabled={undefined}
                                  prefix="$"
                                  readOnly={undefined}
                                  required={undefined}
                                  size="small"
                                  type="number"
                                />
                              </glamorous(glamorous(input))>
                              <glamorous(span)
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                key="suffix"
                                size="small"
                                variant={undefined}
                              >
                                <span
                                  className="glamor-57"
                                >
                                  cm
                                </span>
                              </glamorous(span)>
                              <IconBackspace
                                key="iconEnd"
                                size="medium"
                              >
                                <Icon
                                  rtl={true}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    aria-labelledby={undefined}
                                    role="img"
                                    rtl={true}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      className="glamor-54"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconBackspace>
                              <Underlay
                                disabled={undefined}
                                readOnly={undefined}
                                variant={undefined}
                              >
                                <div
                                  className="glamor-1"
                                  readOnly={undefined}
                                />
                              </Underlay>
                            </div>
                          </FauxControl>
                        </FauxControl>
                      </TextInput>
                    </TextInput>
                  </div>
                </glamorous(div)>
                <div
                  dir="rtl"
                >
                  <h3>
                    RTL
                  </h3>
                  <ThemeProvider>
                    <ThemeProvider>
                      <glamorous(div)>
                        <div
                          className="glamor-63"
                        >
                          <TextInput
                            defaultValue="000"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              size="large"
                              suffix={undefined}
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                size="large"
                                suffix={undefined}
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "text",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      innerRef={undefined}
                                      key="control"
                                      prefix={undefined}
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix={undefined}
                                      type="text"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-0"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix={undefined}
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="text"
                                      />
                                    </glamorous(glamorous(input))>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            prefix="$"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              prefix="$"
                              readOnly={undefined}
                              size="large"
                              suffix={undefined}
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                prefix="$"
                                readOnly={undefined}
                                size="large"
                                suffix={undefined}
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <glamorous(span)
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      key="prefix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-12"
                                      >
                                        $
                                      </span>
                                    </glamorous(span)>
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      innerRef={undefined}
                                      key="control"
                                      prefix="$"
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix={undefined}
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-11"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix="$"
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            suffix="cm"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              size="large"
                              suffix="cm"
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                size="large"
                                suffix="cm"
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      innerRef={undefined}
                                      key="control"
                                      prefix={undefined}
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-6"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix={undefined}
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <glamorous(span)
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      key="suffix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-5"
                                      >
                                        cm
                                      </span>
                                    </glamorous(span)>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            prefix="$"
                            suffix="cm"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              prefix="$"
                              readOnly={undefined}
                              size="large"
                              suffix="cm"
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                prefix="$"
                                readOnly={undefined}
                                size="large"
                                suffix="cm"
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <glamorous(span)
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      key="prefix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-12"
                                      >
                                        $
                                      </span>
                                    </glamorous(span)>
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      innerRef={undefined}
                                      key="control"
                                      prefix="$"
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-18"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix="$"
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <glamorous(span)
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      key="suffix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-5"
                                      >
                                        cm
                                      </span>
                                    </glamorous(span)>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            iconStart={<IconCloud />}
                            prefix="$"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={<IconCloud />}
                              prefix="$"
                              readOnly={undefined}
                              size="large"
                              suffix={undefined}
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={<IconCloud />}
                                prefix="$"
                                readOnly={undefined}
                                size="large"
                                suffix={undefined}
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <IconCloud
                                      key="iconStart"
                                      size="1.5em"
                                    >
                                      <Icon
                                        rtl={false}
                                        size="1.5em"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={false}
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-24"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconCloud>
                                    <glamorous(span)
                                      iconEnd={undefined}
                                      iconStart={<IconCloud />}
                                      key="prefix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-32"
                                      >
                                        $
                                      </span>
                                    </glamorous(span)>
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={undefined}
                                      iconStart={<IconCloud />}
                                      innerRef={undefined}
                                      key="control"
                                      prefix="$"
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix={undefined}
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-11"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix="$"
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            iconEnd={<IconBackspace />}
                            suffix="cm"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={<IconBackspace />}
                              iconStart={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              size="large"
                              suffix="cm"
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={<IconBackspace />}
                                iconStart={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                size="large"
                                suffix="cm"
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={<IconBackspace />}
                                      iconStart={undefined}
                                      innerRef={undefined}
                                      key="control"
                                      prefix={undefined}
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-6"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix={undefined}
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <glamorous(span)
                                      iconEnd={<IconBackspace />}
                                      iconStart={undefined}
                                      key="suffix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-25"
                                      >
                                        cm
                                      </span>
                                    </glamorous(span)>
                                    <IconBackspace
                                      key="iconEnd"
                                      size="1.5em"
                                    >
                                      <Icon
                                        rtl={true}
                                        size="1.5em"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={true}
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-97"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconBackspace>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            iconEnd={<IconBackspace />}
                            iconStart={<IconCloud />}
                            prefix="$"
                            suffix="cm"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              prefix="$"
                              readOnly={undefined}
                              size="large"
                              suffix="cm"
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                prefix="$"
                                readOnly={undefined}
                                size="large"
                                suffix="cm"
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <IconCloud
                                      key="iconStart"
                                      size="1.5em"
                                    >
                                      <Icon
                                        rtl={false}
                                        size="1.5em"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={false}
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-24"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconCloud>
                                    <glamorous(span)
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      key="prefix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-32"
                                      >
                                        $
                                      </span>
                                    </glamorous(span)>
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      innerRef={undefined}
                                      key="control"
                                      prefix="$"
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-18"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix="$"
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <glamorous(span)
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      key="suffix"
                                      size="large"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-25"
                                      >
                                        cm
                                      </span>
                                    </glamorous(span)>
                                    <IconBackspace
                                      key="iconEnd"
                                      size="1.5em"
                                    >
                                      <Icon
                                        rtl={true}
                                        size="1.5em"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={true}
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-97"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconBackspace>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            suffix="cm"
                            type="number"
                            variant="danger"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              size="large"
                              suffix="cm"
                              variant="danger"
                            >
                              <FauxControl
                                className="glamor-52"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={undefined}
                                iconStart={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                size="large"
                                suffix="cm"
                                variant="danger"
                              >
                                <FauxControl
                                  className="glamor-52"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant="danger"
                                >
                                  <div
                                    className="glamor-51"
                                  >
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      innerRef={undefined}
                                      key="control"
                                      prefix={undefined}
                                      readOnly={undefined}
                                      required={undefined}
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                      variant="danger"
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-111"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix={undefined}
                                        readOnly={undefined}
                                        required={undefined}
                                        size="large"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <glamorous(span)
                                      iconEnd={undefined}
                                      iconStart={undefined}
                                      key="suffix"
                                      size="large"
                                      variant="danger"
                                    >
                                      <span
                                        className="glamor-25"
                                      >
                                        cm
                                      </span>
                                    </glamorous(span)>
                                    <IconDanger
                                      key="iconEnd"
                                      size="1.5em"
                                    >
                                      <Icon
                                        rtl={false}
                                        size="1.5em"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={false}
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-24"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconDanger>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant="danger"
                                    >
                                      <div
                                        className="glamor-50"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                          <TextInput
                            defaultValue="000"
                            iconEnd={<IconBackspace />}
                            iconStart={<IconCloud />}
                            prefix="$"
                            size="small"
                            suffix="cm"
                            type="number"
                          >
                            <TextInput
                              className={undefined}
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              disabled={undefined}
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              prefix="$"
                              readOnly={undefined}
                              size="small"
                              suffix="cm"
                              variant={undefined}
                            >
                              <FauxControl
                                className="glamor-3"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                disabled={undefined}
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                prefix="$"
                                readOnly={undefined}
                                size="small"
                                suffix="cm"
                                variant={undefined}
                              >
                                <FauxControl
                                  className="glamor-3"
                                  control={[Function]}
                                  disabled={undefined}
                                  innerRef={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                  >
                                    <IconCloud
                                      key="iconStart"
                                      size="medium"
                                    >
                                      <Icon
                                        rtl={false}
                                        size="medium"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={false}
                                          size="medium"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-54"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconCloud>
                                    <glamorous(span)
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      key="prefix"
                                      size="small"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-57"
                                      >
                                        $
                                      </span>
                                    </glamorous(span)>
                                    <glamorous(glamorous(input))
                                      aria-invalid={undefined}
                                      aria-required={undefined}
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      controlRef={undefined}
                                      defaultValue="000"
                                      disabled={undefined}
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      innerRef={undefined}
                                      key="control"
                                      prefix="$"
                                      readOnly={undefined}
                                      required={undefined}
                                      size="small"
                                      suffix="cm"
                                      type="number"
                                      variant={undefined}
                                    >
                                      <input
                                        aria-invalid={undefined}
                                        aria-required={undefined}
                                        className="glamor-56"
                                        defaultValue="000"
                                        disabled={undefined}
                                        prefix="$"
                                        readOnly={undefined}
                                        required={undefined}
                                        size="small"
                                        type="number"
                                      />
                                    </glamorous(glamorous(input))>
                                    <glamorous(span)
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      key="suffix"
                                      size="small"
                                      variant={undefined}
                                    >
                                      <span
                                        className="glamor-55"
                                      >
                                        cm
                                      </span>
                                    </glamorous(span)>
                                    <IconBackspace
                                      key="iconEnd"
                                      size="medium"
                                    >
                                      <Icon
                                        rtl={true}
                                        size="medium"
                                      >
                                        <glamorous(svg)
                                          aria-hidden={true}
                                          aria-labelledby={undefined}
                                          role="img"
                                          rtl={true}
                                          size="medium"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={undefined}
                                            className="glamor-122"
                                            role="img"
                                            viewBox="0 0 24 24"
                                          >
                                            <g>
                                              <path
                                                d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                              />
                                            </g>
                                          </svg>
                                        </glamorous(svg)>
                                      </Icon>
                                    </IconBackspace>
                                    <Underlay
                                      disabled={undefined}
                                      readOnly={undefined}
                                      variant={undefined}
                                    >
                                      <div
                                        className="glamor-1"
                                        readOnly={undefined}
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </TextInput>
                          </TextInput>
                        </div>
                      </glamorous(div)>
                    </ThemeProvider>
                  </ThemeProvider>
                </div>
              </div>
            </KitchenSink>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples next-to-button 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-16,
[data-glamor-16] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-16::placeholder,
[data-glamor-16]::placeholder,
.glamor-16[data-simulate-placeholder],
[data-glamor-16][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-16::-ms-input-placeholder,
[data-glamor-16]::-ms-input-placeholder,
.glamor-16[data-simulate-msinputplaceholder],
[data-glamor-16][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-16:-ms-input-placeholder,
[data-glamor-16]:-ms-input-placeholder,
.glamor-16[data-simulate-msinputplaceholder],
[data-glamor-16][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-16::-ms-clear,
[data-glamor-16]::-ms-clear,
.glamor-16[data-simulate-msclear],
[data-glamor-16][data-simulate-msclear] {
  display: none;
}

.glamor-16:focus ~ div:last-child,
[data-glamor-16]:focus ~ div:last-child,
.glamor-16[data-simulate-focus] ~ div:last-child,
[data-glamor-16][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.75em;
  height: 2em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-8,
[data-glamor-8] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.2857142857142856em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.glamor-8::placeholder,
[data-glamor-8]::placeholder,
.glamor-8[data-simulate-placeholder],
[data-glamor-8][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-8::-ms-input-placeholder,
[data-glamor-8]::-ms-input-placeholder,
.glamor-8[data-simulate-msinputplaceholder],
[data-glamor-8][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-8:-ms-input-placeholder,
[data-glamor-8]:-ms-input-placeholder,
.glamor-8[data-simulate-msinputplaceholder],
[data-glamor-8][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-8::-ms-clear,
[data-glamor-8]::-ms-clear,
.glamor-8[data-simulate-msclear],
[data-glamor-8][data-simulate-msclear] {
  display: none;
}

.glamor-8:focus ~ div:last-child,
[data-glamor-8]:focus ~ div:last-child,
.glamor-8[data-simulate-focus] ~ div:last-child,
[data-glamor-8][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-24,
[data-glamor-24] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 3.7142857142857144em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-24::placeholder,
[data-glamor-24]::placeholder,
.glamor-24[data-simulate-placeholder],
[data-glamor-24][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-24::-ms-input-placeholder,
[data-glamor-24]::-ms-input-placeholder,
.glamor-24[data-simulate-msinputplaceholder],
[data-glamor-24][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-24:-ms-input-placeholder,
[data-glamor-24]:-ms-input-placeholder,
.glamor-24[data-simulate-msinputplaceholder],
[data-glamor-24][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-24::-ms-clear,
[data-glamor-24]::-ms-clear,
.glamor-24[data-simulate-msclear],
[data-glamor-24][data-simulate-msclear] {
  display: none;
}

.glamor-24:focus ~ div:last-child,
[data-glamor-24]:focus ~ div:last-child,
.glamor-24[data-simulate-focus] ~ div:last-child,
[data-glamor-24][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-23,
[data-glamor-23] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.glamor-23 *,
[data-glamor-23] *,
.glamor-23 *::before,
[data-glamor-23] *::before,
.glamor-23 *::after,
[data-glamor-23] *::after {
  box-sizing: inherit;
}

.glamor-23:focus,
[data-glamor-23]:focus,
.glamor-23[data-simulate-focus],
[data-glamor-23][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.glamor-23:hover,
[data-glamor-23]:hover,
.glamor-23[data-simulate-hover],
[data-glamor-23][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.glamor-23:active,
[data-glamor-23]:active,
.glamor-23[data-simulate-active],
[data-glamor-23][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.glamor-23::-moz-focus-inner,
[data-glamor-23]::-moz-focus-inner,
.glamor-23[data-simulate-mozfocusinner],
[data-glamor-23][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-23 [role="img"],
[data-glamor-23] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.glamor-23 [role="img"]:first-child,
[data-glamor-23] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-23 [role="img"]:last-child,
[data-glamor-23] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-23 [role="img"]:only-child,
[data-glamor-23] [role="img"]:only-child {
  margin: 0;
}

.glamor-6,
[data-glamor-6] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.glamor-21,
[data-glamor-21] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.glamor-21:first-child,
[data-glamor-21]:first-child,
.glamor-21[data-simulate-firstchild],
[data-glamor-21][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.glamor-21:last-child,
[data-glamor-21]:last-child,
.glamor-21[data-simulate-lastchild],
[data-glamor-21][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

.glamor-32 > *:not(:last-child),
[data-glamor-32] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-32 > *,
[data-glamor-32] > * {
  align-items: flex-end;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
}

.glamor-32 > * > div,
[data-glamor-32] > * > div {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.glamor-7,
[data-glamor-7] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.glamor-7 *,
[data-glamor-7] *,
.glamor-7 *::before,
[data-glamor-7] *::before,
.glamor-7 *::after,
[data-glamor-7] *::after {
  box-sizing: inherit;
}

.glamor-7:focus,
[data-glamor-7]:focus,
.glamor-7[data-simulate-focus],
[data-glamor-7][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.glamor-7:hover,
[data-glamor-7]:hover,
.glamor-7[data-simulate-hover],
[data-glamor-7][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.glamor-7:active,
[data-glamor-7]:active,
.glamor-7[data-simulate-active],
[data-glamor-7][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.glamor-7::-moz-focus-inner,
[data-glamor-7]::-moz-focus-inner,
.glamor-7[data-simulate-mozfocusinner],
[data-glamor-7][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-7 [role="img"],
[data-glamor-7] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.glamor-7 [role="img"]:first-child,
[data-glamor-7] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-7 [role="img"]:last-child,
[data-glamor-7] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-7 [role="img"]:only-child,
[data-glamor-7] [role="img"]:only-child {
  margin: 0;
}

.glamor-5,
[data-glamor-5] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.glamor-15,
[data-glamor-15] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  min-width: 2em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.glamor-15 *,
[data-glamor-15] *,
.glamor-15 *::before,
[data-glamor-15] *::before,
.glamor-15 *::after,
[data-glamor-15] *::after {
  box-sizing: inherit;
}

.glamor-15:focus,
[data-glamor-15]:focus,
.glamor-15[data-simulate-focus],
[data-glamor-15][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.glamor-15:hover,
[data-glamor-15]:hover,
.glamor-15[data-simulate-hover],
[data-glamor-15][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.glamor-15:active,
[data-glamor-15]:active,
.glamor-15[data-simulate-active],
[data-glamor-15][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.glamor-15::-moz-focus-inner,
[data-glamor-15]::-moz-focus-inner,
.glamor-15[data-simulate-mozfocusinner],
[data-glamor-15][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-15 [role="img"],
[data-glamor-15] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.glamor-15 [role="img"]:first-child,
[data-glamor-15] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-15 [role="img"]:last-child,
[data-glamor-15] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-15 [role="img"]:only-child,
[data-glamor-15] [role="img"]:only-child {
  margin: 0;
}

.glamor-13,
[data-glamor-13] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.glamor-31,
[data-glamor-31] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  min-width: 3.25em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.glamor-31 *,
[data-glamor-31] *,
.glamor-31 *::before,
[data-glamor-31] *::before,
.glamor-31 *::after,
[data-glamor-31] *::after {
  box-sizing: inherit;
}

.glamor-31:focus,
[data-glamor-31]:focus,
.glamor-31[data-simulate-focus],
[data-glamor-31][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.glamor-31:hover,
[data-glamor-31]:hover,
.glamor-31[data-simulate-hover],
[data-glamor-31][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.glamor-31:active,
[data-glamor-31]:active,
.glamor-31[data-simulate-active],
[data-glamor-31][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.glamor-31::-moz-focus-inner,
[data-glamor-31]::-moz-focus-inner,
.glamor-31[data-simulate-mozfocusinner],
[data-glamor-31][data-simulate-mozfocusinner] {
  border: 0;
}

.glamor-31 [role="img"],
[data-glamor-31] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.glamor-31 [role="img"]:first-child,
[data-glamor-31] [role="img"]:first-child {
  margin-right: 0.5em;
}

.glamor-31 [role="img"]:last-child,
[data-glamor-31] [role="img"]:last-child {
  margin-left: 0.5em;
}

.glamor-31 [role="img"]:only-child,
[data-glamor-31] [role="img"]:only-child {
  margin: 0;
}

.glamor-29,
[data-glamor-29] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.glamor-29:first-child,
[data-glamor-29]:first-child,
.glamor-29[data-simulate-firstchild],
[data-glamor-29][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.glamor-29:last-child,
[data-glamor-29]:last-child,
.glamor-29[data-simulate-lastchild],
[data-glamor-29][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "Button": [Function],
            "DemoLayout": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(glamorous(div))>
              <div
                className="glamor-32"
              >
                <div>
                  <TextInput
                    defaultValue="Small"
                    size="small"
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="small"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Small",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="small"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-2"
                          >
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Small",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              defaultValue="Small"
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="small"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-0"
                                defaultValue="Small"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="small"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-1"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <Button
                    element="button"
                    size="small"
                    type="button"
                    variant="regular"
                  >
                    <glamorous(button)
                      element="button"
                      size="small"
                      text="Small"
                      type="button"
                      variant="regular"
                    >
                      <button
                        className="glamor-7"
                        type="button"
                      >
                        <glamorous(span)>
                          <span
                            className="glamor-6"
                          >
                            <glamorous(span)
                              size="small"
                            >
                              <span
                                className="glamor-5"
                              >
                                Small
                              </span>
                            </glamorous(span)>
                          </span>
                        </glamorous(span)>
                      </button>
                    </glamorous(button)>
                  </Button>
                </div>
                <div>
                  <TextInput
                    defaultValue="Medium"
                    size="medium"
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="medium"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Medium",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="medium"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-2"
                          >
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Medium",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              defaultValue="Medium"
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="medium"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-8"
                                defaultValue="Medium"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="medium"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-1"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <Button
                    element="button"
                    size="medium"
                    type="button"
                    variant="regular"
                  >
                    <glamorous(button)
                      element="button"
                      size="medium"
                      text="Medium"
                      type="button"
                      variant="regular"
                    >
                      <button
                        className="glamor-15"
                        type="button"
                      >
                        <glamorous(span)>
                          <span
                            className="glamor-6"
                          >
                            <glamorous(span)
                              size="medium"
                            >
                              <span
                                className="glamor-13"
                              >
                                Medium
                              </span>
                            </glamorous(span)>
                          </span>
                        </glamorous(span)>
                      </button>
                    </glamorous(button)>
                  </Button>
                </div>
                <div>
                  <TextInput
                    defaultValue="Large"
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Large",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-2"
                          >
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Large",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              defaultValue="Large"
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-16"
                                defaultValue="Large"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-1"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <Button
                    element="button"
                    size="large"
                    type="button"
                    variant="regular"
                  >
                    <glamorous(button)
                      element="button"
                      size="large"
                      text="Large"
                      type="button"
                      variant="regular"
                    >
                      <button
                        className="glamor-23"
                        type="button"
                      >
                        <glamorous(span)>
                          <span
                            className="glamor-6"
                          >
                            <glamorous(span)
                              size="large"
                            >
                              <span
                                className="glamor-21"
                              >
                                Large
                              </span>
                            </glamorous(span)>
                          </span>
                        </glamorous(span)>
                      </button>
                    </glamorous(button)>
                  </Button>
                </div>
                <div>
                  <TextInput
                    defaultValue="Jumbo"
                    size="jumbo"
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="jumbo"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Jumbo",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="jumbo"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-3"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-2"
                          >
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Jumbo",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={undefined}
                              defaultValue="Jumbo"
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="jumbo"
                              suffix={undefined}
                              type="text"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-24"
                                defaultValue="Jumbo"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="jumbo"
                                type="text"
                              />
                            </glamorous(glamorous(input))>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-1"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <Button
                    element="button"
                    size="jumbo"
                    type="button"
                    variant="regular"
                  >
                    <glamorous(button)
                      element="button"
                      size="jumbo"
                      text="Jumbo"
                      type="button"
                      variant="regular"
                    >
                      <button
                        className="glamor-31"
                        type="button"
                      >
                        <glamorous(span)>
                          <span
                            className="glamor-6"
                          >
                            <glamorous(span)
                              size="jumbo"
                            >
                              <span
                                className="glamor-29"
                              >
                                Jumbo
                              </span>
                            </glamorous(span)>
                          </span>
                        </glamorous(span)>
                      </button>
                    </glamorous(button)>
                  </Button>
                </div>
              </div>
            </glamorous(glamorous(div))>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples placeholder 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <TextInput
              placeholder="12345-123"
            >
              <TextInput
                className={undefined}
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "placeholder": "12345-123",
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                disabled={undefined}
                iconEnd={undefined}
                iconStart={undefined}
                prefix={undefined}
                readOnly={undefined}
                size="large"
                suffix={undefined}
                variant={undefined}
              >
                <FauxControl
                  className="glamor-3"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "placeholder": "12345-123",
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  disabled={undefined}
                  iconEnd={undefined}
                  iconStart={undefined}
                  prefix={undefined}
                  readOnly={undefined}
                  size="large"
                  suffix={undefined}
                  variant={undefined}
                >
                  <FauxControl
                    className="glamor-3"
                    control={[Function]}
                    disabled={undefined}
                    innerRef={undefined}
                    variant={undefined}
                  >
                    <div
                      className="glamor-2"
                    >
                      <glamorous(glamorous(input))
                        aria-invalid={undefined}
                        aria-required={undefined}
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "placeholder": "12345-123",
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        controlRef={undefined}
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        innerRef={undefined}
                        key="control"
                        placeholder="12345-123"
                        prefix={undefined}
                        readOnly={undefined}
                        required={undefined}
                        size="large"
                        suffix={undefined}
                        type="text"
                        variant={undefined}
                      >
                        <input
                          aria-invalid={undefined}
                          aria-required={undefined}
                          className="glamor-0"
                          disabled={undefined}
                          placeholder="12345-123"
                          prefix={undefined}
                          readOnly={undefined}
                          required={undefined}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay
                        disabled={undefined}
                        readOnly={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-1"
                          readOnly={undefined}
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples prefix-and-suffix 1`] = `
.glamor-4,
[data-glamor-4] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:last-of-type,
[data-glamor-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-3,
[data-glamor-3] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 *,
[data-glamor-3] *,
.glamor-3 *::before,
[data-glamor-3] *::before,
.glamor-3 *::after,
[data-glamor-3] *::after {
  box-sizing: inherit;
}

.glamor-3:hover > div:last-child,
[data-glamor-3]:hover > div:last-child,
.glamor-3[data-simulate-hover] > div:last-child,
[data-glamor-3][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-3:focus > div:last-child,
[data-glamor-3]:focus > div:last-child,
.glamor-3[data-simulate-focus] > div:last-child,
[data-glamor-3][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3:active > div:last-child,
[data-glamor-3]:active > div:last-child,
.glamor-3[data-simulate-active] > div:last-child,
[data-glamor-3][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-12 > *:not(:last-child),
[data-glamor-12] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-1,
[data-glamor-1] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-6,
[data-glamor-6] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-6::placeholder,
[data-glamor-6]::placeholder,
.glamor-6[data-simulate-placeholder],
[data-glamor-6][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-input-placeholder,
[data-glamor-6]::-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6:-ms-input-placeholder,
[data-glamor-6]:-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-clear,
[data-glamor-6]::-ms-clear,
.glamor-6[data-simulate-msclear],
[data-glamor-6][data-simulate-msclear] {
  display: none;
}

.glamor-6:focus ~ div:last-child,
[data-glamor-6]:focus ~ div:last-child,
.glamor-6[data-simulate-focus] ~ div:last-child,
[data-glamor-6][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.glamor-7,
[data-glamor-7] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 1.1428571428571428em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "IconCloud": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <wrappedPFC>
              <glamorous(div)>
                <div
                  className="glamor-12"
                >
                  <TextInput
                    prefix="$"
                    type="number"
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix="$"
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-4"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix="$"
                        readOnly={undefined}
                        size="large"
                        suffix={undefined}
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-4"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-3"
                          >
                            <glamorous(span)
                              iconEnd={undefined}
                              iconStart={undefined}
                              key="prefix"
                              size="large"
                              variant={undefined}
                            >
                              <span
                                className="glamor-0"
                              >
                                $
                              </span>
                            </glamorous(span)>
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              controlRef={undefined}
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix="$"
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              suffix={undefined}
                              type="number"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-1"
                                disabled={undefined}
                                prefix="$"
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                type="number"
                              />
                            </glamorous(glamorous(input))>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-2"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                  <TextInput
                    suffix="cm"
                    type="number"
                  >
                    <TextInput
                      className={undefined}
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix="cm"
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-4"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        prefix={undefined}
                        readOnly={undefined}
                        size="large"
                        suffix="cm"
                        variant={undefined}
                      >
                        <FauxControl
                          className="glamor-4"
                          control={[Function]}
                          disabled={undefined}
                          innerRef={undefined}
                          variant={undefined}
                        >
                          <div
                            className="glamor-3"
                          >
                            <glamorous(glamorous(input))
                              aria-invalid={undefined}
                              aria-required={undefined}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              controlRef={undefined}
                              disabled={undefined}
                              iconEnd={undefined}
                              iconStart={undefined}
                              innerRef={undefined}
                              key="control"
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              suffix="cm"
                              type="number"
                              variant={undefined}
                            >
                              <input
                                aria-invalid={undefined}
                                aria-required={undefined}
                                className="glamor-6"
                                disabled={undefined}
                                prefix={undefined}
                                readOnly={undefined}
                                required={undefined}
                                size="large"
                                type="number"
                              />
                            </glamorous(glamorous(input))>
                            <glamorous(span)
                              iconEnd={undefined}
                              iconStart={undefined}
                              key="suffix"
                              size="large"
                              variant={undefined}
                            >
                              <span
                                className="glamor-7"
                              >
                                cm
                              </span>
                            </glamorous(span)>
                            <Underlay
                              disabled={undefined}
                              readOnly={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-2"
                                readOnly={undefined}
                              />
                            </Underlay>
                          </div>
                        </FauxControl>
                      </FauxControl>
                    </TextInput>
                  </TextInput>
                </div>
              </glamorous(div)>
            </wrappedPFC>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples read-only 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-1,
[data-glamor-1] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #8e99ab;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <TextInput
              defaultValue="Hello World"
              readOnly={true}
            >
              <TextInput
                className={undefined}
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Hello World",
                    "disabled": undefined,
                    "readOnly": true,
                    "required": undefined,
                    "type": "text",
                  }
                }
                disabled={undefined}
                iconEnd={undefined}
                iconStart={undefined}
                prefix={undefined}
                readOnly={true}
                size="large"
                suffix={undefined}
                variant={undefined}
              >
                <FauxControl
                  className="glamor-3"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Hello World",
                      "disabled": undefined,
                      "readOnly": true,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  disabled={undefined}
                  iconEnd={undefined}
                  iconStart={undefined}
                  prefix={undefined}
                  readOnly={true}
                  size="large"
                  suffix={undefined}
                  variant={undefined}
                >
                  <FauxControl
                    className="glamor-3"
                    control={[Function]}
                    disabled={undefined}
                    innerRef={undefined}
                    variant={undefined}
                  >
                    <div
                      className="glamor-2"
                    >
                      <glamorous(glamorous(input))
                        aria-invalid={undefined}
                        aria-required={undefined}
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Hello World",
                            "disabled": undefined,
                            "readOnly": true,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        controlRef={undefined}
                        defaultValue="Hello World"
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        innerRef={undefined}
                        key="control"
                        prefix={undefined}
                        readOnly={true}
                        required={undefined}
                        size="large"
                        suffix={undefined}
                        type="text"
                        variant={undefined}
                      >
                        <input
                          aria-invalid={undefined}
                          aria-required={undefined}
                          className="glamor-0"
                          defaultValue="Hello World"
                          disabled={undefined}
                          prefix={undefined}
                          readOnly={true}
                          required={undefined}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay
                        disabled={undefined}
                        readOnly={true}
                        variant={undefined}
                      >
                        <div
                          className="glamor-1"
                          readOnly={true}
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples required 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <TextInput
              required={true}
            >
              <TextInput
                className={undefined}
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": true,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": true,
                    "type": "text",
                  }
                }
                disabled={undefined}
                iconEnd={undefined}
                iconStart={undefined}
                prefix={undefined}
                readOnly={undefined}
                size="large"
                suffix={undefined}
                variant={undefined}
              >
                <FauxControl
                  className="glamor-3"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  disabled={undefined}
                  iconEnd={undefined}
                  iconStart={undefined}
                  prefix={undefined}
                  readOnly={undefined}
                  size="large"
                  suffix={undefined}
                  variant={undefined}
                >
                  <FauxControl
                    className="glamor-3"
                    control={[Function]}
                    disabled={undefined}
                    innerRef={undefined}
                    variant={undefined}
                  >
                    <div
                      className="glamor-2"
                    >
                      <glamorous(glamorous(input))
                        aria-invalid={undefined}
                        aria-required={true}
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": true,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": true,
                            "type": "text",
                          }
                        }
                        controlRef={undefined}
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        innerRef={undefined}
                        key="control"
                        prefix={undefined}
                        readOnly={undefined}
                        required={true}
                        size="large"
                        suffix={undefined}
                        type="text"
                        variant={undefined}
                      >
                        <input
                          aria-invalid={undefined}
                          aria-required={true}
                          className="glamor-0"
                          disabled={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          required={true}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay
                        disabled={undefined}
                        readOnly={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-1"
                          readOnly={undefined}
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples rtl 1`] = `
.glamor-4,
[data-glamor-4] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:last-of-type,
[data-glamor-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-3,
[data-glamor-3] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 *,
[data-glamor-3] *,
.glamor-3 *::before,
[data-glamor-3] *::before,
.glamor-3 *::after,
[data-glamor-3] *::after {
  box-sizing: inherit;
}

.glamor-3:hover > div:last-child,
[data-glamor-3]:hover > div:last-child,
.glamor-3[data-simulate-hover] > div:last-child,
[data-glamor-3][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-3:focus > div:last-child,
[data-glamor-3]:focus > div:last-child,
.glamor-3[data-simulate-focus] > div:last-child,
[data-glamor-3][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3:active > div:last-child,
[data-glamor-3]:active > div:last-child,
.glamor-3[data-simulate-active] > div:last-child,
[data-glamor-3][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-18 > *:not(:last-child),
[data-glamor-18] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-16,
[data-glamor-16] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-16 [role="img"],
[data-glamor-16] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-16 [role="img"]:last-of-type,
[data-glamor-16] [role="img"]:last-of-type {
  fill: #06783f;
}

.glamor-15,
[data-glamor-15] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-15 *,
[data-glamor-15] *,
.glamor-15 *::before,
[data-glamor-15] *::before,
.glamor-15 *::after,
[data-glamor-15] *::after {
  box-sizing: inherit;
}

.glamor-15:hover > div:last-child,
[data-glamor-15]:hover > div:last-child,
.glamor-15[data-simulate-hover] > div:last-child,
[data-glamor-15][data-simulate-hover] > div:last-child {
  border-color: #0a8f4c;
}

.glamor-15:focus > div:last-child,
[data-glamor-15]:focus > div:last-child,
.glamor-15[data-simulate-focus] > div:last-child,
[data-glamor-15][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-15:active > div:last-child,
[data-glamor-15]:active > div:last-child,
.glamor-15[data-simulate-active] > div:last-child,
[data-glamor-15][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-15 [role="img"],
[data-glamor-15] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-15 [role="img"]:last-of-type,
[data-glamor-15] [role="img"]:last-of-type {
  fill: #06783f;
}

.glamor-13,
[data-glamor-13] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-14,
[data-glamor-14] {
  background-color: #fff;
  border-color: #10a35a;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-6,
[data-glamor-6] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-6::placeholder,
[data-glamor-6]::placeholder,
.glamor-6[data-simulate-placeholder],
[data-glamor-6][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-input-placeholder,
[data-glamor-6]::-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6:-ms-input-placeholder,
[data-glamor-6]:-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-clear,
[data-glamor-6]::-ms-clear,
.glamor-6[data-simulate-msclear],
[data-glamor-6][data-simulate-msclear] {
  display: none;
}

.glamor-6:focus ~ div:last-child,
[data-glamor-6]:focus ~ div:last-child,
.glamor-6[data-simulate-focus] ~ div:last-child,
[data-glamor-6][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-1::placeholder,
[data-glamor-1]::placeholder,
.glamor-1[data-simulate-placeholder],
[data-glamor-1][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-input-placeholder,
[data-glamor-1]::-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1:-ms-input-placeholder,
[data-glamor-1]:-ms-input-placeholder,
.glamor-1[data-simulate-msinputplaceholder],
[data-glamor-1][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-1::-ms-clear,
[data-glamor-1]::-ms-clear,
.glamor-1[data-simulate-msclear],
[data-glamor-1][data-simulate-msclear] {
  display: none;
}

.glamor-1:focus ~ div:last-child,
[data-glamor-1]:focus ~ div:last-child,
.glamor-1[data-simulate-focus] ~ div:last-child,
[data-glamor-1][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-0,
[data-glamor-0] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  transform: scaleX(-1);
  width: 1.5em;
  -webkit-transform: scaleX(-1);
}

.glamor-12,
[data-glamor-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-12::placeholder,
[data-glamor-12]::placeholder,
.glamor-12[data-simulate-placeholder],
[data-glamor-12][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-12::-ms-input-placeholder,
[data-glamor-12]::-ms-input-placeholder,
.glamor-12[data-simulate-msinputplaceholder],
[data-glamor-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-12:-ms-input-placeholder,
[data-glamor-12]:-ms-input-placeholder,
.glamor-12[data-simulate-msinputplaceholder],
[data-glamor-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-12::-ms-clear,
[data-glamor-12]::-ms-clear,
.glamor-12[data-simulate-msclear],
[data-glamor-12][data-simulate-msclear] {
  display: none;
}

.glamor-12:focus ~ div:last-child,
[data-glamor-12]:focus ~ div:last-child,
.glamor-12[data-simulate-focus] ~ div:last-child,
[data-glamor-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "IconBackspace": [Function],
            "TextInput": [Function],
            "ThemeProvider": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <div
              dir="rtl"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <glamorous(div)>
                    <div
                      className="glamor-18"
                    >
                      <TextInput
                        defaultValue="مرحبا بالعالم"
                        iconStart={<IconBackspace />}
                      >
                        <TextInput
                          className={undefined}
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={<IconBackspace />}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "مرحبا بالعالم",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={<IconBackspace />}
                            prefix={undefined}
                            readOnly={undefined}
                            size="large"
                            suffix={undefined}
                            variant={undefined}
                          >
                            <FauxControl
                              className="glamor-4"
                              control={[Function]}
                              disabled={undefined}
                              innerRef={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-3"
                              >
                                <IconBackspace
                                  key="iconStart"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={true}
                                    size="1.5em"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      role="img"
                                      rtl={true}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={undefined}
                                        className="glamor-0"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconBackspace>
                                <glamorous(glamorous(input))
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  controlRef={undefined}
                                  defaultValue="مرحبا بالعالم"
                                  disabled={undefined}
                                  iconEnd={undefined}
                                  iconStart={<IconBackspace />}
                                  innerRef={undefined}
                                  key="control"
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  suffix={undefined}
                                  type="text"
                                  variant={undefined}
                                >
                                  <input
                                    aria-invalid={undefined}
                                    aria-required={undefined}
                                    className="glamor-1"
                                    defaultValue="مرحبا بالعالم"
                                    disabled={undefined}
                                    prefix={undefined}
                                    readOnly={undefined}
                                    required={undefined}
                                    size="large"
                                    type="text"
                                  />
                                </glamorous(glamorous(input))>
                                <Underlay
                                  disabled={undefined}
                                  readOnly={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                    readOnly={undefined}
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </TextInput>
                      </TextInput>
                      <TextInput
                        defaultValue="مرحبا بالعالم"
                        iconEnd={<IconBackspace />}
                      >
                        <TextInput
                          className={undefined}
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          disabled={undefined}
                          iconEnd={<IconBackspace />}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant={undefined}
                        >
                          <FauxControl
                            className="glamor-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "مرحبا بالعالم",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            disabled={undefined}
                            iconEnd={<IconBackspace />}
                            iconStart={undefined}
                            prefix={undefined}
                            readOnly={undefined}
                            size="large"
                            suffix={undefined}
                            variant={undefined}
                          >
                            <FauxControl
                              className="glamor-4"
                              control={[Function]}
                              disabled={undefined}
                              innerRef={undefined}
                              variant={undefined}
                            >
                              <div
                                className="glamor-3"
                              >
                                <glamorous(glamorous(input))
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  controlRef={undefined}
                                  defaultValue="مرحبا بالعالم"
                                  disabled={undefined}
                                  iconEnd={<IconBackspace />}
                                  iconStart={undefined}
                                  innerRef={undefined}
                                  key="control"
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  suffix={undefined}
                                  type="text"
                                  variant={undefined}
                                >
                                  <input
                                    aria-invalid={undefined}
                                    aria-required={undefined}
                                    className="glamor-6"
                                    defaultValue="مرحبا بالعالم"
                                    disabled={undefined}
                                    prefix={undefined}
                                    readOnly={undefined}
                                    required={undefined}
                                    size="large"
                                    type="text"
                                  />
                                </glamorous(glamorous(input))>
                                <IconBackspace
                                  key="iconEnd"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={true}
                                    size="1.5em"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      role="img"
                                      rtl={true}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={undefined}
                                        className="glamor-0"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconBackspace>
                                <Underlay
                                  disabled={undefined}
                                  readOnly={undefined}
                                  variant={undefined}
                                >
                                  <div
                                    className="glamor-2"
                                    readOnly={undefined}
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </TextInput>
                      </TextInput>
                      <TextInput
                        defaultValue="مرحبا بالعالم"
                        variant="success"
                      >
                        <TextInput
                          className={undefined}
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          disabled={undefined}
                          iconEnd={undefined}
                          iconStart={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          size="large"
                          suffix={undefined}
                          variant="success"
                        >
                          <FauxControl
                            className="glamor-16"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "مرحبا بالعالم",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            prefix={undefined}
                            readOnly={undefined}
                            size="large"
                            suffix={undefined}
                            variant="success"
                          >
                            <FauxControl
                              className="glamor-16"
                              control={[Function]}
                              disabled={undefined}
                              innerRef={undefined}
                              variant="success"
                            >
                              <div
                                className="glamor-15"
                              >
                                <glamorous(glamorous(input))
                                  aria-invalid={undefined}
                                  aria-required={undefined}
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  controlRef={undefined}
                                  defaultValue="مرحبا بالعالم"
                                  disabled={undefined}
                                  iconEnd={undefined}
                                  iconStart={undefined}
                                  innerRef={undefined}
                                  key="control"
                                  prefix={undefined}
                                  readOnly={undefined}
                                  required={undefined}
                                  size="large"
                                  suffix={undefined}
                                  type="text"
                                  variant="success"
                                >
                                  <input
                                    aria-invalid={undefined}
                                    aria-required={undefined}
                                    className="glamor-12"
                                    defaultValue="مرحبا بالعالم"
                                    disabled={undefined}
                                    prefix={undefined}
                                    readOnly={undefined}
                                    required={undefined}
                                    size="large"
                                    type="text"
                                  />
                                </glamorous(glamorous(input))>
                                <IconSuccess
                                  key="iconEnd"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={false}
                                    size="1.5em"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      aria-labelledby={undefined}
                                      role="img"
                                      rtl={false}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={undefined}
                                        className="glamor-13"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconSuccess>
                                <Underlay
                                  disabled={undefined}
                                  readOnly={undefined}
                                  variant="success"
                                >
                                  <div
                                    className="glamor-14"
                                    readOnly={undefined}
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </TextInput>
                      </TextInput>
                    </div>
                  </glamorous(div)>
                </ThemeProvider>
              </ThemeProvider>
            </div>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples size 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-10,
[data-glamor-10] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-10::placeholder,
[data-glamor-10]::placeholder,
.glamor-10[data-simulate-placeholder],
[data-glamor-10][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-10::-ms-input-placeholder,
[data-glamor-10]::-ms-input-placeholder,
.glamor-10[data-simulate-msinputplaceholder],
[data-glamor-10][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-10:-ms-input-placeholder,
[data-glamor-10]:-ms-input-placeholder,
.glamor-10[data-simulate-msinputplaceholder],
[data-glamor-10][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-10::-ms-clear,
[data-glamor-10]::-ms-clear,
.glamor-10[data-simulate-msclear],
[data-glamor-10][data-simulate-msclear] {
  display: none;
}

.glamor-10:focus ~ div:last-child,
[data-glamor-10]:focus ~ div:last-child,
.glamor-10[data-simulate-focus] ~ div:last-child,
[data-glamor-10][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-20 > *:not(:last-child),
[data-glamor-20] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.75em;
  height: 2em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-5,
[data-glamor-5] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.2857142857142856em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.glamor-5::placeholder,
[data-glamor-5]::placeholder,
.glamor-5[data-simulate-placeholder],
[data-glamor-5][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-5::-ms-input-placeholder,
[data-glamor-5]::-ms-input-placeholder,
.glamor-5[data-simulate-msinputplaceholder],
[data-glamor-5][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-5:-ms-input-placeholder,
[data-glamor-5]:-ms-input-placeholder,
.glamor-5[data-simulate-msinputplaceholder],
[data-glamor-5][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-5::-ms-clear,
[data-glamor-5]::-ms-clear,
.glamor-5[data-simulate-msclear],
[data-glamor-5][data-simulate-msclear] {
  display: none;
}

.glamor-5:focus ~ div:last-child,
[data-glamor-5]:focus ~ div:last-child,
.glamor-5[data-simulate-focus] ~ div:last-child,
[data-glamor-5][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-15,
[data-glamor-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 3.7142857142857144em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-15::placeholder,
[data-glamor-15]::placeholder,
.glamor-15[data-simulate-placeholder],
[data-glamor-15][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-15::-ms-input-placeholder,
[data-glamor-15]::-ms-input-placeholder,
.glamor-15[data-simulate-msinputplaceholder],
[data-glamor-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-15:-ms-input-placeholder,
[data-glamor-15]:-ms-input-placeholder,
.glamor-15[data-simulate-msinputplaceholder],
[data-glamor-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-15::-ms-clear,
[data-glamor-15]::-ms-clear,
.glamor-15[data-simulate-msclear],
[data-glamor-15][data-simulate-msclear] {
  display: none;
}

.glamor-15:focus ~ div:last-child,
[data-glamor-15]:focus ~ div:last-child,
.glamor-15[data-simulate-focus] ~ div:last-child,
[data-glamor-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-20"
              >
                <TextInput
                  defaultValue="Small"
                  size="small"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Small",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="small"
                    suffix={undefined}
                    variant={undefined}
                  >
                    <FauxControl
                      className="glamor-3"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="small"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-2"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Small",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Small"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="small"
                            suffix={undefined}
                            type="text"
                            variant={undefined}
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-0"
                              defaultValue="Small"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="small"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-1"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
                <TextInput
                  defaultValue="Medium"
                  size="medium"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Medium",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="medium"
                    suffix={undefined}
                    variant={undefined}
                  >
                    <FauxControl
                      className="glamor-3"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="medium"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-2"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Medium",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Medium"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="medium"
                            suffix={undefined}
                            type="text"
                            variant={undefined}
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-5"
                              defaultValue="Medium"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="medium"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-1"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
                <TextInput
                  defaultValue="Large"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Large",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="large"
                    suffix={undefined}
                    variant={undefined}
                  >
                    <FauxControl
                      className="glamor-3"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-2"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Large",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Large"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="large"
                            suffix={undefined}
                            type="text"
                            variant={undefined}
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-10"
                              defaultValue="Large"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-1"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
                <TextInput
                  defaultValue="Jumbo"
                  size="jumbo"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Jumbo",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="jumbo"
                    suffix={undefined}
                    variant={undefined}
                  >
                    <FauxControl
                      className="glamor-3"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="jumbo"
                      suffix={undefined}
                      variant={undefined}
                    >
                      <FauxControl
                        className="glamor-3"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-2"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Jumbo",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Jumbo"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="jumbo"
                            suffix={undefined}
                            type="text"
                            variant={undefined}
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-15"
                              defaultValue="Jumbo"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="jumbo"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant={undefined}
                          >
                            <div
                              className="glamor-1"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples uncontrolled 1`] = `
.glamor-3,
[data-glamor-3] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-2,
[data-glamor-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-2 *,
[data-glamor-2] *,
.glamor-2 *::before,
[data-glamor-2] *::before,
.glamor-2 *::after,
[data-glamor-2] *::after {
  box-sizing: inherit;
}

.glamor-2:hover > div:last-child,
[data-glamor-2]:hover > div:last-child,
.glamor-2[data-simulate-hover] > div:last-child,
[data-glamor-2][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.glamor-2:focus > div:last-child,
[data-glamor-2]:focus > div:last-child,
.glamor-2[data-simulate-focus] > div:last-child,
[data-glamor-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2:active > div:last-child,
[data-glamor-2]:active > div:last-child,
.glamor-2[data-simulate-active] > div:last-child,
[data-glamor-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-2 [role="img"],
[data-glamor-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-2 [role="img"]:last-of-type,
[data-glamor-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.glamor-1,
[data-glamor-1] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <TextInput
              defaultValue="Hello World"
            >
              <TextInput
                className={undefined}
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Hello World",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                disabled={undefined}
                iconEnd={undefined}
                iconStart={undefined}
                prefix={undefined}
                readOnly={undefined}
                size="large"
                suffix={undefined}
                variant={undefined}
              >
                <FauxControl
                  className="glamor-3"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Hello World",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  disabled={undefined}
                  iconEnd={undefined}
                  iconStart={undefined}
                  prefix={undefined}
                  readOnly={undefined}
                  size="large"
                  suffix={undefined}
                  variant={undefined}
                >
                  <FauxControl
                    className="glamor-3"
                    control={[Function]}
                    disabled={undefined}
                    innerRef={undefined}
                    variant={undefined}
                  >
                    <div
                      className="glamor-2"
                    >
                      <glamorous(glamorous(input))
                        aria-invalid={undefined}
                        aria-required={undefined}
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Hello World",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        controlRef={undefined}
                        defaultValue="Hello World"
                        disabled={undefined}
                        iconEnd={undefined}
                        iconStart={undefined}
                        innerRef={undefined}
                        key="control"
                        prefix={undefined}
                        readOnly={undefined}
                        required={undefined}
                        size="large"
                        suffix={undefined}
                        type="text"
                        variant={undefined}
                      >
                        <input
                          aria-invalid={undefined}
                          aria-required={undefined}
                          className="glamor-0"
                          defaultValue="Hello World"
                          disabled={undefined}
                          prefix={undefined}
                          readOnly={undefined}
                          required={undefined}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay
                        disabled={undefined}
                        readOnly={undefined}
                        variant={undefined}
                      >
                        <div
                          className="glamor-1"
                          readOnly={undefined}
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;

exports[`TextInput demo examples variants 1`] = `
.glamor-18 > *:not(:last-child),
[data-glamor-18] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.glamor-4,
[data-glamor-4] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-4 [role="img"],
[data-glamor-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-4 [role="img"]:last-of-type,
[data-glamor-4] [role="img"]:last-of-type {
  fill: #06783f;
}

.glamor-3,
[data-glamor-3] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-3 *,
[data-glamor-3] *,
.glamor-3 *::before,
[data-glamor-3] *::before,
.glamor-3 *::after,
[data-glamor-3] *::after {
  box-sizing: inherit;
}

.glamor-3:hover > div:last-child,
[data-glamor-3]:hover > div:last-child,
.glamor-3[data-simulate-hover] > div:last-child,
[data-glamor-3][data-simulate-hover] > div:last-child {
  border-color: #0a8f4c;
}

.glamor-3:focus > div:last-child,
[data-glamor-3]:focus > div:last-child,
.glamor-3[data-simulate-focus] > div:last-child,
[data-glamor-3][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-3:active > div:last-child,
[data-glamor-3]:active > div:last-child,
.glamor-3[data-simulate-active] > div:last-child,
[data-glamor-3][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-3 [role="img"],
[data-glamor-3] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-3 [role="img"]:last-of-type,
[data-glamor-3] [role="img"]:last-of-type {
  fill: #06783f;
}

.glamor-0,
[data-glamor-0] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-0::placeholder,
[data-glamor-0]::placeholder,
.glamor-0[data-simulate-placeholder],
[data-glamor-0][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-input-placeholder,
[data-glamor-0]::-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0:-ms-input-placeholder,
[data-glamor-0]:-ms-input-placeholder,
.glamor-0[data-simulate-msinputplaceholder],
[data-glamor-0][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-0::-ms-clear,
[data-glamor-0]::-ms-clear,
.glamor-0[data-simulate-msclear],
[data-glamor-0][data-simulate-msclear] {
  display: none;
}

.glamor-0:focus ~ div:last-child,
[data-glamor-0]:focus ~ div:last-child,
.glamor-0[data-simulate-focus] ~ div:last-child,
[data-glamor-0][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.glamor-1,
[data-glamor-1] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.glamor-2,
[data-glamor-2] {
  background-color: #fff;
  border-color: #10a35a;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-10,
[data-glamor-10] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-10 [role="img"],
[data-glamor-10] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-10 [role="img"]:last-of-type,
[data-glamor-10] [role="img"]:last-of-type {
  fill: #cf4615;
}

.glamor-9,
[data-glamor-9] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-9 *,
[data-glamor-9] *,
.glamor-9 *::before,
[data-glamor-9] *::before,
.glamor-9 *::after,
[data-glamor-9] *::after {
  box-sizing: inherit;
}

.glamor-9:hover > div:last-child,
[data-glamor-9]:hover > div:last-child,
.glamor-9[data-simulate-hover] > div:last-child,
[data-glamor-9][data-simulate-hover] > div:last-child {
  border-color: #cf4615;
}

.glamor-9:focus > div:last-child,
[data-glamor-9]:focus > div:last-child,
.glamor-9[data-simulate-focus] > div:last-child,
[data-glamor-9][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.glamor-9:active > div:last-child,
[data-glamor-9]:active > div:last-child,
.glamor-9[data-simulate-active] > div:last-child,
[data-glamor-9][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.glamor-9 [role="img"],
[data-glamor-9] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-9 [role="img"]:last-of-type,
[data-glamor-9] [role="img"]:last-of-type {
  fill: #cf4615;
}

.glamor-6,
[data-glamor-6] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-6::placeholder,
[data-glamor-6]::placeholder,
.glamor-6[data-simulate-placeholder],
[data-glamor-6][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-input-placeholder,
[data-glamor-6]::-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6:-ms-input-placeholder,
[data-glamor-6]:-ms-input-placeholder,
.glamor-6[data-simulate-msinputplaceholder],
[data-glamor-6][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-6::-ms-clear,
[data-glamor-6]::-ms-clear,
.glamor-6[data-simulate-msclear],
[data-glamor-6][data-simulate-msclear] {
  display: none;
}

.glamor-6:focus ~ div:last-child,
[data-glamor-6]:focus ~ div:last-child,
.glamor-6[data-simulate-focus] ~ div:last-child,
[data-glamor-6][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.glamor-8,
[data-glamor-8] {
  background-color: #fff;
  border-color: #e05b2b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.glamor-16,
[data-glamor-16] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-16 [role="img"],
[data-glamor-16] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-16 [role="img"]:last-of-type,
[data-glamor-16] [role="img"]:last-of-type {
  fill: #db2929;
}

.glamor-15,
[data-glamor-15] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.glamor-15 *,
[data-glamor-15] *,
.glamor-15 *::before,
[data-glamor-15] *::before,
.glamor-15 *::after,
[data-glamor-15] *::after {
  box-sizing: inherit;
}

.glamor-15:hover > div:last-child,
[data-glamor-15]:hover > div:last-child,
.glamor-15[data-simulate-hover] > div:last-child,
[data-glamor-15][data-simulate-hover] > div:last-child {
  border-color: #c71818;
}

.glamor-15:focus > div:last-child,
[data-glamor-15]:focus > div:last-child,
.glamor-15[data-simulate-focus] > div:last-child,
[data-glamor-15][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-15:active > div:last-child,
[data-glamor-15]:active > div:last-child,
.glamor-15[data-simulate-active] > div:last-child,
[data-glamor-15][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-15 [role="img"],
[data-glamor-15] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.glamor-15 [role="img"]:last-of-type,
[data-glamor-15] [role="img"]:last-of-type {
  fill: #db2929;
}

.glamor-12,
[data-glamor-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.glamor-12::placeholder,
[data-glamor-12]::placeholder,
.glamor-12[data-simulate-placeholder],
[data-glamor-12][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-12::-ms-input-placeholder,
[data-glamor-12]::-ms-input-placeholder,
.glamor-12[data-simulate-msinputplaceholder],
[data-glamor-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-12:-ms-input-placeholder,
[data-glamor-12]:-ms-input-placeholder,
.glamor-12[data-simulate-msinputplaceholder],
[data-glamor-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.glamor-12::-ms-clear,
[data-glamor-12]::-ms-clear,
.glamor-12[data-simulate-msclear],
[data-glamor-12][data-simulate-msclear] {
  display: none;
}

.glamor-12:focus ~ div:last-child,
[data-glamor-12]:focus ~ div:last-child,
.glamor-12[data-simulate-focus] ~ div:last-child,
[data-glamor-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.glamor-14,
[data-glamor-14] {
  background-color: #fff;
  border-color: #db2929;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<ThemeProvider>
  <ThemeProvider>
    <LiveProvider>
      <div
        className="react-live"
        scope={
          Object {
            "DemoLayout": [Function],
            "TextInput": [Function],
          }
        }
      >
        <LivePreview>
          <div
            className="react-live-preview"
          >
            <glamorous(div)>
              <div
                className="glamor-18"
              >
                <TextInput
                  defaultValue="Success"
                  variant="success"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Success",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="large"
                    suffix={undefined}
                    variant="success"
                  >
                    <FauxControl
                      className="glamor-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Success",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant="success"
                    >
                      <FauxControl
                        className="glamor-4"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant="success"
                      >
                        <div
                          className="glamor-3"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Success",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Success"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="large"
                            suffix={undefined}
                            type="text"
                            variant="success"
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-0"
                              defaultValue="Success"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <IconSuccess
                            key="iconEnd"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                aria-labelledby={undefined}
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  className="glamor-1"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconSuccess>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant="success"
                          >
                            <div
                              className="glamor-2"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
                <TextInput
                  defaultValue="Warning"
                  variant="warning"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Warning",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="large"
                    suffix={undefined}
                    variant="warning"
                  >
                    <FauxControl
                      className="glamor-10"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Warning",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant="warning"
                    >
                      <FauxControl
                        className="glamor-10"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant="warning"
                      >
                        <div
                          className="glamor-9"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Warning",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Warning"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="large"
                            suffix={undefined}
                            type="text"
                            variant="warning"
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-6"
                              defaultValue="Warning"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <IconWarning
                            key="iconEnd"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                aria-labelledby={undefined}
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  className="glamor-1"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconWarning>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant="warning"
                          >
                            <div
                              className="glamor-8"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
                <TextInput
                  defaultValue="Danger"
                  variant="danger"
                >
                  <TextInput
                    className={undefined}
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Danger",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    disabled={undefined}
                    iconEnd={undefined}
                    iconStart={undefined}
                    prefix={undefined}
                    readOnly={undefined}
                    size="large"
                    suffix={undefined}
                    variant="danger"
                  >
                    <FauxControl
                      className="glamor-16"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Danger",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      disabled={undefined}
                      iconEnd={undefined}
                      iconStart={undefined}
                      prefix={undefined}
                      readOnly={undefined}
                      size="large"
                      suffix={undefined}
                      variant="danger"
                    >
                      <FauxControl
                        className="glamor-16"
                        control={[Function]}
                        disabled={undefined}
                        innerRef={undefined}
                        variant="danger"
                      >
                        <div
                          className="glamor-15"
                        >
                          <glamorous(glamorous(input))
                            aria-invalid={undefined}
                            aria-required={undefined}
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Danger",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            controlRef={undefined}
                            defaultValue="Danger"
                            disabled={undefined}
                            iconEnd={undefined}
                            iconStart={undefined}
                            innerRef={undefined}
                            key="control"
                            prefix={undefined}
                            readOnly={undefined}
                            required={undefined}
                            size="large"
                            suffix={undefined}
                            type="text"
                            variant="danger"
                          >
                            <input
                              aria-invalid={undefined}
                              aria-required={undefined}
                              className="glamor-12"
                              defaultValue="Danger"
                              disabled={undefined}
                              prefix={undefined}
                              readOnly={undefined}
                              required={undefined}
                              size="large"
                              type="text"
                            />
                          </glamorous(glamorous(input))>
                          <IconDanger
                            key="iconEnd"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                aria-labelledby={undefined}
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  aria-labelledby={undefined}
                                  className="glamor-1"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconDanger>
                          <Underlay
                            disabled={undefined}
                            readOnly={undefined}
                            variant="danger"
                          >
                            <div
                              className="glamor-14"
                              readOnly={undefined}
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
              </div>
            </glamorous(div)>
          </div>
        </LivePreview>
      </div>
    </LiveProvider>
  </ThemeProvider>
</ThemeProvider>
`;
