// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput demo examples controlled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <MyForm>
    <TextInput
      onChange={[Function]}
      value="Hello World"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "disabled": undefined,
            "onChange": [Function],
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
            "value": "Hello World",
          }
        }
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "onChange": [Function],
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
              "value": "Hello World",
            }
          }
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-2"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "onChange": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                    "value": "Hello World",
                  }
                }
                key="control"
                onChange={[Function]}
                size="large"
                type="text"
                value="Hello World"
              >
                <input
                  className="css-13"
                  onChange={[Function]}
                  size="large"
                  type="text"
                  value="Hello World"
                />
              </glamorous(glamorous(input))>
              <Underlay>
                <div
                  className="css-27"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
  </MyForm>
</Component>
`;

exports[`TextInput demo examples disabled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-7,
[data-css-7] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-7::placeholder,
[data-css-7]::placeholder,
.css-7[data-simulate-placeholder],
[data-css-7][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-7::-ms-input-placeholder,
[data-css-7]::-ms-input-placeholder,
.css-7[data-simulate-msinputplaceholder],
[data-css-7][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-7:-ms-input-placeholder,
[data-css-7]:-ms-input-placeholder,
.css-7[data-simulate-msinputplaceholder],
[data-css-7][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-7::-ms-clear,
[data-css-7]::-ms-clear,
.css-7[data-simulate-msclear],
[data-css-7][data-simulate-msclear] {
  display: none;
}

.css-7:focus ~ div:last-child,
[data-css-7]:focus ~ div:last-child,
.css-7[data-simulate-focus] ~ div:last-child,
[data-css-7][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-21,
[data-css-21] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  defaultValue="Hello World"
  disabled={true}
>
  <TextInput
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "defaultValue": "Hello World",
        "disabled": true,
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    disabled={true}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "defaultValue": "Hello World",
          "disabled": true,
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      disabled={true}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
        disabled={true}
      >
        <div
          className="css-2"
        >
          <glamorous(glamorous(input))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Hello World",
                "disabled": true,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            defaultValue="Hello World"
            disabled={true}
            key="control"
            size="large"
            type="text"
          >
            <input
              className="css-7"
              defaultValue="Hello World"
              disabled={true}
              size="large"
              type="text"
            />
          </glamorous(glamorous(input))>
          <Underlay
            disabled={true}
          >
            <div
              className="css-21"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextInput>
</TextInput>
`;

exports[`TextInput demo examples form-field 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-14 > *:not(:last-child),
[data-css-14] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-15,
[data-css-15] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.css-16,
[data-css-16] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-16::placeholder,
[data-css-16]::placeholder,
.css-16[data-simulate-placeholder],
[data-css-16][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-16::-ms-input-placeholder,
[data-css-16]::-ms-input-placeholder,
.css-16[data-simulate-msinputplaceholder],
[data-css-16][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-16:-ms-input-placeholder,
[data-css-16]:-ms-input-placeholder,
.css-16[data-simulate-msinputplaceholder],
[data-css-16][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-16::-ms-clear,
[data-css-16]::-ms-clear,
.css-16[data-simulate-msclear],
[data-css-16][data-simulate-msclear] {
  display: none;
}

.css-16:focus ~ div:last-child,
[data-css-16]:focus ~ div:last-child,
.css-16[data-simulate-focus] ~ div:last-child,
[data-css-16][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-30,
[data-css-30] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-30 *,
[data-css-30] *,
.css-30 *::before,
[data-css-30] *::before,
.css-30 *::after,
[data-css-30] *::after {
  box-sizing: inherit;
}

.css-31,
[data-css-31] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-31 > *,
[data-css-31] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-32,
[data-css-32] {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.css-33,
[data-css-33] {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<glamorous(div)>
  <div
    className="css-14"
  >
    <FormField
      caption="Surname, family name"
      iconStart={<IconAccountBox />}
      input={[Function]}
      label="Last Name"
      required={true}
      requiredText="Required"
    >
      <FormField>
        <div
          className="css-30"
        >
          <label>
            <glamorous(div)
              key="formField-11-textWrapper"
            >
              <div
                className="css-31"
              >
                <span
                  id="formField-11-labelText"
                >
                  Last Name
                </span>
                <glamorous(span)>
                  <span
                    className="css-32"
                  >
                    Required
                  </span>
                </glamorous(span)>
              </div>
            </glamorous(div)>
            <TextInput
              aria-describedby="formField-11-caption"
              iconStart={<IconAccountBox />}
              key="formField-11-control"
              required={true}
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": "formField-11-caption",
                    "aria-invalid": undefined,
                    "aria-required": true,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": true,
                    "type": "text",
                  }
                }
                iconStart={<IconAccountBox />}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-11-caption",
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  iconStart={<IconAccountBox />}
                  size="large"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                  >
                    <div
                      className="css-2"
                    >
                      <IconAccountBox
                        key="iconStart"
                        size="1.5em"
                      >
                        <Icon
                          rtl={false}
                          size="1.5em"
                        >
                          <glamorous(svg)
                            aria-hidden={true}
                            role="img"
                            rtl={false}
                            size="1.5em"
                            viewBox="0 0 24 24"
                          >
                            <svg
                              aria-hidden={true}
                              className="css-15"
                              role="img"
                              viewBox="0 0 24 24"
                            >
                              <g>
                                <path
                                  d="M3 5v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5a2 2 0 0 0-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"
                                />
                              </g>
                            </svg>
                          </glamorous(svg)>
                        </Icon>
                      </IconAccountBox>
                      <glamorous(glamorous(input))
                        aria-describedby="formField-11-caption"
                        aria-required={true}
                        controlPropsIn={
                          Object {
                            "aria-describedby": "formField-11-caption",
                            "aria-invalid": undefined,
                            "aria-required": true,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": true,
                            "type": "text",
                          }
                        }
                        iconStart={<IconAccountBox />}
                        key="control"
                        required={true}
                        size="large"
                        type="text"
                      >
                        <input
                          aria-describedby="formField-11-caption"
                          aria-required={true}
                          className="css-16"
                          required={true}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay>
                        <div
                          className="css-13"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
          <glamorous(div)
            caption="Surname, family name"
            id="formField-11-caption"
          >
            <div
              className="css-33"
              id="formField-11-caption"
            >
              Surname, family name
            </div>
          </glamorous(div)>
        </div>
      </FormField>
    </FormField>
  </div>
</glamorous(div)>
`;

exports[`TextInput demo examples icons 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-14 > *:not(:last-child),
[data-css-14] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-15,
[data-css-15] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.css-16,
[data-css-16] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-16::placeholder,
[data-css-16]::placeholder,
.css-16[data-simulate-placeholder],
[data-css-16][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-16::-ms-input-placeholder,
[data-css-16]::-ms-input-placeholder,
.css-16[data-simulate-msinputplaceholder],
[data-css-16][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-16:-ms-input-placeholder,
[data-css-16]:-ms-input-placeholder,
.css-16[data-simulate-msinputplaceholder],
[data-css-16][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-16::-ms-clear,
[data-css-16]::-ms-clear,
.css-16[data-simulate-msclear],
[data-css-16][data-simulate-msclear] {
  display: none;
}

.css-16:focus ~ div:last-child,
[data-css-16]:focus ~ div:last-child,
.css-16[data-simulate-focus] ~ div:last-child,
[data-css-16][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-30,
[data-css-30] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-30::placeholder,
[data-css-30]::placeholder,
.css-30[data-simulate-placeholder],
[data-css-30][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-30::-ms-input-placeholder,
[data-css-30]::-ms-input-placeholder,
.css-30[data-simulate-msinputplaceholder],
[data-css-30][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-30:-ms-input-placeholder,
[data-css-30]:-ms-input-placeholder,
.css-30[data-simulate-msinputplaceholder],
[data-css-30][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-30::-ms-clear,
[data-css-30]::-ms-clear,
.css-30[data-simulate-msclear],
[data-css-30][data-simulate-msclear] {
  display: none;
}

.css-30:focus ~ div:last-child,
[data-css-30]:focus ~ div:last-child,
.css-30[data-simulate-focus] ~ div:last-child,
[data-css-30][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-44,
[data-css-44] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-44::placeholder,
[data-css-44]::placeholder,
.css-44[data-simulate-placeholder],
[data-css-44][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-44::-ms-input-placeholder,
[data-css-44]::-ms-input-placeholder,
.css-44[data-simulate-msinputplaceholder],
[data-css-44][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-44:-ms-input-placeholder,
[data-css-44]:-ms-input-placeholder,
.css-44[data-simulate-msinputplaceholder],
[data-css-44][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-44::-ms-clear,
[data-css-44]::-ms-clear,
.css-44[data-simulate-msclear],
[data-css-44][data-simulate-msclear] {
  display: none;
}

.css-44:focus ~ div:last-child,
[data-css-44]:focus ~ div:last-child,
.css-44[data-simulate-focus] ~ div:last-child,
[data-css-44][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<Component>
  <glamorous(div)>
    <div
      className="css-14"
    >
      <TextInput
        iconStart={<IconCloud />}
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          iconStart={<IconCloud />}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            iconStart={<IconCloud />}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <IconCloud
                  key="iconStart"
                  size="1.5em"
                >
                  <Icon
                    rtl={false}
                    size="1.5em"
                  >
                    <glamorous(svg)
                      aria-hidden={true}
                      role="img"
                      rtl={false}
                      size="1.5em"
                      viewBox="0 0 24 24"
                    >
                      <svg
                        aria-hidden={true}
                        className="css-15"
                        role="img"
                        viewBox="0 0 24 24"
                      >
                        <g>
                          <path
                            d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                          />
                        </g>
                      </svg>
                    </glamorous(svg)>
                  </Icon>
                </IconCloud>
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  iconStart={<IconCloud />}
                  key="control"
                  size="large"
                  type="text"
                >
                  <input
                    className="css-16"
                    size="large"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-13"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <TextInput
        iconEnd={<IconCloud />}
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          iconEnd={<IconCloud />}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            iconEnd={<IconCloud />}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  iconEnd={<IconCloud />}
                  key="control"
                  size="large"
                  type="text"
                >
                  <input
                    className="css-30"
                    size="large"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <IconCloud
                  key="iconEnd"
                  size="1.5em"
                >
                  <Icon
                    rtl={false}
                    size="1.5em"
                  >
                    <glamorous(svg)
                      aria-hidden={true}
                      role="img"
                      rtl={false}
                      size="1.5em"
                      viewBox="0 0 24 24"
                    >
                      <svg
                        aria-hidden={true}
                        className="css-15"
                        role="img"
                        viewBox="0 0 24 24"
                      >
                        <g>
                          <path
                            d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                          />
                        </g>
                      </svg>
                    </glamorous(svg)>
                  </Icon>
                </IconCloud>
                <Underlay>
                  <div
                    className="css-13"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <TextInput
        iconEnd={<IconCloud />}
        iconStart={<IconCloud />}
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          iconEnd={<IconCloud />}
          iconStart={<IconCloud />}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            iconEnd={<IconCloud />}
            iconStart={<IconCloud />}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <IconCloud
                  key="iconStart"
                  size="1.5em"
                >
                  <Icon
                    rtl={false}
                    size="1.5em"
                  >
                    <glamorous(svg)
                      aria-hidden={true}
                      role="img"
                      rtl={false}
                      size="1.5em"
                      viewBox="0 0 24 24"
                    >
                      <svg
                        aria-hidden={true}
                        className="css-15"
                        role="img"
                        viewBox="0 0 24 24"
                      >
                        <g>
                          <path
                            d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                          />
                        </g>
                      </svg>
                    </glamorous(svg)>
                  </Icon>
                </IconCloud>
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  iconEnd={<IconCloud />}
                  iconStart={<IconCloud />}
                  key="control"
                  size="large"
                  type="text"
                >
                  <input
                    className="css-44"
                    size="large"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <IconCloud
                  key="iconEnd"
                  size="1.5em"
                >
                  <Icon
                    rtl={false}
                    size="1.5em"
                  >
                    <glamorous(svg)
                      aria-hidden={true}
                      role="img"
                      rtl={false}
                      size="1.5em"
                      viewBox="0 0 24 24"
                    >
                      <svg
                        aria-hidden={true}
                        className="css-15"
                        role="img"
                        viewBox="0 0 24 24"
                      >
                        <g>
                          <path
                            d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                          />
                        </g>
                      </svg>
                    </glamorous(svg)>
                  </Icon>
                </IconCloud>
                <Underlay>
                  <div
                    className="css-13"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
    </div>
  </glamorous(div)>
</Component>
`;

exports[`TextInput demo examples input-ref 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-28 > *:not(:last-child),
[data-css-28] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-29,
[data-css-29] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-29 *,
[data-css-29] *,
.css-29 *::before,
[data-css-29] *::before,
.css-29 *::after,
[data-css-29] *::after {
  box-sizing: inherit;
}

.css-29:focus,
[data-css-29]:focus,
.css-29[data-simulate-focus],
[data-css-29][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-29:hover,
[data-css-29]:hover,
.css-29[data-simulate-hover],
[data-css-29][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-29:active,
[data-css-29]:active,
.css-29[data-simulate-active],
[data-css-29][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-29::-moz-focus-inner,
[data-css-29]::-moz-focus-inner,
.css-29[data-simulate-mozfocusinner],
[data-css-29][data-simulate-mozfocusinner] {
  border: 0;
}

.css-29 [role="img"],
[data-css-29] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-29 [role="img"]:first-child,
[data-css-29] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-29 [role="img"]:last-child,
[data-css-29] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-29 [role="img"]:only-child,
[data-css-29] [role="img"]:only-child {
  margin: 0;
}

.css-43,
[data-css-43] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-44,
[data-css-44] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-44:first-child,
[data-css-44]:first-child,
.css-44[data-simulate-firstchild],
[data-css-44][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-44:last-child,
[data-css-44]:last-child,
.css-44[data-simulate-lastchild],
[data-css-44][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <glamorous(div)>
      <div
        className="css-28"
      >
        <TextInput
          inputRef={[Function]}
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    controlRef={[Function]}
                    innerRef={[Function]}
                    key="control"
                    size="large"
                    type="text"
                  >
                    <input
                      className="css-13"
                      size="large"
                      type="text"
                    />
                  </glamorous(glamorous(input))>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <Button
          element="button"
          onClick={[Function]}
          size="large"
          type="button"
          variant="regular"
        >
          <glamorous(button)
            element="button"
            onClick={[Function]}
            size="large"
            text="Focus the input"
            type="button"
            variant="regular"
          >
            <button
              className="css-29"
              onClick={[Function]}
              type="button"
            >
              <glamorous(span)>
                <span
                  className="css-43"
                >
                  <glamorous(span)
                    size="large"
                  >
                    <span
                      className="css-44"
                    >
                      Focus the input
                    </span>
                  </glamorous(span)>
                </span>
              </glamorous(span)>
            </button>
          </glamorous(button)>
        </Button>
      </div>
    </glamorous(div)>
  </MyForm>
</Component>
`;

exports[`TextInput demo examples invalid 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  invalid={true}
>
  <TextInput
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": true,
        "aria-required": undefined,
        "controlRef": undefined,
        "disabled": undefined,
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": true,
          "aria-required": undefined,
          "controlRef": undefined,
          "disabled": undefined,
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-2"
        >
          <glamorous(glamorous(input))
            aria-invalid={true}
            controlPropsIn={
              Object {
                "aria-invalid": true,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            key="control"
            size="large"
            type="text"
          >
            <input
              aria-invalid={true}
              className="css-13"
              size="large"
              type="text"
            />
          </glamorous(glamorous(input))>
          <Underlay>
            <div
              className="css-27"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextInput>
</TextInput>
`;

exports[`TextInput demo examples kitchen-sink 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-28 > *:not(:last-child),
[data-css-28] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-29,
[data-css-29] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.css-30,
[data-css-30] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-30 [role="img"],
[data-css-30] [role="img"] {
  color: #de1b1b;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-30 [role="img"]:last-of-type,
[data-css-30] [role="img"]:last-of-type {
  color: #de1b1b;
}

.css-32,
[data-css-32] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-32 *,
[data-css-32] *,
.css-32 *::before,
[data-css-32] *::before,
.css-32 *::after,
[data-css-32] *::after {
  box-sizing: inherit;
}

.css-32:hover > div:last-child,
[data-css-32]:hover > div:last-child,
.css-32[data-simulate-hover] > div:last-child,
[data-css-32][data-simulate-hover] > div:last-child {
  border-color: #f55353;
}

.css-32:focus > div:last-child,
[data-css-32]:focus > div:last-child,
.css-32[data-simulate-focus] > div:last-child,
[data-css-32][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-32:active > div:last-child,
[data-css-32]:active > div:last-child,
.css-32[data-simulate-active] > div:last-child,
[data-css-32][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-32 [role="img"],
[data-css-32] [role="img"] {
  color: #de1b1b;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-32 [role="img"]:last-of-type,
[data-css-32] [role="img"]:last-of-type {
  color: #de1b1b;
}

.css-43,
[data-css-43] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-43::placeholder,
[data-css-43]::placeholder,
.css-43[data-simulate-placeholder],
[data-css-43][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43::-ms-input-placeholder,
[data-css-43]::-ms-input-placeholder,
.css-43[data-simulate-msinputplaceholder],
[data-css-43][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43:-ms-input-placeholder,
[data-css-43]:-ms-input-placeholder,
.css-43[data-simulate-msinputplaceholder],
[data-css-43][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43::-ms-clear,
[data-css-43]::-ms-clear,
.css-43[data-simulate-msclear],
[data-css-43][data-simulate-msclear] {
  display: none;
}

.css-43:focus ~ div:last-child,
[data-css-43]:focus ~ div:last-child,
.css-43[data-simulate-focus] ~ div:last-child,
[data-css-43][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-57,
[data-css-57] {
  background-color: #fff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-58,
[data-css-58] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-58::placeholder,
[data-css-58]::placeholder,
.css-58[data-simulate-placeholder],
[data-css-58][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-58::-ms-input-placeholder,
[data-css-58]::-ms-input-placeholder,
.css-58[data-simulate-msinputplaceholder],
[data-css-58][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-58:-ms-input-placeholder,
[data-css-58]:-ms-input-placeholder,
.css-58[data-simulate-msinputplaceholder],
[data-css-58][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-58::-ms-clear,
[data-css-58]::-ms-clear,
.css-58[data-simulate-msclear],
[data-css-58][data-simulate-msclear] {
  display: none;
}

.css-58:focus ~ div:last-child,
[data-css-58]:focus ~ div:last-child,
.css-58[data-simulate-focus] ~ div:last-child,
[data-css-58][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-72,
[data-css-72] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-72::placeholder,
[data-css-72]::placeholder,
.css-72[data-simulate-placeholder],
[data-css-72][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-72::-ms-input-placeholder,
[data-css-72]::-ms-input-placeholder,
.css-72[data-simulate-msinputplaceholder],
[data-css-72][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-72:-ms-input-placeholder,
[data-css-72]:-ms-input-placeholder,
.css-72[data-simulate-msinputplaceholder],
[data-css-72][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-72::-ms-clear,
[data-css-72]::-ms-clear,
.css-72[data-simulate-msclear],
[data-css-72][data-simulate-msclear] {
  display: none;
}

.css-72:focus ~ div:last-child,
[data-css-72]:focus ~ div:last-child,
.css-72[data-simulate-focus] ~ div:last-child,
[data-css-72][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-86,
[data-css-86] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-86::placeholder,
[data-css-86]::placeholder,
.css-86[data-simulate-placeholder],
[data-css-86][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-86::-ms-input-placeholder,
[data-css-86]::-ms-input-placeholder,
.css-86[data-simulate-msinputplaceholder],
[data-css-86][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-86:-ms-input-placeholder,
[data-css-86]:-ms-input-placeholder,
.css-86[data-simulate-msinputplaceholder],
[data-css-86][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-86::-ms-clear,
[data-css-86]::-ms-clear,
.css-86[data-simulate-msclear],
[data-css-86][data-simulate-msclear] {
  display: none;
}

.css-86:focus ~ div:last-child,
[data-css-86]:focus ~ div:last-child,
.css-86[data-simulate-focus] ~ div:last-child,
[data-css-86][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-100,
[data-css-100] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-101,
[data-css-101] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 1.1428571428571428em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-102,
[data-css-102] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  transform: scaleX(-1);
  width: 1.5em;
  -webkit-transform: scaleX(-1);
}

.css-103,
[data-css-103] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-104,
[data-css-104] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 0;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-105,
[data-css-105] {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-106,
[data-css-106] {
  flex: 0 0 auto;
  font-size: 0.75em;
  margin-left: 0;
  margin-right: 0.3333333333333333em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-107,
[data-css-107] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-107::placeholder,
[data-css-107]::placeholder,
.css-107[data-simulate-placeholder],
[data-css-107][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-107::-ms-input-placeholder,
[data-css-107]::-ms-input-placeholder,
.css-107[data-simulate-msinputplaceholder],
[data-css-107][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-107:-ms-input-placeholder,
[data-css-107]:-ms-input-placeholder,
.css-107[data-simulate-msinputplaceholder],
[data-css-107][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-107::-ms-clear,
[data-css-107]::-ms-clear,
.css-107[data-simulate-msclear],
[data-css-107][data-simulate-msclear] {
  display: none;
}

.css-107:focus ~ div:last-child,
[data-css-107]:focus ~ div:last-child,
.css-107[data-simulate-focus] ~ div:last-child,
[data-css-107][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-121,
[data-css-121] {
  flex: 0 0 auto;
  font-size: 0.75em;
  margin-left: 0.3333333333333333em;
  margin-right: 0;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-122,
[data-css-122] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-122::placeholder,
[data-css-122]::placeholder,
.css-122[data-simulate-placeholder],
[data-css-122][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-122::-ms-input-placeholder,
[data-css-122]::-ms-input-placeholder,
.css-122[data-simulate-msinputplaceholder],
[data-css-122][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-122:-ms-input-placeholder,
[data-css-122]:-ms-input-placeholder,
.css-122[data-simulate-msinputplaceholder],
[data-css-122][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-122::-ms-clear,
[data-css-122]::-ms-clear,
.css-122[data-simulate-msclear],
[data-css-122][data-simulate-msclear] {
  display: none;
}

.css-122:focus ~ div:last-child,
[data-css-122]:focus ~ div:last-child,
.css-122[data-simulate-focus] ~ div:last-child,
[data-css-122][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-136,
[data-css-136] {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  transform: scaleX(-1);
  width: 1em;
  -webkit-transform: scaleX(-1);
}

<KitchenSink>
  <div>
    <glamorous(div)>
      <div
        className="css-28"
      >
        <TextInput
          defaultValue="000"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    defaultValue="000"
                    key="control"
                    size="large"
                    type="text"
                  >
                    <input
                      className="css-13"
                      defaultValue="000"
                      size="large"
                      type="text"
                    />
                  </glamorous(glamorous(input))>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          prefix="$"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            prefix="$"
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              prefix="$"
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <glamorous(span)
                    key="prefix"
                    size="large"
                  >
                    <span
                      className="css-100"
                    >
                      $
                    </span>
                  </glamorous(span)>
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    key="control"
                    prefix="$"
                    size="large"
                    type="number"
                  >
                    <input
                      className="css-58"
                      defaultValue="000"
                      prefix="$"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          suffix="cm"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            size="large"
            suffix="cm"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              size="large"
              suffix="cm"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    key="control"
                    size="large"
                    suffix="cm"
                    type="number"
                  >
                    <input
                      className="css-72"
                      defaultValue="000"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <glamorous(span)
                    key="suffix"
                    size="large"
                  >
                    <span
                      className="css-101"
                    >
                      cm
                    </span>
                  </glamorous(span)>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          prefix="$"
          suffix="cm"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            prefix="$"
            size="large"
            suffix="cm"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              prefix="$"
              size="large"
              suffix="cm"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <glamorous(span)
                    key="prefix"
                    size="large"
                  >
                    <span
                      className="css-100"
                    >
                      $
                    </span>
                  </glamorous(span)>
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    key="control"
                    prefix="$"
                    size="large"
                    suffix="cm"
                    type="number"
                  >
                    <input
                      className="css-86"
                      defaultValue="000"
                      prefix="$"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <glamorous(span)
                    key="suffix"
                    size="large"
                  >
                    <span
                      className="css-101"
                    >
                      cm
                    </span>
                  </glamorous(span)>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          iconStart={<IconCloud />}
          prefix="$"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            iconStart={<IconCloud />}
            prefix="$"
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconStart={<IconCloud />}
              prefix="$"
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <IconCloud
                    key="iconStart"
                    size="1.5em"
                  >
                    <Icon
                      rtl={false}
                      size="1.5em"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={false}
                        size="1.5em"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-29"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconCloud>
                  <glamorous(span)
                    iconStart={<IconCloud />}
                    key="prefix"
                    size="large"
                  >
                    <span
                      className="css-103"
                    >
                      $
                    </span>
                  </glamorous(span)>
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    iconStart={<IconCloud />}
                    key="control"
                    prefix="$"
                    size="large"
                    type="number"
                  >
                    <input
                      className="css-58"
                      defaultValue="000"
                      prefix="$"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          iconEnd={<IconBackspace />}
          suffix="cm"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            iconEnd={<IconBackspace />}
            size="large"
            suffix="cm"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconEnd={<IconBackspace />}
              size="large"
              suffix="cm"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    iconEnd={<IconBackspace />}
                    key="control"
                    size="large"
                    suffix="cm"
                    type="number"
                  >
                    <input
                      className="css-72"
                      defaultValue="000"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <glamorous(span)
                    iconEnd={<IconBackspace />}
                    key="suffix"
                    size="large"
                  >
                    <span
                      className="css-104"
                    >
                      cm
                    </span>
                  </glamorous(span)>
                  <IconBackspace
                    key="iconEnd"
                    size="1.5em"
                  >
                    <Icon
                      rtl={true}
                      size="1.5em"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={true}
                        size="1.5em"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-29"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconBackspace>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          iconEnd={<IconBackspace />}
          iconStart={<IconCloud />}
          prefix="$"
          suffix="cm"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            iconEnd={<IconBackspace />}
            iconStart={<IconCloud />}
            prefix="$"
            size="large"
            suffix="cm"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconEnd={<IconBackspace />}
              iconStart={<IconCloud />}
              prefix="$"
              size="large"
              suffix="cm"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <IconCloud
                    key="iconStart"
                    size="1.5em"
                  >
                    <Icon
                      rtl={false}
                      size="1.5em"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={false}
                        size="1.5em"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-29"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconCloud>
                  <glamorous(span)
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    key="prefix"
                    size="large"
                  >
                    <span
                      className="css-103"
                    >
                      $
                    </span>
                  </glamorous(span)>
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    key="control"
                    prefix="$"
                    size="large"
                    suffix="cm"
                    type="number"
                  >
                    <input
                      className="css-86"
                      defaultValue="000"
                      prefix="$"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <glamorous(span)
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    key="suffix"
                    size="large"
                  >
                    <span
                      className="css-104"
                    >
                      cm
                    </span>
                  </glamorous(span)>
                  <IconBackspace
                    key="iconEnd"
                    size="1.5em"
                  >
                    <Icon
                      rtl={true}
                      size="1.5em"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={true}
                        size="1.5em"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-29"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconBackspace>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          suffix="cm"
          type="number"
          variant="danger"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            size="large"
            suffix="cm"
            variant="danger"
          >
            <FauxControl
              className="css-30"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              size="large"
              suffix="cm"
              variant="danger"
            >
              <FauxControl
                className="css-30"
                control={[Function]}
                variant="danger"
              >
                <div
                  className="css-32"
                >
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    key="control"
                    size="large"
                    suffix="cm"
                    type="number"
                    variant="danger"
                  >
                    <input
                      className="css-43"
                      defaultValue="000"
                      size="large"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <glamorous(span)
                    key="suffix"
                    size="large"
                    variant="danger"
                  >
                    <span
                      className="css-104"
                    >
                      cm
                    </span>
                  </glamorous(span)>
                  <IconDanger
                    key="iconEnd"
                    size="1.5em"
                  >
                    <Icon
                      rtl={false}
                      size="1.5em"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={false}
                        size="1.5em"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-29"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconDanger>
                  <Underlay
                    variant="danger"
                  >
                    <div
                      className="css-57"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
        <TextInput
          defaultValue="000"
          iconEnd={<IconBackspace />}
          iconStart={<IconCloud />}
          prefix="$"
          size="small"
          suffix="cm"
          type="number"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "000",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            iconEnd={<IconBackspace />}
            iconStart={<IconCloud />}
            prefix="$"
            size="small"
            suffix="cm"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconEnd={<IconBackspace />}
              iconStart={<IconCloud />}
              prefix="$"
              size="small"
              suffix="cm"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-2"
                >
                  <IconCloud
                    key="iconStart"
                    size="medium"
                  >
                    <Icon
                      rtl={false}
                      size="medium"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={false}
                        size="medium"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-105"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconCloud>
                  <glamorous(span)
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    key="prefix"
                    size="small"
                  >
                    <span
                      className="css-106"
                    >
                      $
                    </span>
                  </glamorous(span)>
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    defaultValue="000"
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    key="control"
                    prefix="$"
                    size="small"
                    suffix="cm"
                    type="number"
                  >
                    <input
                      className="css-107"
                      defaultValue="000"
                      prefix="$"
                      size="small"
                      type="number"
                    />
                  </glamorous(glamorous(input))>
                  <glamorous(span)
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    key="suffix"
                    size="small"
                  >
                    <span
                      className="css-121"
                    >
                      cm
                    </span>
                  </glamorous(span)>
                  <IconBackspace
                    key="iconEnd"
                    size="medium"
                  >
                    <Icon
                      rtl={true}
                      size="medium"
                    >
                      <glamorous(svg)
                        aria-hidden={true}
                        role="img"
                        rtl={true}
                        size="medium"
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden={true}
                          className="css-105"
                          role="img"
                          viewBox="0 0 24 24"
                        >
                          <g>
                            <path
                              d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                            />
                          </g>
                        </svg>
                      </glamorous(svg)>
                    </Icon>
                  </IconBackspace>
                  <Underlay>
                    <div
                      className="css-27"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
      </div>
    </glamorous(div)>
    <div
      dir="rtl"
    >
      <h3>
        RTL
      </h3>
      <ThemeProvider>
        <ThemeProvider>
          <glamorous(div)>
            <div
              className="css-28"
            >
              <TextInput
                defaultValue="000"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="000"
                          key="control"
                          size="large"
                          type="text"
                        >
                          <input
                            className="css-13"
                            defaultValue="000"
                            size="large"
                            type="text"
                          />
                        </glamorous(glamorous(input))>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                prefix="$"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  prefix="$"
                  size="large"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    prefix="$"
                    size="large"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <glamorous(span)
                          key="prefix"
                          size="large"
                        >
                          <span
                            className="css-101"
                          >
                            $
                          </span>
                        </glamorous(span)>
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          key="control"
                          prefix="$"
                          size="large"
                          type="number"
                        >
                          <input
                            className="css-72"
                            defaultValue="000"
                            prefix="$"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                suffix="cm"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  size="large"
                  suffix="cm"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    size="large"
                    suffix="cm"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          key="control"
                          size="large"
                          suffix="cm"
                          type="number"
                        >
                          <input
                            className="css-58"
                            defaultValue="000"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <glamorous(span)
                          key="suffix"
                          size="large"
                        >
                          <span
                            className="css-100"
                          >
                            cm
                          </span>
                        </glamorous(span)>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                prefix="$"
                suffix="cm"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  prefix="$"
                  size="large"
                  suffix="cm"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    prefix="$"
                    size="large"
                    suffix="cm"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <glamorous(span)
                          key="prefix"
                          size="large"
                        >
                          <span
                            className="css-101"
                          >
                            $
                          </span>
                        </glamorous(span)>
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          key="control"
                          prefix="$"
                          size="large"
                          suffix="cm"
                          type="number"
                        >
                          <input
                            className="css-86"
                            defaultValue="000"
                            prefix="$"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <glamorous(span)
                          key="suffix"
                          size="large"
                        >
                          <span
                            className="css-100"
                          >
                            cm
                          </span>
                        </glamorous(span)>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                iconStart={<IconCloud />}
                prefix="$"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="large"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconStart={<IconCloud />}
                    prefix="$"
                    size="large"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <IconCloud
                          key="iconStart"
                          size="1.5em"
                        >
                          <Icon
                            rtl={false}
                            size="1.5em"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={false}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-29"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconCloud>
                        <glamorous(span)
                          iconStart={<IconCloud />}
                          key="prefix"
                          size="large"
                        >
                          <span
                            className="css-104"
                          >
                            $
                          </span>
                        </glamorous(span)>
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          iconStart={<IconCloud />}
                          key="control"
                          prefix="$"
                          size="large"
                          type="number"
                        >
                          <input
                            className="css-72"
                            defaultValue="000"
                            prefix="$"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                iconEnd={<IconBackspace />}
                suffix="cm"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  size="large"
                  suffix="cm"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    size="large"
                    suffix="cm"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          iconEnd={<IconBackspace />}
                          key="control"
                          size="large"
                          suffix="cm"
                          type="number"
                        >
                          <input
                            className="css-58"
                            defaultValue="000"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <glamorous(span)
                          iconEnd={<IconBackspace />}
                          key="suffix"
                          size="large"
                        >
                          <span
                            className="css-103"
                          >
                            cm
                          </span>
                        </glamorous(span)>
                        <IconBackspace
                          key="iconEnd"
                          size="1.5em"
                        >
                          <Icon
                            rtl={true}
                            size="1.5em"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={true}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-102"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconBackspace>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                iconEnd={<IconBackspace />}
                iconStart={<IconCloud />}
                prefix="$"
                suffix="cm"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="large"
                  suffix="cm"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    prefix="$"
                    size="large"
                    suffix="cm"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <IconCloud
                          key="iconStart"
                          size="1.5em"
                        >
                          <Icon
                            rtl={false}
                            size="1.5em"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={false}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-29"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconCloud>
                        <glamorous(span)
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          key="prefix"
                          size="large"
                        >
                          <span
                            className="css-104"
                          >
                            $
                          </span>
                        </glamorous(span)>
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          key="control"
                          prefix="$"
                          size="large"
                          suffix="cm"
                          type="number"
                        >
                          <input
                            className="css-86"
                            defaultValue="000"
                            prefix="$"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <glamorous(span)
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          key="suffix"
                          size="large"
                        >
                          <span
                            className="css-103"
                          >
                            cm
                          </span>
                        </glamorous(span)>
                        <IconBackspace
                          key="iconEnd"
                          size="1.5em"
                        >
                          <Icon
                            rtl={true}
                            size="1.5em"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={true}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-102"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconBackspace>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                suffix="cm"
                type="number"
                variant="danger"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  size="large"
                  suffix="cm"
                  variant="danger"
                >
                  <FauxControl
                    className="css-30"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    size="large"
                    suffix="cm"
                    variant="danger"
                  >
                    <FauxControl
                      className="css-30"
                      control={[Function]}
                      variant="danger"
                    >
                      <div
                        className="css-32"
                      >
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          key="control"
                          size="large"
                          suffix="cm"
                          type="number"
                          variant="danger"
                        >
                          <input
                            className="css-122"
                            defaultValue="000"
                            size="large"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <glamorous(span)
                          key="suffix"
                          size="large"
                          variant="danger"
                        >
                          <span
                            className="css-103"
                          >
                            cm
                          </span>
                        </glamorous(span)>
                        <IconDanger
                          key="iconEnd"
                          size="1.5em"
                        >
                          <Icon
                            rtl={false}
                            size="1.5em"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={false}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-29"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconDanger>
                        <Underlay
                          variant="danger"
                        >
                          <div
                            className="css-57"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
              <TextInput
                defaultValue="000"
                iconEnd={<IconBackspace />}
                iconStart={<IconCloud />}
                prefix="$"
                size="small"
                suffix="cm"
                type="number"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="small"
                  suffix="cm"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    prefix="$"
                    size="small"
                    suffix="cm"
                  >
                    <FauxControl
                      className="css-0"
                      control={[Function]}
                    >
                      <div
                        className="css-2"
                      >
                        <IconCloud
                          key="iconStart"
                          size="medium"
                        >
                          <Icon
                            rtl={false}
                            size="medium"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={false}
                              size="medium"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-105"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconCloud>
                        <glamorous(span)
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          key="prefix"
                          size="small"
                        >
                          <span
                            className="css-121"
                          >
                            $
                          </span>
                        </glamorous(span)>
                        <glamorous(glamorous(input))
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "000",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "number",
                            }
                          }
                          defaultValue="000"
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          key="control"
                          prefix="$"
                          size="small"
                          suffix="cm"
                          type="number"
                        >
                          <input
                            className="css-107"
                            defaultValue="000"
                            prefix="$"
                            size="small"
                            type="number"
                          />
                        </glamorous(glamorous(input))>
                        <glamorous(span)
                          iconEnd={<IconBackspace />}
                          iconStart={<IconCloud />}
                          key="suffix"
                          size="small"
                        >
                          <span
                            className="css-106"
                          >
                            cm
                          </span>
                        </glamorous(span)>
                        <IconBackspace
                          key="iconEnd"
                          size="medium"
                        >
                          <Icon
                            rtl={true}
                            size="medium"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={true}
                              size="medium"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-136"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconBackspace>
                        <Underlay>
                          <div
                            className="css-27"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
            </div>
          </glamorous(div)>
        </ThemeProvider>
      </ThemeProvider>
    </div>
  </div>
</KitchenSink>
`;

exports[`TextInput demo examples next-to-button 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-28,
[data-css-28] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-28::placeholder,
[data-css-28]::placeholder,
.css-28[data-simulate-placeholder],
[data-css-28][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-28::-ms-input-placeholder,
[data-css-28]::-ms-input-placeholder,
.css-28[data-simulate-msinputplaceholder],
[data-css-28][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-28:-ms-input-placeholder,
[data-css-28]:-ms-input-placeholder,
.css-28[data-simulate-msinputplaceholder],
[data-css-28][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-28::-ms-clear,
[data-css-28]::-ms-clear,
.css-28[data-simulate-msclear],
[data-css-28][data-simulate-msclear] {
  display: none;
}

.css-28:focus ~ div:last-child,
[data-css-28]:focus ~ div:last-child,
.css-28[data-simulate-focus] ~ div:last-child,
[data-css-28][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-42,
[data-css-42] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-42::placeholder,
[data-css-42]::placeholder,
.css-42[data-simulate-placeholder],
[data-css-42][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-42::-ms-input-placeholder,
[data-css-42]::-ms-input-placeholder,
.css-42[data-simulate-msinputplaceholder],
[data-css-42][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-42:-ms-input-placeholder,
[data-css-42]:-ms-input-placeholder,
.css-42[data-simulate-msinputplaceholder],
[data-css-42][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-42::-ms-clear,
[data-css-42]::-ms-clear,
.css-42[data-simulate-msclear],
[data-css-42][data-simulate-msclear] {
  display: none;
}

.css-42:focus ~ div:last-child,
[data-css-42]:focus ~ div:last-child,
.css-42[data-simulate-focus] ~ div:last-child,
[data-css-42][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-56,
[data-css-56] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-56::placeholder,
[data-css-56]::placeholder,
.css-56[data-simulate-placeholder],
[data-css-56][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-56::-ms-input-placeholder,
[data-css-56]::-ms-input-placeholder,
.css-56[data-simulate-msinputplaceholder],
[data-css-56][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-56:-ms-input-placeholder,
[data-css-56]:-ms-input-placeholder,
.css-56[data-simulate-msinputplaceholder],
[data-css-56][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-56::-ms-clear,
[data-css-56]::-ms-clear,
.css-56[data-simulate-msclear],
[data-css-56][data-simulate-msclear] {
  display: none;
}

.css-56:focus ~ div:last-child,
[data-css-56]:focus ~ div:last-child,
.css-56[data-simulate-focus] ~ div:last-child,
[data-css-56][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-70,
[data-css-70] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-70 *,
[data-css-70] *,
.css-70 *::before,
[data-css-70] *::before,
.css-70 *::after,
[data-css-70] *::after {
  box-sizing: inherit;
}

.css-70:focus,
[data-css-70]:focus,
.css-70[data-simulate-focus],
[data-css-70][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-70:hover,
[data-css-70]:hover,
.css-70[data-simulate-hover],
[data-css-70][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-70:active,
[data-css-70]:active,
.css-70[data-simulate-active],
[data-css-70][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-70::-moz-focus-inner,
[data-css-70]::-moz-focus-inner,
.css-70[data-simulate-mozfocusinner],
[data-css-70][data-simulate-mozfocusinner] {
  border: 0;
}

.css-70 [role="img"],
[data-css-70] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-70 [role="img"]:first-child,
[data-css-70] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-70 [role="img"]:last-child,
[data-css-70] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-70 [role="img"]:only-child,
[data-css-70] [role="img"]:only-child {
  margin: 0;
}

.css-84,
[data-css-84] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-85,
[data-css-85] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-85:first-child,
[data-css-85]:first-child,
.css-85[data-simulate-firstchild],
[data-css-85][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-85:last-child,
[data-css-85]:last-child,
.css-85[data-simulate-lastchild],
[data-css-85][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

.css-92 > *:not(:last-child),
[data-css-92] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-92 > *,
[data-css-92] > * {
  align-items: flex-end;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
}

.css-92 > * > div,
[data-css-92] > * > div {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.css-93,
[data-css-93] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-93 *,
[data-css-93] *,
.css-93 *::before,
[data-css-93] *::before,
.css-93 *::after,
[data-css-93] *::after {
  box-sizing: inherit;
}

.css-93:focus,
[data-css-93]:focus,
.css-93[data-simulate-focus],
[data-css-93][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-93:hover,
[data-css-93]:hover,
.css-93[data-simulate-hover],
[data-css-93][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-93:active,
[data-css-93]:active,
.css-93[data-simulate-active],
[data-css-93][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-93::-moz-focus-inner,
[data-css-93]::-moz-focus-inner,
.css-93[data-simulate-mozfocusinner],
[data-css-93][data-simulate-mozfocusinner] {
  border: 0;
}

.css-93 [role="img"],
[data-css-93] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-93 [role="img"]:first-child,
[data-css-93] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-93 [role="img"]:last-child,
[data-css-93] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-93 [role="img"]:only-child,
[data-css-93] [role="img"]:only-child {
  margin: 0;
}

.css-107,
[data-css-107] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.css-108,
[data-css-108] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  min-width: 2em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-108 *,
[data-css-108] *,
.css-108 *::before,
[data-css-108] *::before,
.css-108 *::after,
[data-css-108] *::after {
  box-sizing: inherit;
}

.css-108:focus,
[data-css-108]:focus,
.css-108[data-simulate-focus],
[data-css-108][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-108:hover,
[data-css-108]:hover,
.css-108[data-simulate-hover],
[data-css-108][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-108:active,
[data-css-108]:active,
.css-108[data-simulate-active],
[data-css-108][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-108::-moz-focus-inner,
[data-css-108]::-moz-focus-inner,
.css-108[data-simulate-mozfocusinner],
[data-css-108][data-simulate-mozfocusinner] {
  border: 0;
}

.css-108 [role="img"],
[data-css-108] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-108 [role="img"]:first-child,
[data-css-108] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-108 [role="img"]:last-child,
[data-css-108] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-108 [role="img"]:only-child,
[data-css-108] [role="img"]:only-child {
  margin: 0;
}

.css-122,
[data-css-122] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.css-123,
[data-css-123] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  min-width: 3.25em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-123 *,
[data-css-123] *,
.css-123 *::before,
[data-css-123] *::before,
.css-123 *::after,
[data-css-123] *::after {
  box-sizing: inherit;
}

.css-123:focus,
[data-css-123]:focus,
.css-123[data-simulate-focus],
[data-css-123][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-123:hover,
[data-css-123]:hover,
.css-123[data-simulate-hover],
[data-css-123][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-123:active,
[data-css-123]:active,
.css-123[data-simulate-active],
[data-css-123][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-123::-moz-focus-inner,
[data-css-123]::-moz-focus-inner,
.css-123[data-simulate-mozfocusinner],
[data-css-123][data-simulate-mozfocusinner] {
  border: 0;
}

.css-123 [role="img"],
[data-css-123] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-123 [role="img"]:first-child,
[data-css-123] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-123 [role="img"]:last-child,
[data-css-123] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-123 [role="img"]:only-child,
[data-css-123] [role="img"]:only-child {
  margin: 0;
}

.css-137,
[data-css-137] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.css-137:first-child,
[data-css-137]:first-child,
.css-137[data-simulate-firstchild],
[data-css-137][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-137:last-child,
[data-css-137]:last-child,
.css-137[data-simulate-lastchild],
[data-css-137][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<glamorous(glamorous(div))>
  <div
    className="css-92"
  >
    <div>
      <TextInput
        defaultValue="Small"
        size="small"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Small",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Small",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="small"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Small"
                  key="control"
                  size="small"
                  type="text"
                >
                  <input
                    className="css-28"
                    defaultValue="Small"
                    size="small"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-27"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="small"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="small"
          text="Small"
          type="button"
          variant="regular"
        >
          <button
            className="css-93"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-84"
              >
                <glamorous(span)
                  size="small"
                >
                  <span
                    className="css-107"
                  >
                    Small
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
    <div>
      <TextInput
        defaultValue="Medium"
        size="medium"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Medium",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Medium",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="medium"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Medium"
                  key="control"
                  size="medium"
                  type="text"
                >
                  <input
                    className="css-42"
                    defaultValue="Medium"
                    size="medium"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-27"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="medium"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="medium"
          text="Medium"
          type="button"
          variant="regular"
        >
          <button
            className="css-108"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-84"
              >
                <glamorous(span)
                  size="medium"
                >
                  <span
                    className="css-122"
                  >
                    Medium
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
    <div>
      <TextInput
        defaultValue="Large"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Large",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Large",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Large"
                  key="control"
                  size="large"
                  type="text"
                >
                  <input
                    className="css-13"
                    defaultValue="Large"
                    size="large"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-27"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="large"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="large"
          text="Large"
          type="button"
          variant="regular"
        >
          <button
            className="css-70"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-84"
              >
                <glamorous(span)
                  size="large"
                >
                  <span
                    className="css-85"
                  >
                    Large
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
    <div>
      <TextInput
        defaultValue="Jumbo"
        size="jumbo"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="jumbo"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Jumbo"
                  key="control"
                  size="jumbo"
                  type="text"
                >
                  <input
                    className="css-56"
                    defaultValue="Jumbo"
                    size="jumbo"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-27"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="jumbo"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="jumbo"
          text="Jumbo"
          type="button"
          variant="regular"
        >
          <button
            className="css-123"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-84"
              >
                <glamorous(span)
                  size="jumbo"
                >
                  <span
                    className="css-137"
                  >
                    Jumbo
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
  </div>
</glamorous(glamorous(div))>
`;

exports[`TextInput demo examples placeholder 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  placeholder="12345-123"
>
  <TextInput
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "disabled": undefined,
        "placeholder": "12345-123",
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "disabled": undefined,
          "placeholder": "12345-123",
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-2"
        >
          <glamorous(glamorous(input))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "placeholder": "12345-123",
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            key="control"
            placeholder="12345-123"
            size="large"
            type="text"
          >
            <input
              className="css-13"
              placeholder="12345-123"
              size="large"
              type="text"
            />
          </glamorous(glamorous(input))>
          <Underlay>
            <div
              className="css-27"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextInput>
</TextInput>
`;

exports[`TextInput demo examples prefix-and-suffix 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-14 > *:not(:last-child),
[data-css-14] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-29,
[data-css-29] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-29::placeholder,
[data-css-29]::placeholder,
.css-29[data-simulate-placeholder],
[data-css-29][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-29::-ms-input-placeholder,
[data-css-29]::-ms-input-placeholder,
.css-29[data-simulate-msinputplaceholder],
[data-css-29][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-29:-ms-input-placeholder,
[data-css-29]:-ms-input-placeholder,
.css-29[data-simulate-msinputplaceholder],
[data-css-29][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-29::-ms-clear,
[data-css-29]::-ms-clear,
.css-29[data-simulate-msclear],
[data-css-29][data-simulate-msclear] {
  display: none;
}

.css-29:focus ~ div:last-child,
[data-css-29]:focus ~ div:last-child,
.css-29[data-simulate-focus] ~ div:last-child,
[data-css-29][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-43,
[data-css-43] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

.css-44,
[data-css-44] {
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 1.1428571428571428em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
  -webkit-flex: 0 0 auto;
}

<Component>
  <glamorous(div)>
    <div
      className="css-14"
    >
      <TextInput
        prefix="$"
        type="number"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "number",
            }
          }
          prefix="$"
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            prefix="$"
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(span)
                  key="prefix"
                  size="large"
                >
                  <span
                    className="css-43"
                  >
                    $
                  </span>
                </glamorous(span)>
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  key="control"
                  prefix="$"
                  size="large"
                  type="number"
                >
                  <input
                    className="css-15"
                    prefix="$"
                    size="large"
                    type="number"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-13"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <TextInput
        suffix="cm"
        type="number"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "number",
            }
          }
          size="large"
          suffix="cm"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            size="large"
            suffix="cm"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-2"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  key="control"
                  size="large"
                  suffix="cm"
                  type="number"
                >
                  <input
                    className="css-29"
                    size="large"
                    type="number"
                  />
                </glamorous(glamorous(input))>
                <glamorous(span)
                  key="suffix"
                  size="large"
                >
                  <span
                    className="css-44"
                  >
                    cm
                  </span>
                </glamorous(span)>
                <Underlay>
                  <div
                    className="css-13"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
    </div>
  </glamorous(div)>
</Component>
`;

exports[`TextInput demo examples read-only 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-14,
[data-css-14] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-14::placeholder,
[data-css-14]::placeholder,
.css-14[data-simulate-placeholder],
[data-css-14][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-14::-ms-input-placeholder,
[data-css-14]::-ms-input-placeholder,
.css-14[data-simulate-msinputplaceholder],
[data-css-14][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-14:-ms-input-placeholder,
[data-css-14]:-ms-input-placeholder,
.css-14[data-simulate-msinputplaceholder],
[data-css-14][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-14::-ms-clear,
[data-css-14]::-ms-clear,
.css-14[data-simulate-msclear],
[data-css-14][data-simulate-msclear] {
  display: none;
}

.css-14:focus ~ div:last-child,
[data-css-14]:focus ~ div:last-child,
.css-14[data-simulate-focus] ~ div:last-child,
[data-css-14][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<TextInput
  defaultValue="Hello World"
  readOnly={true}
>
  <TextInput
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "defaultValue": "Hello World",
        "disabled": undefined,
        "readOnly": true,
        "required": undefined,
        "type": "text",
      }
    }
    readOnly={true}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "defaultValue": "Hello World",
          "disabled": undefined,
          "readOnly": true,
          "required": undefined,
          "type": "text",
        }
      }
      readOnly={true}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-2"
        >
          <glamorous(glamorous(input))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Hello World",
                "disabled": undefined,
                "readOnly": true,
                "required": undefined,
                "type": "text",
              }
            }
            defaultValue="Hello World"
            key="control"
            readOnly={true}
            size="large"
            type="text"
          >
            <input
              className="css-14"
              defaultValue="Hello World"
              readOnly={true}
              size="large"
              type="text"
            />
          </glamorous(glamorous(input))>
          <Underlay
            readOnly={true}
          >
            <div
              className="css-13"
              readOnly={true}
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextInput>
</TextInput>
`;

exports[`TextInput demo examples required 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  required={true}
>
  <TextInput
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": true,
        "controlRef": undefined,
        "disabled": undefined,
        "readOnly": undefined,
        "required": true,
        "type": "text",
      }
    }
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": true,
          "controlRef": undefined,
          "disabled": undefined,
          "readOnly": undefined,
          "required": true,
          "type": "text",
        }
      }
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-2"
        >
          <glamorous(glamorous(input))
            aria-required={true}
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": true,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": true,
                "type": "text",
              }
            }
            key="control"
            required={true}
            size="large"
            type="text"
          >
            <input
              aria-required={true}
              className="css-13"
              required={true}
              size="large"
              type="text"
            />
          </glamorous(glamorous(input))>
          <Underlay>
            <div
              className="css-27"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextInput>
</TextInput>
`;

exports[`TextInput demo examples rtl 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-14 > *:not(:last-child),
[data-css-14] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-15,
[data-css-15] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-15 [role="img"],
[data-css-15] [role="img"] {
  color: #2a854e;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-15 [role="img"]:last-of-type,
[data-css-15] [role="img"]:last-of-type {
  color: #2a854e;
}

.css-17,
[data-css-17] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-17 *,
[data-css-17] *,
.css-17 *::before,
[data-css-17] *::before,
.css-17 *::after,
[data-css-17] *::after {
  box-sizing: inherit;
}

.css-17:hover > div:last-child,
[data-css-17]:hover > div:last-child,
.css-17[data-simulate-hover] > div:last-child,
[data-css-17][data-simulate-hover] > div:last-child {
  border-color: #3ba164;
}

.css-17:focus > div:last-child,
[data-css-17]:focus > div:last-child,
.css-17[data-simulate-focus] > div:last-child,
[data-css-17][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-17:active > div:last-child,
[data-css-17]:active > div:last-child,
.css-17[data-simulate-active] > div:last-child,
[data-css-17][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-17 [role="img"],
[data-css-17] [role="img"] {
  color: #2a854e;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-17 [role="img"]:last-of-type,
[data-css-17] [role="img"]:last-of-type {
  color: #2a854e;
}

.css-28,
[data-css-28] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-30::placeholder,
[data-css-30]::placeholder,
.css-30[data-simulate-placeholder],
[data-css-30][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-30::-ms-input-placeholder,
[data-css-30]::-ms-input-placeholder,
.css-30[data-simulate-msinputplaceholder],
[data-css-30][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-30:-ms-input-placeholder,
[data-css-30]:-ms-input-placeholder,
.css-30[data-simulate-msinputplaceholder],
[data-css-30][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-30::-ms-clear,
[data-css-30]::-ms-clear,
.css-30[data-simulate-msclear],
[data-css-30][data-simulate-msclear] {
  display: none;
}

.css-30:focus ~ div:last-child,
[data-css-30]:focus ~ div:last-child,
.css-30[data-simulate-focus] ~ div:last-child,
[data-css-30][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-44,
[data-css-44] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-44::placeholder,
[data-css-44]::placeholder,
.css-44[data-simulate-placeholder],
[data-css-44][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-44::-ms-input-placeholder,
[data-css-44]::-ms-input-placeholder,
.css-44[data-simulate-msinputplaceholder],
[data-css-44][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-44:-ms-input-placeholder,
[data-css-44]:-ms-input-placeholder,
.css-44[data-simulate-msinputplaceholder],
[data-css-44][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-44::-ms-clear,
[data-css-44]::-ms-clear,
.css-44[data-simulate-msclear],
[data-css-44][data-simulate-msclear] {
  display: none;
}

.css-44:focus ~ div:last-child,
[data-css-44]:focus ~ div:last-child,
.css-44[data-simulate-focus] ~ div:last-child,
[data-css-44][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-58,
[data-css-58] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  transform: scaleX(-1);
  width: 1.5em;
  -webkit-transform: scaleX(-1);
}

.css-59,
[data-css-59] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-59::placeholder,
[data-css-59]::placeholder,
.css-59[data-simulate-placeholder],
[data-css-59][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-59::-ms-input-placeholder,
[data-css-59]::-ms-input-placeholder,
.css-59[data-simulate-msinputplaceholder],
[data-css-59][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-59:-ms-input-placeholder,
[data-css-59]:-ms-input-placeholder,
.css-59[data-simulate-msinputplaceholder],
[data-css-59][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-59::-ms-clear,
[data-css-59]::-ms-clear,
.css-59[data-simulate-msclear],
[data-css-59][data-simulate-msclear] {
  display: none;
}

.css-59:focus ~ div:last-child,
[data-css-59]:focus ~ div:last-child,
.css-59[data-simulate-focus] ~ div:last-child,
[data-css-59][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <glamorous(div)>
        <div
          className="css-14"
        >
          <TextInput
            defaultValue="مرحبا بالعالم"
            iconStart={<IconBackspace />}
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "مرحبا بالعالم",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              iconStart={<IconBackspace />}
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "مرحبا بالعالم",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconStart={<IconBackspace />}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-2"
                  >
                    <IconBackspace
                      key="iconStart"
                      size="1.5em"
                    >
                      <Icon
                        rtl={true}
                        size="1.5em"
                      >
                        <glamorous(svg)
                          aria-hidden={true}
                          role="img"
                          rtl={true}
                          size="1.5em"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden={true}
                            className="css-58"
                            role="img"
                            viewBox="0 0 24 24"
                          >
                            <g>
                              <path
                                d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                              />
                            </g>
                          </svg>
                        </glamorous(svg)>
                      </Icon>
                    </IconBackspace>
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "مرحبا بالعالم",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="مرحبا بالعالم"
                      iconStart={<IconBackspace />}
                      key="control"
                      size="large"
                      type="text"
                    >
                      <input
                        className="css-44"
                        defaultValue="مرحبا بالعالم"
                        size="large"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-13"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <TextInput
            defaultValue="مرحبا بالعالم"
            iconEnd={<IconBackspace />}
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "مرحبا بالعالم",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              iconEnd={<IconBackspace />}
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "مرحبا بالعالم",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconEnd={<IconBackspace />}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                >
                  <div
                    className="css-2"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "مرحبا بالعالم",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="مرحبا بالعالم"
                      iconEnd={<IconBackspace />}
                      key="control"
                      size="large"
                      type="text"
                    >
                      <input
                        className="css-30"
                        defaultValue="مرحبا بالعالم"
                        size="large"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <IconBackspace
                      key="iconEnd"
                      size="1.5em"
                    >
                      <Icon
                        rtl={true}
                        size="1.5em"
                      >
                        <glamorous(svg)
                          aria-hidden={true}
                          role="img"
                          rtl={true}
                          size="1.5em"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden={true}
                            className="css-58"
                            role="img"
                            viewBox="0 0 24 24"
                          >
                            <g>
                              <path
                                d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                              />
                            </g>
                          </svg>
                        </glamorous(svg)>
                      </Icon>
                    </IconBackspace>
                    <Underlay>
                      <div
                        className="css-13"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <TextInput
            defaultValue="مرحبا بالعالم"
            variant="success"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "مرحبا بالعالم",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
              variant="success"
            >
              <FauxControl
                className="css-15"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "مرحبا بالعالم",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
                variant="success"
              >
                <FauxControl
                  className="css-15"
                  control={[Function]}
                  variant="success"
                >
                  <div
                    className="css-17"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "مرحبا بالعالم",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="مرحبا بالعالم"
                      key="control"
                      size="large"
                      type="text"
                      variant="success"
                    >
                      <input
                        className="css-59"
                        defaultValue="مرحبا بالعالم"
                        size="large"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <IconSuccess
                      key="iconEnd"
                      size="1.5em"
                    >
                      <Icon
                        rtl={false}
                        size="1.5em"
                      >
                        <glamorous(svg)
                          aria-hidden={true}
                          role="img"
                          rtl={false}
                          size="1.5em"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden={true}
                            className="css-28"
                            role="img"
                            viewBox="0 0 24 24"
                          >
                            <g>
                              <path
                                d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                              />
                            </g>
                          </svg>
                        </glamorous(svg)>
                      </Icon>
                    </IconSuccess>
                    <Underlay
                      variant="success"
                    >
                      <div
                        className="css-29"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
        </div>
      </glamorous(div)>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`TextInput demo examples size 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-28 > *:not(:last-child),
[data-css-28] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-29,
[data-css-29] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-29::placeholder,
[data-css-29]::placeholder,
.css-29[data-simulate-placeholder],
[data-css-29][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-29::-ms-input-placeholder,
[data-css-29]::-ms-input-placeholder,
.css-29[data-simulate-msinputplaceholder],
[data-css-29][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-29:-ms-input-placeholder,
[data-css-29]:-ms-input-placeholder,
.css-29[data-simulate-msinputplaceholder],
[data-css-29][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-29::-ms-clear,
[data-css-29]::-ms-clear,
.css-29[data-simulate-msclear],
[data-css-29][data-simulate-msclear] {
  display: none;
}

.css-29:focus ~ div:last-child,
[data-css-29]:focus ~ div:last-child,
.css-29[data-simulate-focus] ~ div:last-child,
[data-css-29][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-43,
[data-css-43] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-43::placeholder,
[data-css-43]::placeholder,
.css-43[data-simulate-placeholder],
[data-css-43][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43::-ms-input-placeholder,
[data-css-43]::-ms-input-placeholder,
.css-43[data-simulate-msinputplaceholder],
[data-css-43][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43:-ms-input-placeholder,
[data-css-43]:-ms-input-placeholder,
.css-43[data-simulate-msinputplaceholder],
[data-css-43][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43::-ms-clear,
[data-css-43]::-ms-clear,
.css-43[data-simulate-msclear],
[data-css-43][data-simulate-msclear] {
  display: none;
}

.css-43:focus ~ div:last-child,
[data-css-43]:focus ~ div:last-child,
.css-43[data-simulate-focus] ~ div:last-child,
[data-css-43][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-57,
[data-css-57] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-57::placeholder,
[data-css-57]::placeholder,
.css-57[data-simulate-placeholder],
[data-css-57][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-57::-ms-input-placeholder,
[data-css-57]::-ms-input-placeholder,
.css-57[data-simulate-msinputplaceholder],
[data-css-57][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-57:-ms-input-placeholder,
[data-css-57]:-ms-input-placeholder,
.css-57[data-simulate-msinputplaceholder],
[data-css-57][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-57::-ms-clear,
[data-css-57]::-ms-clear,
.css-57[data-simulate-msclear],
[data-css-57][data-simulate-msclear] {
  display: none;
}

.css-57:focus ~ div:last-child,
[data-css-57]:focus ~ div:last-child,
.css-57[data-simulate-focus] ~ div:last-child,
[data-css-57][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<glamorous(div)>
  <div
    className="css-28"
  >
    <TextInput
      defaultValue="Small"
      size="small"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Small",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="small"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Small",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-2"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Small"
                key="control"
                size="small"
                type="text"
              >
                <input
                  className="css-29"
                  defaultValue="Small"
                  size="small"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <Underlay>
                <div
                  className="css-27"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
    <TextInput
      defaultValue="Medium"
      size="medium"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Medium",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="medium"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Medium",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-2"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Medium"
                key="control"
                size="medium"
                type="text"
              >
                <input
                  className="css-43"
                  defaultValue="Medium"
                  size="medium"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <Underlay>
                <div
                  className="css-27"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
    <TextInput
      defaultValue="Large"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Large",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Large",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-2"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Large"
                key="control"
                size="large"
                type="text"
              >
                <input
                  className="css-13"
                  defaultValue="Large"
                  size="large"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <Underlay>
                <div
                  className="css-27"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
    <TextInput
      defaultValue="Jumbo"
      size="jumbo"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Jumbo",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="jumbo"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-2"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Jumbo"
                key="control"
                size="jumbo"
                type="text"
              >
                <input
                  className="css-57"
                  defaultValue="Jumbo"
                  size="jumbo"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <Underlay>
                <div
                  className="css-27"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
  </div>
</glamorous(div)>
`;

exports[`TextInput demo examples uncontrolled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-0 [role="img"],
[data-css-0] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-0 [role="img"]:last-of-type,
[data-css-0] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  defaultValue="Hello World"
>
  <TextInput
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "defaultValue": "Hello World",
        "disabled": undefined,
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "defaultValue": "Hello World",
          "disabled": undefined,
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-2"
        >
          <glamorous(glamorous(input))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Hello World",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            defaultValue="Hello World"
            key="control"
            size="large"
            type="text"
          >
            <input
              className="css-13"
              defaultValue="Hello World"
              size="large"
              type="text"
            />
          </glamorous(glamorous(input))>
          <Underlay>
            <div
              className="css-27"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextInput>
</TextInput>
`;

exports[`TextInput demo examples variants 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 [role="img"],
[data-css-1] [role="img"] {
  color: #2a854e;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-1 [role="img"]:last-of-type,
[data-css-1] [role="img"]:last-of-type {
  color: #2a854e;
}

.css-3,
[data-css-3] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-3 *,
[data-css-3] *,
.css-3 *::before,
[data-css-3] *::before,
.css-3 *::after,
[data-css-3] *::after {
  box-sizing: inherit;
}

.css-3:hover > div:last-child,
[data-css-3]:hover > div:last-child,
.css-3[data-simulate-hover] > div:last-child,
[data-css-3][data-simulate-hover] > div:last-child {
  border-color: #3ba164;
}

.css-3:focus > div:last-child,
[data-css-3]:focus > div:last-child,
.css-3[data-simulate-focus] > div:last-child,
[data-css-3][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-3:active > div:last-child,
[data-css-3]:active > div:last-child,
.css-3[data-simulate-active] > div:last-child,
[data-css-3][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-3 [role="img"],
[data-css-3] [role="img"] {
  color: #2a854e;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-3 [role="img"]:last-of-type,
[data-css-3] [role="img"]:last-of-type {
  color: #2a854e;
}

.css-14,
[data-css-14] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-14::placeholder,
[data-css-14]::placeholder,
.css-14[data-simulate-placeholder],
[data-css-14][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-14::-ms-input-placeholder,
[data-css-14]::-ms-input-placeholder,
.css-14[data-simulate-msinputplaceholder],
[data-css-14][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-14:-ms-input-placeholder,
[data-css-14]:-ms-input-placeholder,
.css-14[data-simulate-msinputplaceholder],
[data-css-14][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-14::-ms-clear,
[data-css-14]::-ms-clear,
.css-14[data-simulate-msclear],
[data-css-14][data-simulate-msclear] {
  display: none;
}

.css-14:focus ~ div:last-child,
[data-css-14]:focus ~ div:last-child,
.css-14[data-simulate-focus] ~ div:last-child,
[data-css-14][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-28,
[data-css-28] {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-30 [role="img"],
[data-css-30] [role="img"] {
  color: #ad5f00;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-30 [role="img"]:last-of-type,
[data-css-30] [role="img"]:last-of-type {
  color: #ad5f00;
}

.css-32,
[data-css-32] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-32 *,
[data-css-32] *,
.css-32 *::before,
[data-css-32] *::before,
.css-32 *::after,
[data-css-32] *::after {
  box-sizing: inherit;
}

.css-32:hover > div:last-child,
[data-css-32]:hover > div:last-child,
.css-32[data-simulate-hover] > div:last-child,
[data-css-32][data-simulate-hover] > div:last-child {
  border-color: #cf7911;
}

.css-32:focus > div:last-child,
[data-css-32]:focus > div:last-child,
.css-32[data-simulate-focus] > div:last-child,
[data-css-32][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #8a4d03;
}

.css-32:active > div:last-child,
[data-css-32]:active > div:last-child,
.css-32[data-simulate-active] > div:last-child,
[data-css-32][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #8a4d03;
}

.css-32 [role="img"],
[data-css-32] [role="img"] {
  color: #ad5f00;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-32 [role="img"]:last-of-type,
[data-css-32] [role="img"]:last-of-type {
  color: #ad5f00;
}

.css-43,
[data-css-43] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-43::placeholder,
[data-css-43]::placeholder,
.css-43[data-simulate-placeholder],
[data-css-43][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43::-ms-input-placeholder,
[data-css-43]::-ms-input-placeholder,
.css-43[data-simulate-msinputplaceholder],
[data-css-43][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43:-ms-input-placeholder,
[data-css-43]:-ms-input-placeholder,
.css-43[data-simulate-msinputplaceholder],
[data-css-43][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-43::-ms-clear,
[data-css-43]::-ms-clear,
.css-43[data-simulate-msclear],
[data-css-43][data-simulate-msclear] {
  display: none;
}

.css-43:focus ~ div:last-child,
[data-css-43]:focus ~ div:last-child,
.css-43[data-simulate-focus] ~ div:last-child,
[data-css-43][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #8a4d03;
}

.css-57,
[data-css-57] {
  background-color: #fff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-58,
[data-css-58] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-58 [role="img"],
[data-css-58] [role="img"] {
  color: #de1b1b;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-58 [role="img"]:last-of-type,
[data-css-58] [role="img"]:last-of-type {
  color: #de1b1b;
}

.css-60,
[data-css-60] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-60 *,
[data-css-60] *,
.css-60 *::before,
[data-css-60] *::before,
.css-60 *::after,
[data-css-60] *::after {
  box-sizing: inherit;
}

.css-60:hover > div:last-child,
[data-css-60]:hover > div:last-child,
.css-60[data-simulate-hover] > div:last-child,
[data-css-60][data-simulate-hover] > div:last-child {
  border-color: #f55353;
}

.css-60:focus > div:last-child,
[data-css-60]:focus > div:last-child,
.css-60[data-simulate-focus] > div:last-child,
[data-css-60][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-60:active > div:last-child,
[data-css-60]:active > div:last-child,
.css-60[data-simulate-active] > div:last-child,
[data-css-60][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-60 [role="img"],
[data-css-60] [role="img"] {
  color: #de1b1b;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-60 [role="img"]:last-of-type,
[data-css-60] [role="img"]:last-of-type {
  color: #de1b1b;
}

.css-71,
[data-css-71] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-71::placeholder,
[data-css-71]::placeholder,
.css-71[data-simulate-placeholder],
[data-css-71][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-71::-ms-input-placeholder,
[data-css-71]::-ms-input-placeholder,
.css-71[data-simulate-msinputplaceholder],
[data-css-71][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-71:-ms-input-placeholder,
[data-css-71]:-ms-input-placeholder,
.css-71[data-simulate-msinputplaceholder],
[data-css-71][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-71::-ms-clear,
[data-css-71]::-ms-clear,
.css-71[data-simulate-msclear],
[data-css-71][data-simulate-msclear] {
  display: none;
}

.css-71:focus ~ div:last-child,
[data-css-71]:focus ~ div:last-child,
.css-71[data-simulate-focus] ~ div:last-child,
[data-css-71][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-85,
[data-css-85] {
  background-color: #fff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<glamorous(div)>
  <div
    className="css-0"
  >
    <TextInput
      defaultValue="Success"
      variant="success"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Success",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
        variant="success"
      >
        <FauxControl
          className="css-1"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Success",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
          variant="success"
        >
          <FauxControl
            className="css-1"
            control={[Function]}
            variant="success"
          >
            <div
              className="css-3"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Success",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Success"
                key="control"
                size="large"
                type="text"
                variant="success"
              >
                <input
                  className="css-14"
                  defaultValue="Success"
                  size="large"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <IconSuccess
                key="iconEnd"
                size="1.5em"
              >
                <Icon
                  rtl={false}
                  size="1.5em"
                >
                  <glamorous(svg)
                    aria-hidden={true}
                    role="img"
                    rtl={false}
                    size="1.5em"
                    viewBox="0 0 24 24"
                  >
                    <svg
                      aria-hidden={true}
                      className="css-28"
                      role="img"
                      viewBox="0 0 24 24"
                    >
                      <g>
                        <path
                          d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                        />
                      </g>
                    </svg>
                  </glamorous(svg)>
                </Icon>
              </IconSuccess>
              <Underlay
                variant="success"
              >
                <div
                  className="css-29"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
    <TextInput
      defaultValue="Warning"
      variant="warning"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Warning",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
        variant="warning"
      >
        <FauxControl
          className="css-30"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Warning",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
          variant="warning"
        >
          <FauxControl
            className="css-30"
            control={[Function]}
            variant="warning"
          >
            <div
              className="css-32"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Warning",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Warning"
                key="control"
                size="large"
                type="text"
                variant="warning"
              >
                <input
                  className="css-43"
                  defaultValue="Warning"
                  size="large"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <IconWarning
                key="iconEnd"
                size="1.5em"
              >
                <Icon
                  rtl={false}
                  size="1.5em"
                >
                  <glamorous(svg)
                    aria-hidden={true}
                    role="img"
                    rtl={false}
                    size="1.5em"
                    viewBox="0 0 24 24"
                  >
                    <svg
                      aria-hidden={true}
                      className="css-28"
                      role="img"
                      viewBox="0 0 24 24"
                    >
                      <g>
                        <path
                          d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                        />
                      </g>
                    </svg>
                  </glamorous(svg)>
                </Icon>
              </IconWarning>
              <Underlay
                variant="warning"
              >
                <div
                  className="css-57"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
    <TextInput
      defaultValue="Danger"
      variant="danger"
    >
      <TextInput
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Danger",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
        variant="danger"
      >
        <FauxControl
          className="css-58"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Danger",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
          variant="danger"
        >
          <FauxControl
            className="css-58"
            control={[Function]}
            variant="danger"
          >
            <div
              className="css-60"
            >
              <glamorous(glamorous(input))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Danger",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                defaultValue="Danger"
                key="control"
                size="large"
                type="text"
                variant="danger"
              >
                <input
                  className="css-71"
                  defaultValue="Danger"
                  size="large"
                  type="text"
                />
              </glamorous(glamorous(input))>
              <IconDanger
                key="iconEnd"
                size="1.5em"
              >
                <Icon
                  rtl={false}
                  size="1.5em"
                >
                  <glamorous(svg)
                    aria-hidden={true}
                    role="img"
                    rtl={false}
                    size="1.5em"
                    viewBox="0 0 24 24"
                  >
                    <svg
                      aria-hidden={true}
                      className="css-28"
                      role="img"
                      viewBox="0 0 24 24"
                    >
                      <g>
                        <path
                          d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                        />
                      </g>
                    </svg>
                  </glamorous(svg)>
                </Icon>
              </IconDanger>
              <Underlay
                variant="danger"
              >
                <div
                  className="css-85"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextInput>
    </TextInput>
  </div>
</glamorous(div)>
`;
