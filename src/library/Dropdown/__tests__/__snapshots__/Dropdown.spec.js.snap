// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown demo examples Snapshots: basic 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Dropdown
  data={
    Array [
      Object {
        "items": Array [
          Object {
            "text": "Light years",
          },
          Object {
            "text": "Star stuff",
          },
          Object {
            "text": "Encyclopaedia galactica",
          },
          Object {
            "text": "Cosmic ocean",
          },
        ],
      },
    ]
  }
  itemKey="text"
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-1"
    isOpen={false}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-1"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      tag="span"
      triggerRef={[Function]}
    >
      <Popover
        className="emotion-5"
        id="dropdown-1"
        tag="span"
      >
        <span
          className="emotion-5"
          id="dropdown-1"
        >
          <PopoverTrigger
            aria-describedby="dropdown-1-content"
            aria-expanded={false}
            aria-haspopup={true}
            aria-owns="dropdown-1-content"
            element="button"
            onBlur={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
            size="large"
            type="button"
            variant="regular"
          >
            <PopoverTrigger
              component="span"
            >
              <PopoverTrigger
                className="emotion-3"
                component="span"
              >
                <span
                  className="emotion-3"
                >
                  <Button
                    aria-describedby="dropdown-1-content"
                    aria-expanded={false}
                    aria-haspopup={true}
                    aria-owns="dropdown-1-content"
                    element="button"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                    type="button"
                    variant="regular"
                  >
                    <Button
                      aria-describedby="dropdown-1-content"
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-1-content"
                      element="button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                      text="Menu"
                      type="button"
                      variant="regular"
                    >
                      <button
                        aria-describedby="dropdown-1-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-1-content"
                        className="emotion-2"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        type="button"
                      >
                        <Styled(span)>
                          <span
                            className="emotion-1"
                          >
                            <Styled(span)
                              size="large"
                            >
                              <span
                                className="emotion-0"
                              >
                                Menu
                              </span>
                            </Styled(span)>
                          </span>
                        </Styled(span)>
                      </button>
                    </Button>
                  </Button>
                </span>
              </PopoverTrigger>
            </PopoverTrigger>
          </PopoverTrigger>
        </span>
      </Popover>
    </Popover>
  </Popover>
</Dropdown>
`;

exports[`Dropdown demo examples Snapshots: controlled 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<App>
  <Styled(div)>
    <div
      className="emotion-10"
    >
      <Dropdown
        data={
          Array [
            Object {
              "items": Array [
                Object {
                  "text": "Light years",
                },
                Object {
                  "text": "Star stuff",
                },
                Object {
                  "text": "Encyclopaedia galactica",
                },
                Object {
                  "text": "Cosmic ocean",
                },
              ],
            },
          ]
        }
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
      >
        <Popover
          content={[Function]}
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-19"
          isOpen={false}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
          triggerRef={[Function]}
        >
          <Popover
            content={[Function]}
            focusTriggerOnClose={true}
            hasArrow={true}
            id="dropdown-19"
            isOpen={false}
            itemKey="text"
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom-start"
            tag="span"
            triggerRef={[Function]}
          >
            <Popover
              className="emotion-5"
              id="dropdown-19"
              tag="span"
            >
              <span
                className="emotion-5"
                id="dropdown-19"
              >
                <PopoverTrigger
                  aria-describedby="dropdown-19-content"
                  aria-expanded={false}
                  aria-haspopup={true}
                  aria-owns="dropdown-19-content"
                  element="button"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  size="large"
                  type="button"
                  variant="regular"
                >
                  <PopoverTrigger
                    component="span"
                  >
                    <PopoverTrigger
                      className="emotion-3"
                      component="span"
                    >
                      <span
                        className="emotion-3"
                      >
                        <Button
                          aria-describedby="dropdown-19-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-19-content"
                          element="button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                          type="button"
                          variant="regular"
                        >
                          <Button
                            aria-describedby="dropdown-19-content"
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-owns="dropdown-19-content"
                            element="button"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                            text="Open Dropdown"
                            type="button"
                            variant="regular"
                          >
                            <button
                              aria-describedby="dropdown-19-content"
                              aria-expanded={false}
                              aria-haspopup={true}
                              aria-owns="dropdown-19-content"
                              className="emotion-2"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              type="button"
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    size="large"
                                  >
                                    <span
                                      className="emotion-0"
                                    >
                                      Open Dropdown
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </button>
                          </Button>
                        </Button>
                      </span>
                    </PopoverTrigger>
                  </PopoverTrigger>
                </PopoverTrigger>
              </span>
            </Popover>
          </Popover>
        </Popover>
      </Dropdown>
      <Button
        element="button"
        onClick={[Function]}
        size="large"
        type="button"
        variant="regular"
      >
        <Button
          element="button"
          onClick={[Function]}
          size="large"
          text="Open Dropdown"
          type="button"
          variant="regular"
        >
          <button
            className="emotion-2"
            onClick={[Function]}
            type="button"
          >
            <Styled(span)>
              <span
                className="emotion-1"
              >
                <Styled(span)
                  size="large"
                >
                  <span
                    className="emotion-0"
                  >
                    Open Dropdown
                  </span>
                </Styled(span)>
              </span>
            </Styled(span)>
          </button>
        </Button>
      </Button>
    </div>
  </Styled(div)>
</App>
`;

exports[`Dropdown demo examples Snapshots: custom-item 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "avatar": "/images/avatar.svg",
          "text": "Newton",
          "work": "Principia Mathematica",
        },
        Object {
          "avatar": "/images/avatar.svg",
          "text": "Descartes",
          "work": "La Géométrie",
        },
        Object {
          "avatar": "/images/avatar.svg",
          "text": "Euclid",
          "work": "Elements",
        },
      ]
    }
    item={[Function]}
    itemKey="text"
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-23"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-23"
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        tag="span"
        triggerRef={[Function]}
      >
        <Popover
          className="emotion-5"
          id="dropdown-23"
          tag="span"
        >
          <span
            className="emotion-5"
            id="dropdown-23"
          >
            <PopoverTrigger
              aria-describedby="dropdown-23-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-23-content"
              element="button"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
              type="button"
              variant="regular"
            >
              <PopoverTrigger
                component="span"
              >
                <PopoverTrigger
                  className="emotion-3"
                  component="span"
                >
                  <span
                    className="emotion-3"
                  >
                    <Button
                      aria-describedby="dropdown-23-content"
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-23-content"
                      element="button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                      type="button"
                      variant="regular"
                    >
                      <Button
                        aria-describedby="dropdown-23-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-23-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        text="Menu"
                        type="button"
                        variant="regular"
                      >
                        <button
                          aria-describedby="dropdown-23-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-23-content"
                          className="emotion-2"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          type="button"
                        >
                          <Styled(span)>
                            <span
                              className="emotion-1"
                            >
                              <Styled(span)
                                size="large"
                              >
                                <span
                                  className="emotion-0"
                                >
                                  Menu
                                </span>
                              </Styled(span)>
                            </span>
                          </Styled(span)>
                        </button>
                      </Button>
                    </Button>
                  </span>
                </PopoverTrigger>
              </PopoverTrigger>
            </PopoverTrigger>
          </span>
        </Popover>
      </Popover>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: custom-menu 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "items": Array [
            Object {
              "text": "Light years",
            },
            Object {
              "text": "Star stuff",
            },
            Object {
              "text": "Encyclopaedia galactica",
            },
            Object {
              "text": "Cosmic ocean",
            },
          ],
        },
      ]
    }
    itemKey="text"
    menu={[Function]}
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-25"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-25"
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        tag="span"
        triggerRef={[Function]}
      >
        <Popover
          className="emotion-5"
          id="dropdown-25"
          tag="span"
        >
          <span
            className="emotion-5"
            id="dropdown-25"
          >
            <PopoverTrigger
              aria-describedby="dropdown-25-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-25-content"
              element="button"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
              type="button"
              variant="regular"
            >
              <PopoverTrigger
                component="span"
              >
                <PopoverTrigger
                  className="emotion-3"
                  component="span"
                >
                  <span
                    className="emotion-3"
                  >
                    <Button
                      aria-describedby="dropdown-25-content"
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-25-content"
                      element="button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                      type="button"
                      variant="regular"
                    >
                      <Button
                        aria-describedby="dropdown-25-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-25-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        text="Menu"
                        type="button"
                        variant="regular"
                      >
                        <button
                          aria-describedby="dropdown-25-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-25-content"
                          className="emotion-2"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          type="button"
                        >
                          <Styled(span)>
                            <span
                              className="emotion-1"
                            >
                              <Styled(span)
                                size="large"
                              >
                                <span
                                  className="emotion-0"
                                >
                                  Menu
                                </span>
                              </Styled(span)>
                            </span>
                          </Styled(span)>
                        </button>
                      </Button>
                    </Button>
                  </span>
                </PopoverTrigger>
              </PopoverTrigger>
            </PopoverTrigger>
          </span>
        </Popover>
      </Popover>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: custom-trigger 1`] = `
.emotion-2 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "items": Array [
            Object {
              "text": "Light years",
            },
            Object {
              "text": "Star stuff",
            },
            Object {
              "text": "Encyclopaedia galactica",
            },
            Object {
              "text": "Cosmic ocean",
            },
          ],
        },
      ]
    }
    itemKey="text"
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-27"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-27"
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        tag="span"
        triggerRef={[Function]}
      >
        <Popover
          className="emotion-2"
          id="dropdown-27"
          tag="span"
        >
          <span
            className="emotion-2"
            id="dropdown-27"
          >
            <Styled(PopoverTrigger)
              aria-describedby="dropdown-27-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-27-content"
              component="button"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
            >
              <PopoverTrigger
                aria-describedby="dropdown-27-content"
                aria-expanded={false}
                aria-haspopup={true}
                aria-owns="dropdown-27-content"
                className="emotion-0"
                component="button"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
              >
                <button
                  aria-describedby="dropdown-27-content"
                  aria-expanded={false}
                  aria-haspopup={true}
                  aria-owns="dropdown-27-content"
                  className="emotion-0"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                >
                  Menu 
                  <span
                    aria-hidden="true"
                    role="img"
                  >
                    ▼
                  </span>
                </button>
              </PopoverTrigger>
            </Styled(PopoverTrigger)>
          </span>
        </Popover>
      </Popover>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: data 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "onClick": [Function],
          "text": "Menu item with onClick",
        },
        Object {
          "secondaryText": "Secondary text",
          "text": "Menu item",
        },
        Object {
          "iconStart": <IconCloud />,
          "text": "Icon at start",
        },
        Object {
          "iconEnd": <IconCloud />,
          "text": "Icon at end",
        },
        Object {
          "divider": true,
        },
        Object {
          "text": "Danger variant",
          "variant": "danger",
        },
        Object {
          "disabled": true,
          "onClick": [Function],
          "text": "Disabled menu item",
        },
      ]
    }
    itemKey="text"
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-3"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-3"
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        tag="span"
        triggerRef={[Function]}
      >
        <Popover
          className="emotion-5"
          id="dropdown-3"
          tag="span"
        >
          <span
            className="emotion-5"
            id="dropdown-3"
          >
            <PopoverTrigger
              aria-describedby="dropdown-3-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-3-content"
              element="button"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
              type="button"
              variant="regular"
            >
              <PopoverTrigger
                component="span"
              >
                <PopoverTrigger
                  className="emotion-3"
                  component="span"
                >
                  <span
                    className="emotion-3"
                  >
                    <Button
                      aria-describedby="dropdown-3-content"
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-3-content"
                      element="button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                      type="button"
                      variant="regular"
                    >
                      <Button
                        aria-describedby="dropdown-3-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-3-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        text="Menu"
                        type="button"
                        variant="regular"
                      >
                        <button
                          aria-describedby="dropdown-3-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-3-content"
                          className="emotion-2"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          type="button"
                        >
                          <Styled(span)>
                            <span
                              className="emotion-1"
                            >
                              <Styled(span)
                                size="large"
                              >
                                <span
                                  className="emotion-0"
                                >
                                  Menu
                                </span>
                              </Styled(span)>
                            </span>
                          </Styled(span)>
                        </button>
                      </Button>
                    </Button>
                  </span>
                </PopoverTrigger>
              </PopoverTrigger>
            </PopoverTrigger>
          </span>
        </Popover>
      </Popover>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: disabled 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #afbacc;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #dde3ed;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  color: #afbacc;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

<Dropdown
  data={
    Array [
      Object {
        "items": Array [
          Object {
            "text": "Light years",
          },
          Object {
            "text": "Star stuff",
          },
          Object {
            "text": "Encyclopaedia galactica",
          },
          Object {
            "text": "Cosmic ocean",
          },
        ],
      },
    ]
  }
  disabled={true}
  itemKey="text"
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    disabled={true}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-17"
    isOpen={false}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Popover
      content={[Function]}
      disabled={true}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-17"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      tag="span"
      triggerRef={[Function]}
    >
      <Popover
        className="emotion-5"
        id="dropdown-17"
        tag="span"
      >
        <span
          className="emotion-5"
          id="dropdown-17"
        >
          <PopoverTrigger
            aria-describedby="dropdown-17-content"
            aria-disabled={true}
            aria-expanded={false}
            aria-haspopup={true}
            aria-owns="dropdown-17-content"
            disabled={true}
            element="button"
            onBlur={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
            size="large"
            type="button"
            variant="regular"
          >
            <PopoverTrigger
              component="span"
            >
              <PopoverTrigger
                className="emotion-3"
                component="span"
              >
                <span
                  className="emotion-3"
                >
                  <Button
                    aria-describedby="dropdown-17-content"
                    aria-disabled={true}
                    aria-expanded={false}
                    aria-haspopup={true}
                    aria-owns="dropdown-17-content"
                    disabled={true}
                    element="button"
                    onBlur={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                    type="button"
                    variant="regular"
                  >
                    <Button
                      aria-describedby="dropdown-17-content"
                      aria-disabled={true}
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-17-content"
                      disabled={true}
                      element="button"
                      onBlur={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                      text="Menu"
                      type="button"
                      variant="regular"
                    >
                      <button
                        aria-describedby="dropdown-17-content"
                        aria-disabled={true}
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-17-content"
                        className="emotion-2"
                        disabled={true}
                        onBlur={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        type="button"
                      >
                        <Styled(span)>
                          <span
                            className="emotion-1"
                          >
                            <Styled(span)
                              size="large"
                            >
                              <span
                                className="emotion-0"
                              >
                                Menu
                              </span>
                            </Styled(span)>
                          </span>
                        </Styled(span)>
                      </button>
                    </Button>
                  </Button>
                </span>
              </PopoverTrigger>
            </PopoverTrigger>
          </PopoverTrigger>
        </span>
      </Popover>
    </Popover>
  </Popover>
</Dropdown>
`;

exports[`Dropdown demo examples Snapshots: on-open-close 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Dropdown
    data={
      Array [
        Object {
          "items": Array [
            Object {
              "text": "Light years",
            },
            Object {
              "text": "Star stuff",
            },
            Object {
              "text": "Encyclopaedia galactica",
            },
            Object {
              "text": "Cosmic ocean",
            },
          ],
        },
      ]
    }
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-15"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      triggerRef={[Function]}
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-15"
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        tag="span"
        triggerRef={[Function]}
      >
        <Popover
          className="emotion-5"
          id="dropdown-15"
          tag="span"
        >
          <span
            className="emotion-5"
            id="dropdown-15"
          >
            <PopoverTrigger
              aria-describedby="dropdown-15-content"
              aria-expanded={false}
              aria-haspopup={true}
              aria-owns="dropdown-15-content"
              element="button"
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              role="button"
              size="large"
              type="button"
              variant="regular"
            >
              <PopoverTrigger
                component="span"
              >
                <PopoverTrigger
                  className="emotion-3"
                  component="span"
                >
                  <span
                    className="emotion-3"
                  >
                    <Button
                      aria-describedby="dropdown-15-content"
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-owns="dropdown-15-content"
                      element="button"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      role="button"
                      size="large"
                      type="button"
                      variant="regular"
                    >
                      <Button
                        aria-describedby="dropdown-15-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-15-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        text="Menu"
                        type="button"
                        variant="regular"
                      >
                        <button
                          aria-describedby="dropdown-15-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-15-content"
                          className="emotion-2"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          type="button"
                        >
                          <Styled(span)>
                            <span
                              className="emotion-1"
                            >
                              <Styled(span)
                                size="large"
                              >
                                <span
                                  className="emotion-0"
                                >
                                  Menu
                                </span>
                              </Styled(span)>
                            </span>
                          </Styled(span)>
                        </button>
                      </Button>
                    </Button>
                  </span>
                </PopoverTrigger>
              </PopoverTrigger>
            </PopoverTrigger>
          </span>
        </Popover>
      </Popover>
    </Popover>
  </Dropdown>
</Component>
`;

exports[`Dropdown demo examples Snapshots: overflow 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-7 {
  background-color: aliceblue;
  overflow: hidden;
  padding: 25px;
}

<Styled(div)>
  <div
    className="emotion-7"
  >
    <Dropdown
      data={
        Array [
          Object {
            "items": Array [
              Object {
                "text": "Light years",
              },
              Object {
                "text": "Star stuff",
              },
              Object {
                "text": "Encyclopaedia galactica",
              },
              Object {
                "text": "Cosmic ocean",
              },
            ],
          },
        ]
      }
      itemKey="text"
      placement="bottom-start"
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-9"
        isOpen={false}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        triggerRef={[Function]}
      >
        <Popover
          content={[Function]}
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-9"
          isOpen={false}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
          tag="span"
          triggerRef={[Function]}
        >
          <Popover
            className="emotion-5"
            id="dropdown-9"
            tag="span"
          >
            <span
              className="emotion-5"
              id="dropdown-9"
            >
              <PopoverTrigger
                aria-describedby="dropdown-9-content"
                aria-expanded={false}
                aria-haspopup={true}
                aria-owns="dropdown-9-content"
                element="button"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                size="large"
                type="button"
                variant="regular"
              >
                <PopoverTrigger
                  component="span"
                >
                  <PopoverTrigger
                    className="emotion-3"
                    component="span"
                  >
                    <span
                      className="emotion-3"
                    >
                      <Button
                        aria-describedby="dropdown-9-content"
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-owns="dropdown-9-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        type="button"
                        variant="regular"
                      >
                        <Button
                          aria-describedby="dropdown-9-content"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="dropdown-9-content"
                          element="button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                          text="Menu"
                          type="button"
                          variant="regular"
                        >
                          <button
                            aria-describedby="dropdown-9-content"
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-owns="dropdown-9-content"
                            className="emotion-2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            type="button"
                          >
                            <Styled(span)>
                              <span
                                className="emotion-1"
                              >
                                <Styled(span)
                                  size="large"
                                >
                                  <span
                                    className="emotion-0"
                                  >
                                    Menu
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </button>
                        </Button>
                      </Button>
                    </span>
                  </PopoverTrigger>
                </PopoverTrigger>
              </PopoverTrigger>
            </span>
          </Popover>
        </Popover>
      </Popover>
    </Dropdown>
  </div>
</Styled(div)>
`;

exports[`Dropdown demo examples Snapshots: placement 1`] = `
.emotion-31 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-25 {
  margin: 0.5em 0;
}

.emotion-25:first-child,
.emotion-25 + .emotion-25 {
  margin-top: 0;
}

.emotion-25:last-child {
  margin-bottom: 0;
}

.emotion-9 {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.emotion-9:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-9:hover {
  background-color: #f5f7fa;
}

.emotion-9:active {
  background-color: #ebeff5;
}

.emotion-9[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-9[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-9 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-5 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-6 {
  color: #58606e;
  font-size: 0.6875em;
  padding-top: 0.18181818181818182em;
  word-break: break-word;
}

.emotion-33 {
  height: 400px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-27 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-27[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-27[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-27[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-27[data-x-out-of-boundaries] {
  visibility: hidden;
}

<Styled(div)>
  <div
    className="emotion-33"
  >
    <Dropdown
      data={
        Array [
          Object {
            "items": Array [
              Object {
                "text": "Light years",
              },
              Object {
                "text": "Star stuff",
              },
              Object {
                "text": "Encyclopaedia galactica",
              },
              Object {
                "text": "Cosmic ocean",
              },
            ],
          },
        ]
      }
      isOpen={true}
      itemKey="text"
      placement="bottom-start"
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-7"
        isOpen={true}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        triggerRef={[Function]}
      >
        <Popover
          content={[Function]}
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-7"
          isOpen={true}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
          tag="span"
          triggerRef={[Function]}
        >
          <Popover
            className="emotion-31"
            id="dropdown-7"
            tag="span"
          >
            <span
              className="emotion-31"
              id="dropdown-7"
            >
              <PopoverTrigger
                aria-activedescendant="dropdown-7-menu"
                aria-describedby="dropdown-7-content"
                aria-expanded={true}
                aria-haspopup={true}
                aria-owns="dropdown-7-content"
                element="button"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                size="large"
                type="button"
                variant="regular"
              >
                <PopoverTrigger
                  component="span"
                >
                  <PopoverTrigger
                    className="emotion-3"
                    component="span"
                  >
                    <span
                      className="emotion-3"
                    >
                      <Button
                        aria-activedescendant="dropdown-7-menu"
                        aria-describedby="dropdown-7-content"
                        aria-expanded={true}
                        aria-haspopup={true}
                        aria-owns="dropdown-7-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        type="button"
                        variant="regular"
                      >
                        <Button
                          aria-activedescendant="dropdown-7-menu"
                          aria-describedby="dropdown-7-content"
                          aria-expanded={true}
                          aria-haspopup={true}
                          aria-owns="dropdown-7-content"
                          element="button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                          text="Menu"
                          type="button"
                          variant="regular"
                        >
                          <button
                            aria-activedescendant="dropdown-7-menu"
                            aria-describedby="dropdown-7-content"
                            aria-expanded={true}
                            aria-haspopup={true}
                            aria-owns="dropdown-7-content"
                            className="emotion-2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            type="button"
                          >
                            <Styled(span)>
                              <span
                                className="emotion-1"
                              >
                                <Styled(span)
                                  size="large"
                                >
                                  <span
                                    className="emotion-0"
                                  >
                                    Menu
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </button>
                        </Button>
                      </Button>
                    </span>
                  </PopoverTrigger>
                </PopoverTrigger>
              </PopoverTrigger>
              <DropdownContent
                hasArrow={true}
                id="dropdown-7-content"
                onBlur={[Function]}
                placement="bottom-start"
              >
                <DropdownContent
                  hasArrow={true}
                  id="dropdown-7-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                >
                  <DropdownContent
                    className="emotion-27"
                    id="dropdown-7-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                  >
                    <RtlPopper
                      className="emotion-27"
                      id="dropdown-7-content"
                      onBlur={[Function]}
                      placement="bottom-start"
                      theme={
                        Object {
                          "backgroundColor_active": "#ebeff5",
                          "backgroundColor_dangerPrimary": "#de1b1b",
                          "backgroundColor_dangerPrimary_active": "#b80d0d",
                          "backgroundColor_dangerPrimary_focus": "#de1b1b",
                          "backgroundColor_dangerPrimary_hover": "#f55353",
                          "backgroundColor_danger_active": "#fad4d4",
                          "backgroundColor_danger_focus": "#faf0f0",
                          "backgroundColor_danger_hover": "#faf0f0",
                          "backgroundColor_disabled": "#dde3ed",
                          "backgroundColor_focus": "#f5f7fa",
                          "backgroundColor_hover": "#f5f7fa",
                          "backgroundColor_successPrimary": "#2a854e",
                          "backgroundColor_successPrimary_active": "#20693d",
                          "backgroundColor_successPrimary_focus": "#2a854e",
                          "backgroundColor_successPrimary_hover": "#3ba164",
                          "backgroundColor_success_active": "#abedc5",
                          "backgroundColor_success_focus": "#e1faeb",
                          "backgroundColor_success_hover": "#e1faeb",
                          "backgroundColor_themePrimary": "#3272d9",
                          "backgroundColor_themePrimary_active": "#1d5bbf",
                          "backgroundColor_themePrimary_focus": "#3272d9",
                          "backgroundColor_themePrimary_hover": "#5691f0",
                          "backgroundColor_theme_selected": "#f0f5fc",
                          "backgroundColor_theme_selectedActive": "#accbfc",
                          "backgroundColor_theme_selectedHover": "#cfe0fc",
                          "backgroundColor_warningPrimary": "#ad5f00",
                          "backgroundColor_warningPrimary_active": "#8a4d03",
                          "backgroundColor_warningPrimary_focus": "#ad5f00",
                          "backgroundColor_warningPrimary_hover": "#cf7911",
                          "backgroundColor_warning_active": "#fad8af",
                          "backgroundColor_warning_focus": "#fcf2e6",
                          "backgroundColor_warning_hover": "#fcf2e6",
                          "borderColor": "#c8d1e0",
                          "borderColor_danger": "#de1b1b",
                          "borderColor_danger_active": "#b80d0d",
                          "borderColor_danger_focus": "#b80d0d",
                          "borderColor_danger_hover": "#f55353",
                          "borderColor_success": "#2a854e",
                          "borderColor_success_active": "#20693d",
                          "borderColor_success_focus": "#20693d",
                          "borderColor_success_hover": "#3ba164",
                          "borderColor_theme": "#3272d9",
                          "borderColor_theme_active": "#1d5bbf",
                          "borderColor_theme_focus": "#1d5bbf",
                          "borderColor_theme_hover": "#5691f0",
                          "borderColor_warning": "#ad5f00",
                          "borderColor_warning_active": "#8a4d03",
                          "borderColor_warning_focus": "#8a4d03",
                          "borderColor_warning_hover": "#cf7911",
                          "borderRadius_1": "0.1875em",
                          "boxShadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                          "boxShadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                          "boxShadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                          "boxShadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                          "boxShadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                          "boxShadow_focusInner": "#ffffff",
                          "breakpoint_medium": "768px",
                          "breakpoint_narrow": "512px",
                          "breakpoint_wide": "1024px",
                          "color": "#333840",
                          "color_black": "#1d1f24",
                          "color_danger": "#de1b1b",
                          "color_dangerPrimary": "#ffffff",
                          "color_danger_active": "#b80d0d",
                          "color_danger_focus": "#de1b1b",
                          "color_danger_hover": "#f55353",
                          "color_disabled": "#afbacc",
                          "color_gray_10": "#f5f7fa",
                          "color_gray_100": "#333840",
                          "color_gray_20": "#ebeff5",
                          "color_gray_30": "#dde3ed",
                          "color_gray_40": "#c8d1e0",
                          "color_gray_50": "#afbacc",
                          "color_gray_60": "#8e99ab",
                          "color_gray_70": "#707a8a",
                          "color_gray_80": "#58606e",
                          "color_gray_90": "#434a54",
                          "color_inverted": "#ffffff",
                          "color_mouse": "#58606e",
                          "color_readOnly": "#58606e",
                          "color_required": "#de1b1b",
                          "color_success": "#2a854e",
                          "color_successPrimary": "#ffffff",
                          "color_success_active": "#20693d",
                          "color_success_focus": "#2a854e",
                          "color_success_hover": "#3ba164",
                          "color_theme": "#3272d9",
                          "color_themePrimary": "#ffffff",
                          "color_theme_10": "#f0f5fc",
                          "color_theme_100": "#15233b",
                          "color_theme_20": "#cfe0fc",
                          "color_theme_30": "#accbfc",
                          "color_theme_40": "#84b1fa",
                          "color_theme_50": "#5691f0",
                          "color_theme_60": "#3272d9",
                          "color_theme_70": "#1d5bbf",
                          "color_theme_80": "#114599",
                          "color_theme_90": "#103570",
                          "color_theme_active": "#1d5bbf",
                          "color_theme_focus": "#3272d9",
                          "color_theme_hover": "#5691f0",
                          "color_warning": "#ad5f00",
                          "color_warningPrimary": "#ffffff",
                          "color_warning_active": "#8a4d03",
                          "color_warning_focus": "#ad5f00",
                          "color_warning_hover": "#cf7911",
                          "color_white": "#ffffff",
                          "direction": "ltr",
                          "fontFamily": "\\"Open Sans\\"",
                          "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                          "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                          "fontSize_base": "16px",
                          "fontSize_mouse": "0.6875em",
                          "fontSize_prose": "1em",
                          "fontSize_ui": "0.875em",
                          "fontWeight_bold": 700,
                          "fontWeight_extraBold": 800,
                          "fontWeight_regular": 400,
                          "fontWeight_semiBold": 600,
                          "h1_color": "#333840",
                          "h1_fontSize": "2.125em",
                          "h1_fontWeight": 800,
                          "h2_color": "#58606e",
                          "h2_fontSize": "1.75em",
                          "h2_fontWeight": 700,
                          "h3_color": "#58606e",
                          "h3_fontSize": "1.375em",
                          "h3_fontWeight": 700,
                          "h4_color": "#58606e",
                          "h4_fontSize": "1.125em",
                          "h4_fontWeight": 700,
                          "h5_color": "#333840",
                          "h5_fontSize": "0.875em",
                          "h5_fontWeight": 700,
                          "h6_color": "#58606e",
                          "h6_fontSize": "0.875em",
                          "h6_fontWeight": 400,
                          "icon_color": "#58606e",
                          "icon_color_danger": "#de1b1b",
                          "icon_color_success": "#2a854e",
                          "icon_color_theme": "#3272d9",
                          "icon_color_warning": "#ad5f00",
                          "input_backgroundColor": "#ffffff",
                          "input_backgroundColor_disabled": "#ebeff5",
                          "input_color_placeholder": "#8e99ab",
                          "lineHeight": 1.25,
                          "lineHeight_heading": 1.25,
                          "lineHeight_heading_small": 1.5,
                          "lineHeight_prose": 1.5,
                          "panel_backgroundColor": "#ffffff",
                          "panel_backgroundColor_inverted": "#434a54",
                          "panel_borderColor": "#ebeff5",
                          "panel_borderColor_inverted": "#434a54",
                          "size_jumbo": "3.25em",
                          "size_large": "2.5em",
                          "size_medium": "2em",
                          "size_small": "1.5em",
                          "space_inline_lg": "1.5em",
                          "space_inline_md": "1em",
                          "space_inline_sm": "0.5em",
                          "space_inline_xl": "2em",
                          "space_inline_xs": "0.25em",
                          "space_inline_xxl": "4em",
                          "space_inline_xxs": "0.125em",
                          "space_inset_lg": "1.5em",
                          "space_inset_md": "1em",
                          "space_inset_sm": "0.5em",
                          "space_stack_lg": "1.5em",
                          "space_stack_md": "1em",
                          "space_stack_sm": "0.5em",
                          "space_stack_xl": "2em",
                          "space_stack_xs": "0.25em",
                          "space_stack_xxl": "4em",
                          "space_stack_xxs": "0.125em",
                          "well_backgroundColor": "#ebeff5",
                          "well_backgroundColor_danger": "#fad4d4",
                          "well_backgroundColor_success": "#abedc5",
                          "well_backgroundColor_warning": "#fad8af",
                          "well_borderColor_danger": "#fa8e8e",
                          "well_borderColor_success": "#57c282",
                          "well_borderColor_warning": "#e89c3f",
                          "zIndex_100": 100,
                          "zIndex_1600": 1600,
                          "zIndex_200": 200,
                          "zIndex_400": 400,
                          "zIndex_800": 800,
                        }
                      }
                    >
                      <Popper
                        className="emotion-27"
                        component="div"
                        eventsEnabled={true}
                        id="dropdown-7-content"
                        modifiers={Object {}}
                        onBlur={[Function]}
                        placement="bottom-start"
                        positionFixed={false}
                      >
                        <div
                          className="emotion-27"
                          id="dropdown-7-content"
                          onBlur={[Function]}
                          style={
                            Object {
                              "opacity": 0,
                              "pointerEvents": "none",
                              "position": "absolute",
                            }
                          }
                        >
                          <Menu
                            data={
                              Array [
                                Object {
                                  "items": Array [
                                    Object {
                                      "text": "Light years",
                                    },
                                    Object {
                                      "text": "Star stuff",
                                    },
                                    Object {
                                      "text": "Encyclopaedia galactica",
                                    },
                                    Object {
                                      "text": "Cosmic ocean",
                                    },
                                  ],
                                },
                              ]
                            }
                            id="dropdown-7-menu"
                            item={[Function]}
                            itemKey="text"
                            role="menu"
                          >
                            <Menu
                              id="dropdown-7-menu"
                              item={[Function]}
                              itemKey="text"
                              role="menu"
                            >
                              <div
                                className="emotion-26"
                                id="dropdown-7-menu"
                                role="menu"
                              >
                                <MenuGroup
                                  key="0"
                                >
                                  <MenuGroup>
                                    <div
                                      className="emotion-25"
                                    >
                                      <MenuItem
                                        index={0}
                                        item={
                                          Object {
                                            "text": "Light years",
                                          }
                                        }
                                        key="Light years"
                                        render={[Function]}
                                        text="Light years"
                                      >
                                        <MenuItem
                                          id="dropdown-7-item-0"
                                          index={0}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Light years",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Light years"
                                        >
                                          <MenuItem
                                            id="dropdown-7-item-0"
                                            index={0}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Light years",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Light years"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-7-item-0"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Light years
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={1}
                                        item={
                                          Object {
                                            "text": "Star stuff",
                                          }
                                        }
                                        key="Star stuff"
                                        render={[Function]}
                                        text="Star stuff"
                                      >
                                        <MenuItem
                                          id="dropdown-7-item-1"
                                          index={1}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Star stuff",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Star stuff"
                                        >
                                          <MenuItem
                                            id="dropdown-7-item-1"
                                            index={1}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Star stuff",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Star stuff"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-7-item-1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Star stuff
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={2}
                                        item={
                                          Object {
                                            "text": "Encyclopaedia galactica",
                                          }
                                        }
                                        key="Encyclopaedia galactica"
                                        render={[Function]}
                                        text="Encyclopaedia galactica"
                                      >
                                        <MenuItem
                                          id="dropdown-7-item-2"
                                          index={2}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Encyclopaedia galactica",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Encyclopaedia galactica"
                                        >
                                          <MenuItem
                                            id="dropdown-7-item-2"
                                            index={2}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Encyclopaedia galactica"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-7-item-2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Encyclopaedia galactica
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={3}
                                        item={
                                          Object {
                                            "text": "Cosmic ocean",
                                          }
                                        }
                                        key="Cosmic ocean"
                                        render={[Function]}
                                        text="Cosmic ocean"
                                      >
                                        <MenuItem
                                          id="dropdown-7-item-3"
                                          index={3}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Cosmic ocean",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Cosmic ocean"
                                        >
                                          <MenuItem
                                            id="dropdown-7-item-3"
                                            index={3}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Cosmic ocean",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Cosmic ocean"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-7-item-3"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Cosmic ocean
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                    </div>
                                  </MenuGroup>
                                </MenuGroup>
                              </div>
                            </Menu>
                          </Menu>
                        </div>
                      </Popper>
                    </RtlPopper>
                  </DropdownContent>
                </DropdownContent>
              </DropdownContent>
              <EventListener
                listeners={
                  Array [
                    Object {
                      "event": "click",
                      "handler": [Function],
                      "options": true,
                      "target": "document",
                    },
                    Object {
                      "event": "keydown",
                      "handler": [Function],
                      "options": true,
                      "target": "document",
                    },
                  ]
                }
              />
            </span>
          </Popover>
        </Popover>
      </Popover>
    </Dropdown>
  </div>
</Styled(div)>
`;

exports[`Dropdown demo examples Snapshots: portal 1`] = `
.emotion-5 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-14 {
  position: relative;
}

.emotion-12 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-11 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-11::-moz-focus-inner {
  border: 0;
}

.emotion-11 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-11 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-11 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-11 [role="img"]:only-child {
  margin: 0;
}

.emotion-9 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.emotion-8 {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.emotion-7 {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<ScrollBox
  autoCenter={true}
  height={360}
>
  <Styled(div)>
    <div
      className="emotion-14"
    >
      <Styled(div)
        height={360}
      >
        <div
          className="emotion-8"
        >
          <Styled(div)
            scrollAreaHeight={360}
          >
            <div
              className="emotion-7"
            >
              <Dropdown
                data={
                  Array [
                    Object {
                      "items": Array [
                        Object {
                          "text": "Light years",
                        },
                        Object {
                          "text": "Star stuff",
                        },
                        Object {
                          "text": "Encyclopaedia galactica",
                        },
                        Object {
                          "text": "Cosmic ocean",
                        },
                      ],
                    },
                  ]
                }
                isOpen={true}
                itemKey="text"
                modifiers={
                  Object {
                    "preventOverflow": Object {
                      "escapeWithReference": true,
                    },
                  }
                }
                placement="bottom-start"
                usePortal={true}
              >
                <Popover
                  content={[Function]}
                  focusTriggerOnClose={true}
                  hasArrow={true}
                  id="dropdown-13"
                  isOpen={true}
                  itemKey="text"
                  modifiers={
                    Object {
                      "preventOverflow": Object {
                        "escapeWithReference": true,
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                  triggerRef={[Function]}
                  usePortal={true}
                >
                  <Popover
                    content={[Function]}
                    focusTriggerOnClose={true}
                    hasArrow={true}
                    id="dropdown-13"
                    isOpen={true}
                    itemKey="text"
                    modifiers={
                      Object {
                        "preventOverflow": Object {
                          "escapeWithReference": true,
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    tag="span"
                    triggerRef={[Function]}
                    usePortal={true}
                  >
                    <Popover
                      className="emotion-5"
                      id="dropdown-13"
                      tag="span"
                    >
                      <span
                        className="emotion-5"
                        id="dropdown-13"
                      >
                        <PopoverTrigger
                          aria-activedescendant="dropdown-13-menu"
                          aria-describedby="dropdown-13-content"
                          aria-expanded={true}
                          aria-haspopup={true}
                          aria-owns="dropdown-13-content"
                          element="button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                          type="button"
                          variant="regular"
                        >
                          <PopoverTrigger
                            component="span"
                          >
                            <PopoverTrigger
                              className="emotion-3"
                              component="span"
                            >
                              <span
                                className="emotion-3"
                              >
                                <Button
                                  aria-activedescendant="dropdown-13-menu"
                                  aria-describedby="dropdown-13-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-13-content"
                                  element="button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                  type="button"
                                  variant="regular"
                                >
                                  <Button
                                    aria-activedescendant="dropdown-13-menu"
                                    aria-describedby="dropdown-13-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-13-content"
                                    element="button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    size="large"
                                    text="Menu"
                                    type="button"
                                    variant="regular"
                                  >
                                    <button
                                      aria-activedescendant="dropdown-13-menu"
                                      aria-describedby="dropdown-13-content"
                                      aria-expanded={true}
                                      aria-haspopup={true}
                                      aria-owns="dropdown-13-content"
                                      className="emotion-2"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                      type="button"
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-1"
                                        >
                                          <Styled(span)
                                            size="large"
                                          >
                                            <span
                                              className="emotion-0"
                                            >
                                              Menu
                                            </span>
                                          </Styled(span)>
                                        </span>
                                      </Styled(span)>
                                    </button>
                                  </Button>
                                </Button>
                              </span>
                            </PopoverTrigger>
                          </PopoverTrigger>
                        </PopoverTrigger>
                        <Portal />
                        <EventListener
                          listeners={
                            Array [
                              Object {
                                "event": "click",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                              Object {
                                "event": "keydown",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                            ]
                          }
                        />
                      </span>
                    </Popover>
                  </Popover>
                </Popover>
              </Dropdown>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(Button)
        element="button"
        minimal={true}
        onClick={[Function]}
        size="small"
        type="button"
        variant="regular"
      >
        <Button
          className="emotion-12"
          element="button"
          minimal={true}
          onClick={[Function]}
          size="small"
          type="button"
          variant="regular"
        >
          <Button
            className="emotion-12"
            element="button"
            minimal={true}
            onClick={[Function]}
            size="small"
            text="Re-center"
            type="button"
            variant="regular"
          >
            <button
              className="emotion-11"
              onClick={[Function]}
              type="button"
            >
              <Styled(span)>
                <span
                  className="emotion-1"
                >
                  <Styled(span)
                    size="small"
                  >
                    <span
                      className="emotion-9"
                    >
                      Re-center
                    </span>
                  </Styled(span)>
                </span>
              </Styled(span)>
            </button>
          </Button>
        </Button>
      </Styled(Button)>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Dropdown demo examples Snapshots: rtl 1`] = `
.emotion-31 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-25 {
  margin: 0.5em 0;
}

.emotion-25:first-child,
.emotion-25 + .emotion-25 {
  margin-top: 0;
}

.emotion-25:last-child {
  margin-bottom: 0;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-6 {
  color: #58606e;
  font-size: 0.6875em;
  padding-top: 0.18181818181818182em;
  word-break: break-word;
}

.emotion-27 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-27[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-27[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-27[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-27[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-33 {
  padding-bottom: 8.125em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-left: 0.5714285714285714em;
}

.emotion-9 {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.emotion-9:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-9:hover {
  background-color: #f5f7fa;
}

.emotion-9:active {
  background-color: #ebeff5;
}

.emotion-9[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-9[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-9 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-5 {
  font-size: 0.875em;
  margin-left: 0.5714285714285714em;
  word-break: break-word;
}

<Styled(div)
  dir="rtl"
>
  <div
    className="emotion-33"
    dir="rtl"
  >
    <ThemeProvider>
      <ThemeProvider>
        <Dropdown
          data={
            Array [
              Object {
                "items": Array [
                  Object {
                    "text": "Light years",
                  },
                  Object {
                    "text": "Star stuff",
                  },
                  Object {
                    "text": "Encyclopaedia galactica",
                  },
                  Object {
                    "text": "Cosmic ocean",
                  },
                ],
              },
            ]
          }
          isOpen={true}
          itemKey="text"
          placement="bottom-start"
        >
          <Popover
            content={[Function]}
            focusTriggerOnClose={true}
            hasArrow={true}
            id="dropdown-21"
            isOpen={true}
            itemKey="text"
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom-start"
            triggerRef={[Function]}
          >
            <Popover
              content={[Function]}
              focusTriggerOnClose={true}
              hasArrow={true}
              id="dropdown-21"
              isOpen={true}
              itemKey="text"
              onClose={[Function]}
              onOpen={[Function]}
              placement="bottom-start"
              tag="span"
              triggerRef={[Function]}
            >
              <Popover
                className="emotion-31"
                id="dropdown-21"
                tag="span"
              >
                <span
                  className="emotion-31"
                  id="dropdown-21"
                >
                  <PopoverTrigger
                    aria-activedescendant="dropdown-21-menu"
                    aria-describedby="dropdown-21-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-21-content"
                    element="button"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                    size="large"
                    type="button"
                    variant="regular"
                  >
                    <PopoverTrigger
                      component="span"
                    >
                      <PopoverTrigger
                        className="emotion-3"
                        component="span"
                      >
                        <span
                          className="emotion-3"
                        >
                          <Button
                            aria-activedescendant="dropdown-21-menu"
                            aria-describedby="dropdown-21-content"
                            aria-expanded={true}
                            aria-haspopup={true}
                            aria-owns="dropdown-21-content"
                            element="button"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            size="large"
                            type="button"
                            variant="regular"
                          >
                            <Button
                              aria-activedescendant="dropdown-21-menu"
                              aria-describedby="dropdown-21-content"
                              aria-expanded={true}
                              aria-haspopup={true}
                              aria-owns="dropdown-21-content"
                              element="button"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              role="button"
                              size="large"
                              text="Menu"
                              type="button"
                              variant="regular"
                            >
                              <button
                                aria-activedescendant="dropdown-21-menu"
                                aria-describedby="dropdown-21-content"
                                aria-expanded={true}
                                aria-haspopup={true}
                                aria-owns="dropdown-21-content"
                                className="emotion-2"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                role="button"
                                type="button"
                              >
                                <Styled(span)>
                                  <span
                                    className="emotion-1"
                                  >
                                    <Styled(span)
                                      size="large"
                                    >
                                      <span
                                        className="emotion-0"
                                      >
                                        Menu
                                      </span>
                                    </Styled(span)>
                                  </span>
                                </Styled(span)>
                              </button>
                            </Button>
                          </Button>
                        </span>
                      </PopoverTrigger>
                    </PopoverTrigger>
                  </PopoverTrigger>
                  <DropdownContent
                    hasArrow={true}
                    id="dropdown-21-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                  >
                    <DropdownContent
                      hasArrow={true}
                      id="dropdown-21-content"
                      onBlur={[Function]}
                      placement="bottom-start"
                    >
                      <DropdownContent
                        className="emotion-27"
                        id="dropdown-21-content"
                        onBlur={[Function]}
                        placement="bottom-start"
                      >
                        <RtlPopper
                          className="emotion-27"
                          id="dropdown-21-content"
                          onBlur={[Function]}
                          placement="bottom-start"
                          theme={
                            Object {
                              "backgroundColor_active": "#ebeff5",
                              "backgroundColor_dangerPrimary": "#de1b1b",
                              "backgroundColor_dangerPrimary_active": "#b80d0d",
                              "backgroundColor_dangerPrimary_focus": "#de1b1b",
                              "backgroundColor_dangerPrimary_hover": "#f55353",
                              "backgroundColor_danger_active": "#fad4d4",
                              "backgroundColor_danger_focus": "#faf0f0",
                              "backgroundColor_danger_hover": "#faf0f0",
                              "backgroundColor_disabled": "#dde3ed",
                              "backgroundColor_focus": "#f5f7fa",
                              "backgroundColor_hover": "#f5f7fa",
                              "backgroundColor_successPrimary": "#2a854e",
                              "backgroundColor_successPrimary_active": "#20693d",
                              "backgroundColor_successPrimary_focus": "#2a854e",
                              "backgroundColor_successPrimary_hover": "#3ba164",
                              "backgroundColor_success_active": "#abedc5",
                              "backgroundColor_success_focus": "#e1faeb",
                              "backgroundColor_success_hover": "#e1faeb",
                              "backgroundColor_themePrimary": "#3272d9",
                              "backgroundColor_themePrimary_active": "#1d5bbf",
                              "backgroundColor_themePrimary_focus": "#3272d9",
                              "backgroundColor_themePrimary_hover": "#5691f0",
                              "backgroundColor_theme_selected": "#f0f5fc",
                              "backgroundColor_theme_selectedActive": "#accbfc",
                              "backgroundColor_theme_selectedHover": "#cfe0fc",
                              "backgroundColor_warningPrimary": "#ad5f00",
                              "backgroundColor_warningPrimary_active": "#8a4d03",
                              "backgroundColor_warningPrimary_focus": "#ad5f00",
                              "backgroundColor_warningPrimary_hover": "#cf7911",
                              "backgroundColor_warning_active": "#fad8af",
                              "backgroundColor_warning_focus": "#fcf2e6",
                              "backgroundColor_warning_hover": "#fcf2e6",
                              "borderColor": "#c8d1e0",
                              "borderColor_danger": "#de1b1b",
                              "borderColor_danger_active": "#b80d0d",
                              "borderColor_danger_focus": "#b80d0d",
                              "borderColor_danger_hover": "#f55353",
                              "borderColor_success": "#2a854e",
                              "borderColor_success_active": "#20693d",
                              "borderColor_success_focus": "#20693d",
                              "borderColor_success_hover": "#3ba164",
                              "borderColor_theme": "#3272d9",
                              "borderColor_theme_active": "#1d5bbf",
                              "borderColor_theme_focus": "#1d5bbf",
                              "borderColor_theme_hover": "#5691f0",
                              "borderColor_warning": "#ad5f00",
                              "borderColor_warning_active": "#8a4d03",
                              "borderColor_warning_focus": "#8a4d03",
                              "borderColor_warning_hover": "#cf7911",
                              "borderRadius_1": "0.1875em",
                              "boxShadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                              "boxShadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                              "boxShadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                              "boxShadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                              "boxShadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                              "boxShadow_focusInner": "#ffffff",
                              "breakpoint_medium": "768px",
                              "breakpoint_narrow": "512px",
                              "breakpoint_wide": "1024px",
                              "color": "#333840",
                              "color_black": "#1d1f24",
                              "color_danger": "#de1b1b",
                              "color_dangerPrimary": "#ffffff",
                              "color_danger_active": "#b80d0d",
                              "color_danger_focus": "#de1b1b",
                              "color_danger_hover": "#f55353",
                              "color_disabled": "#afbacc",
                              "color_gray_10": "#f5f7fa",
                              "color_gray_100": "#333840",
                              "color_gray_20": "#ebeff5",
                              "color_gray_30": "#dde3ed",
                              "color_gray_40": "#c8d1e0",
                              "color_gray_50": "#afbacc",
                              "color_gray_60": "#8e99ab",
                              "color_gray_70": "#707a8a",
                              "color_gray_80": "#58606e",
                              "color_gray_90": "#434a54",
                              "color_inverted": "#ffffff",
                              "color_mouse": "#58606e",
                              "color_readOnly": "#58606e",
                              "color_required": "#de1b1b",
                              "color_success": "#2a854e",
                              "color_successPrimary": "#ffffff",
                              "color_success_active": "#20693d",
                              "color_success_focus": "#2a854e",
                              "color_success_hover": "#3ba164",
                              "color_theme": "#3272d9",
                              "color_themePrimary": "#ffffff",
                              "color_theme_10": "#f0f5fc",
                              "color_theme_100": "#15233b",
                              "color_theme_20": "#cfe0fc",
                              "color_theme_30": "#accbfc",
                              "color_theme_40": "#84b1fa",
                              "color_theme_50": "#5691f0",
                              "color_theme_60": "#3272d9",
                              "color_theme_70": "#1d5bbf",
                              "color_theme_80": "#114599",
                              "color_theme_90": "#103570",
                              "color_theme_active": "#1d5bbf",
                              "color_theme_focus": "#3272d9",
                              "color_theme_hover": "#5691f0",
                              "color_warning": "#ad5f00",
                              "color_warningPrimary": "#ffffff",
                              "color_warning_active": "#8a4d03",
                              "color_warning_focus": "#ad5f00",
                              "color_warning_hover": "#cf7911",
                              "color_white": "#ffffff",
                              "direction": "rtl",
                              "fontFamily": "\\"Open Sans\\"",
                              "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                              "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                              "fontSize_base": "16px",
                              "fontSize_mouse": "0.6875em",
                              "fontSize_prose": "1em",
                              "fontSize_ui": "0.875em",
                              "fontWeight_bold": 700,
                              "fontWeight_extraBold": 800,
                              "fontWeight_regular": 400,
                              "fontWeight_semiBold": 600,
                              "h1_color": "#333840",
                              "h1_fontSize": "2.125em",
                              "h1_fontWeight": 800,
                              "h2_color": "#58606e",
                              "h2_fontSize": "1.75em",
                              "h2_fontWeight": 700,
                              "h3_color": "#58606e",
                              "h3_fontSize": "1.375em",
                              "h3_fontWeight": 700,
                              "h4_color": "#58606e",
                              "h4_fontSize": "1.125em",
                              "h4_fontWeight": 700,
                              "h5_color": "#333840",
                              "h5_fontSize": "0.875em",
                              "h5_fontWeight": 700,
                              "h6_color": "#58606e",
                              "h6_fontSize": "0.875em",
                              "h6_fontWeight": 400,
                              "icon_color": "#58606e",
                              "icon_color_danger": "#de1b1b",
                              "icon_color_success": "#2a854e",
                              "icon_color_theme": "#3272d9",
                              "icon_color_warning": "#ad5f00",
                              "input_backgroundColor": "#ffffff",
                              "input_backgroundColor_disabled": "#ebeff5",
                              "input_color_placeholder": "#8e99ab",
                              "lineHeight": 1.25,
                              "lineHeight_heading": 1.25,
                              "lineHeight_heading_small": 1.5,
                              "lineHeight_prose": 1.5,
                              "panel_backgroundColor": "#ffffff",
                              "panel_backgroundColor_inverted": "#434a54",
                              "panel_borderColor": "#ebeff5",
                              "panel_borderColor_inverted": "#434a54",
                              "size_jumbo": "3.25em",
                              "size_large": "2.5em",
                              "size_medium": "2em",
                              "size_small": "1.5em",
                              "space_inline_lg": "1.5em",
                              "space_inline_md": "1em",
                              "space_inline_sm": "0.5em",
                              "space_inline_xl": "2em",
                              "space_inline_xs": "0.25em",
                              "space_inline_xxl": "4em",
                              "space_inline_xxs": "0.125em",
                              "space_inset_lg": "1.5em",
                              "space_inset_md": "1em",
                              "space_inset_sm": "0.5em",
                              "space_stack_lg": "1.5em",
                              "space_stack_md": "1em",
                              "space_stack_sm": "0.5em",
                              "space_stack_xl": "2em",
                              "space_stack_xs": "0.25em",
                              "space_stack_xxl": "4em",
                              "space_stack_xxs": "0.125em",
                              "well_backgroundColor": "#ebeff5",
                              "well_backgroundColor_danger": "#fad4d4",
                              "well_backgroundColor_success": "#abedc5",
                              "well_backgroundColor_warning": "#fad8af",
                              "well_borderColor_danger": "#fa8e8e",
                              "well_borderColor_success": "#57c282",
                              "well_borderColor_warning": "#e89c3f",
                              "zIndex_100": 100,
                              "zIndex_1600": 1600,
                              "zIndex_200": 200,
                              "zIndex_400": 400,
                              "zIndex_800": 800,
                            }
                          }
                        >
                          <Popper
                            className="emotion-27"
                            component="div"
                            eventsEnabled={true}
                            id="dropdown-21-content"
                            modifiers={Object {}}
                            onBlur={[Function]}
                            placement="bottom-end"
                            positionFixed={false}
                          >
                            <div
                              className="emotion-27"
                              id="dropdown-21-content"
                              onBlur={[Function]}
                              style={
                                Object {
                                  "opacity": 0,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                }
                              }
                            >
                              <Menu
                                data={
                                  Array [
                                    Object {
                                      "items": Array [
                                        Object {
                                          "text": "Light years",
                                        },
                                        Object {
                                          "text": "Star stuff",
                                        },
                                        Object {
                                          "text": "Encyclopaedia galactica",
                                        },
                                        Object {
                                          "text": "Cosmic ocean",
                                        },
                                      ],
                                    },
                                  ]
                                }
                                id="dropdown-21-menu"
                                item={[Function]}
                                itemKey="text"
                                role="menu"
                              >
                                <Menu
                                  id="dropdown-21-menu"
                                  item={[Function]}
                                  itemKey="text"
                                  role="menu"
                                >
                                  <div
                                    className="emotion-26"
                                    id="dropdown-21-menu"
                                    role="menu"
                                  >
                                    <MenuGroup
                                      key="0"
                                    >
                                      <MenuGroup>
                                        <div
                                          className="emotion-25"
                                        >
                                          <MenuItem
                                            index={0}
                                            item={
                                              Object {
                                                "text": "Light years",
                                              }
                                            }
                                            key="Light years"
                                            render={[Function]}
                                            text="Light years"
                                          >
                                            <MenuItem
                                              id="dropdown-21-item-0"
                                              index={0}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Light years",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Light years"
                                            >
                                              <MenuItem
                                                id="dropdown-21-item-0"
                                                index={0}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Light years",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Light years"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-21-item-0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-5"
                                                            >
                                                              Light years
                                                            </span>
                                                          </Styled(span)>
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-6"
                                                            />
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </MenuItem>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={1}
                                            item={
                                              Object {
                                                "text": "Star stuff",
                                              }
                                            }
                                            key="Star stuff"
                                            render={[Function]}
                                            text="Star stuff"
                                          >
                                            <MenuItem
                                              id="dropdown-21-item-1"
                                              index={1}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Star stuff",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Star stuff"
                                            >
                                              <MenuItem
                                                id="dropdown-21-item-1"
                                                index={1}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Star stuff",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Star stuff"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-21-item-1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-5"
                                                            >
                                                              Star stuff
                                                            </span>
                                                          </Styled(span)>
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-6"
                                                            />
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </MenuItem>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={2}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica",
                                              }
                                            }
                                            key="Encyclopaedia galactica"
                                            render={[Function]}
                                            text="Encyclopaedia galactica"
                                          >
                                            <MenuItem
                                              id="dropdown-21-item-2"
                                              index={2}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Encyclopaedia galactica",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Encyclopaedia galactica"
                                            >
                                              <MenuItem
                                                id="dropdown-21-item-2"
                                                index={2}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Encyclopaedia galactica",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Encyclopaedia galactica"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-21-item-2"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-5"
                                                            >
                                                              Encyclopaedia galactica
                                                            </span>
                                                          </Styled(span)>
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-6"
                                                            />
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </MenuItem>
                                            </MenuItem>
                                          </MenuItem>
                                          <MenuItem
                                            index={3}
                                            item={
                                              Object {
                                                "text": "Cosmic ocean",
                                              }
                                            }
                                            key="Cosmic ocean"
                                            render={[Function]}
                                            text="Cosmic ocean"
                                          >
                                            <MenuItem
                                              id="dropdown-21-item-3"
                                              index={3}
                                              isHighlighted={false}
                                              item={
                                                Object {
                                                  "text": "Cosmic ocean",
                                                }
                                              }
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                              text="Cosmic ocean"
                                            >
                                              <MenuItem
                                                id="dropdown-21-item-3"
                                                index={3}
                                                isHighlighted={false}
                                                item={
                                                  Object {
                                                    "text": "Cosmic ocean",
                                                  }
                                                }
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex={null}
                                                text="Cosmic ocean"
                                              >
                                                <div
                                                  className="emotion-9"
                                                  id="dropdown-21-item-3"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="menuitem"
                                                  tabIndex={null}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-8"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-7"
                                                        >
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-5"
                                                            >
                                                              Cosmic ocean
                                                            </span>
                                                          </Styled(span)>
                                                          <Styled(span)>
                                                            <span
                                                              className="emotion-6"
                                                            />
                                                          </Styled(span)>
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </div>
                                              </MenuItem>
                                            </MenuItem>
                                          </MenuItem>
                                        </div>
                                      </MenuGroup>
                                    </MenuGroup>
                                  </div>
                                </Menu>
                              </Menu>
                            </div>
                          </Popper>
                        </RtlPopper>
                      </DropdownContent>
                    </DropdownContent>
                  </DropdownContent>
                  <EventListener
                    listeners={
                      Array [
                        Object {
                          "event": "click",
                          "handler": [Function],
                          "options": true,
                          "target": "document",
                        },
                        Object {
                          "event": "keydown",
                          "handler": [Function],
                          "options": true,
                          "target": "document",
                        },
                      ]
                    }
                  />
                </span>
              </Popover>
            </Popover>
          </Popover>
        </Dropdown>
      </ThemeProvider>
    </ThemeProvider>
  </div>
</Styled(div)>
`;

exports[`Dropdown demo examples Snapshots: scrolling-container 1`] = `
.emotion-31 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-25 {
  margin: 0.5em 0;
}

.emotion-25:first-child,
.emotion-25 + .emotion-25 {
  margin-top: 0;
}

.emotion-25:last-child {
  margin-bottom: 0;
}

.emotion-9 {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.emotion-9:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-9:hover {
  background-color: #f5f7fa;
}

.emotion-9:active {
  background-color: #ebeff5;
}

.emotion-9[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-9[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-9 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-5 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-6 {
  color: #58606e;
  font-size: 0.6875em;
  padding-top: 0.18181818181818182em;
  word-break: break-word;
}

.emotion-27 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-27[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-27[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-27[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-27[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-40 {
  position: relative;
}

.emotion-34 {
  background-color: aliceblue;
  height: 430px;
  overflow: auto;
  position: relative;
}

.emotion-33 {
  height: 930px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-38 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-37 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-37 *,
.emotion-37 *::before,
.emotion-37 *::after {
  box-sizing: inherit;
}

.emotion-37:focus {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-37:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-37:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-37::-moz-focus-inner {
  border: 0;
}

.emotion-37 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-37 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-37 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-37 [role="img"]:only-child {
  margin: 0;
}

.emotion-35 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ScrollBox
  autoCenter={true}
  height={430}
>
  <Styled(div)>
    <div
      className="emotion-40"
    >
      <Styled(div)
        height={430}
      >
        <div
          className="emotion-34"
        >
          <Styled(div)
            scrollAreaHeight={430}
          >
            <div
              className="emotion-33"
            >
              <Dropdown
                data={
                  Array [
                    Object {
                      "items": Array [
                        Object {
                          "text": "Light years",
                        },
                        Object {
                          "text": "Star stuff",
                        },
                        Object {
                          "text": "Encyclopaedia galactica",
                        },
                        Object {
                          "text": "Cosmic ocean",
                        },
                      ],
                    },
                  ]
                }
                isOpen={true}
                itemKey="text"
                placement="bottom-start"
              >
                <Popover
                  content={[Function]}
                  focusTriggerOnClose={true}
                  hasArrow={true}
                  id="dropdown-11"
                  isOpen={true}
                  itemKey="text"
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom-start"
                  triggerRef={[Function]}
                >
                  <Popover
                    content={[Function]}
                    focusTriggerOnClose={true}
                    hasArrow={true}
                    id="dropdown-11"
                    isOpen={true}
                    itemKey="text"
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom-start"
                    tag="span"
                    triggerRef={[Function]}
                  >
                    <Popover
                      className="emotion-31"
                      id="dropdown-11"
                      tag="span"
                    >
                      <span
                        className="emotion-31"
                        id="dropdown-11"
                      >
                        <PopoverTrigger
                          aria-activedescendant="dropdown-11-menu"
                          aria-describedby="dropdown-11-content"
                          aria-expanded={true}
                          aria-haspopup={true}
                          aria-owns="dropdown-11-content"
                          element="button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                          type="button"
                          variant="regular"
                        >
                          <PopoverTrigger
                            component="span"
                          >
                            <PopoverTrigger
                              className="emotion-3"
                              component="span"
                            >
                              <span
                                className="emotion-3"
                              >
                                <Button
                                  aria-activedescendant="dropdown-11-menu"
                                  aria-describedby="dropdown-11-content"
                                  aria-expanded={true}
                                  aria-haspopup={true}
                                  aria-owns="dropdown-11-content"
                                  element="button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  role="button"
                                  size="large"
                                  type="button"
                                  variant="regular"
                                >
                                  <Button
                                    aria-activedescendant="dropdown-11-menu"
                                    aria-describedby="dropdown-11-content"
                                    aria-expanded={true}
                                    aria-haspopup={true}
                                    aria-owns="dropdown-11-content"
                                    element="button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    role="button"
                                    size="large"
                                    text="Menu"
                                    type="button"
                                    variant="regular"
                                  >
                                    <button
                                      aria-activedescendant="dropdown-11-menu"
                                      aria-describedby="dropdown-11-content"
                                      aria-expanded={true}
                                      aria-haspopup={true}
                                      aria-owns="dropdown-11-content"
                                      className="emotion-2"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      role="button"
                                      type="button"
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-1"
                                        >
                                          <Styled(span)
                                            size="large"
                                          >
                                            <span
                                              className="emotion-0"
                                            >
                                              Menu
                                            </span>
                                          </Styled(span)>
                                        </span>
                                      </Styled(span)>
                                    </button>
                                  </Button>
                                </Button>
                              </span>
                            </PopoverTrigger>
                          </PopoverTrigger>
                        </PopoverTrigger>
                        <DropdownContent
                          hasArrow={true}
                          id="dropdown-11-content"
                          onBlur={[Function]}
                          placement="bottom-start"
                        >
                          <DropdownContent
                            hasArrow={true}
                            id="dropdown-11-content"
                            onBlur={[Function]}
                            placement="bottom-start"
                          >
                            <DropdownContent
                              className="emotion-27"
                              id="dropdown-11-content"
                              onBlur={[Function]}
                              placement="bottom-start"
                            >
                              <RtlPopper
                                className="emotion-27"
                                id="dropdown-11-content"
                                onBlur={[Function]}
                                placement="bottom-start"
                                theme={
                                  Object {
                                    "backgroundColor_active": "#ebeff5",
                                    "backgroundColor_dangerPrimary": "#de1b1b",
                                    "backgroundColor_dangerPrimary_active": "#b80d0d",
                                    "backgroundColor_dangerPrimary_focus": "#de1b1b",
                                    "backgroundColor_dangerPrimary_hover": "#f55353",
                                    "backgroundColor_danger_active": "#fad4d4",
                                    "backgroundColor_danger_focus": "#faf0f0",
                                    "backgroundColor_danger_hover": "#faf0f0",
                                    "backgroundColor_disabled": "#dde3ed",
                                    "backgroundColor_focus": "#f5f7fa",
                                    "backgroundColor_hover": "#f5f7fa",
                                    "backgroundColor_successPrimary": "#2a854e",
                                    "backgroundColor_successPrimary_active": "#20693d",
                                    "backgroundColor_successPrimary_focus": "#2a854e",
                                    "backgroundColor_successPrimary_hover": "#3ba164",
                                    "backgroundColor_success_active": "#abedc5",
                                    "backgroundColor_success_focus": "#e1faeb",
                                    "backgroundColor_success_hover": "#e1faeb",
                                    "backgroundColor_themePrimary": "#3272d9",
                                    "backgroundColor_themePrimary_active": "#1d5bbf",
                                    "backgroundColor_themePrimary_focus": "#3272d9",
                                    "backgroundColor_themePrimary_hover": "#5691f0",
                                    "backgroundColor_theme_selected": "#f0f5fc",
                                    "backgroundColor_theme_selectedActive": "#accbfc",
                                    "backgroundColor_theme_selectedHover": "#cfe0fc",
                                    "backgroundColor_warningPrimary": "#ad5f00",
                                    "backgroundColor_warningPrimary_active": "#8a4d03",
                                    "backgroundColor_warningPrimary_focus": "#ad5f00",
                                    "backgroundColor_warningPrimary_hover": "#cf7911",
                                    "backgroundColor_warning_active": "#fad8af",
                                    "backgroundColor_warning_focus": "#fcf2e6",
                                    "backgroundColor_warning_hover": "#fcf2e6",
                                    "borderColor": "#c8d1e0",
                                    "borderColor_danger": "#de1b1b",
                                    "borderColor_danger_active": "#b80d0d",
                                    "borderColor_danger_focus": "#b80d0d",
                                    "borderColor_danger_hover": "#f55353",
                                    "borderColor_success": "#2a854e",
                                    "borderColor_success_active": "#20693d",
                                    "borderColor_success_focus": "#20693d",
                                    "borderColor_success_hover": "#3ba164",
                                    "borderColor_theme": "#3272d9",
                                    "borderColor_theme_active": "#1d5bbf",
                                    "borderColor_theme_focus": "#1d5bbf",
                                    "borderColor_theme_hover": "#5691f0",
                                    "borderColor_warning": "#ad5f00",
                                    "borderColor_warning_active": "#8a4d03",
                                    "borderColor_warning_focus": "#8a4d03",
                                    "borderColor_warning_hover": "#cf7911",
                                    "borderRadius_1": "0.1875em",
                                    "boxShadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                                    "boxShadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                                    "boxShadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                                    "boxShadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                                    "boxShadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                                    "boxShadow_focusInner": "#ffffff",
                                    "breakpoint_medium": "768px",
                                    "breakpoint_narrow": "512px",
                                    "breakpoint_wide": "1024px",
                                    "color": "#333840",
                                    "color_black": "#1d1f24",
                                    "color_danger": "#de1b1b",
                                    "color_dangerPrimary": "#ffffff",
                                    "color_danger_active": "#b80d0d",
                                    "color_danger_focus": "#de1b1b",
                                    "color_danger_hover": "#f55353",
                                    "color_disabled": "#afbacc",
                                    "color_gray_10": "#f5f7fa",
                                    "color_gray_100": "#333840",
                                    "color_gray_20": "#ebeff5",
                                    "color_gray_30": "#dde3ed",
                                    "color_gray_40": "#c8d1e0",
                                    "color_gray_50": "#afbacc",
                                    "color_gray_60": "#8e99ab",
                                    "color_gray_70": "#707a8a",
                                    "color_gray_80": "#58606e",
                                    "color_gray_90": "#434a54",
                                    "color_inverted": "#ffffff",
                                    "color_mouse": "#58606e",
                                    "color_readOnly": "#58606e",
                                    "color_required": "#de1b1b",
                                    "color_success": "#2a854e",
                                    "color_successPrimary": "#ffffff",
                                    "color_success_active": "#20693d",
                                    "color_success_focus": "#2a854e",
                                    "color_success_hover": "#3ba164",
                                    "color_theme": "#3272d9",
                                    "color_themePrimary": "#ffffff",
                                    "color_theme_10": "#f0f5fc",
                                    "color_theme_100": "#15233b",
                                    "color_theme_20": "#cfe0fc",
                                    "color_theme_30": "#accbfc",
                                    "color_theme_40": "#84b1fa",
                                    "color_theme_50": "#5691f0",
                                    "color_theme_60": "#3272d9",
                                    "color_theme_70": "#1d5bbf",
                                    "color_theme_80": "#114599",
                                    "color_theme_90": "#103570",
                                    "color_theme_active": "#1d5bbf",
                                    "color_theme_focus": "#3272d9",
                                    "color_theme_hover": "#5691f0",
                                    "color_warning": "#ad5f00",
                                    "color_warningPrimary": "#ffffff",
                                    "color_warning_active": "#8a4d03",
                                    "color_warning_focus": "#ad5f00",
                                    "color_warning_hover": "#cf7911",
                                    "color_white": "#ffffff",
                                    "direction": "ltr",
                                    "fontFamily": "\\"Open Sans\\"",
                                    "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                                    "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                                    "fontSize_base": "16px",
                                    "fontSize_mouse": "0.6875em",
                                    "fontSize_prose": "1em",
                                    "fontSize_ui": "0.875em",
                                    "fontWeight_bold": 700,
                                    "fontWeight_extraBold": 800,
                                    "fontWeight_regular": 400,
                                    "fontWeight_semiBold": 600,
                                    "h1_color": "#333840",
                                    "h1_fontSize": "2.125em",
                                    "h1_fontWeight": 800,
                                    "h2_color": "#58606e",
                                    "h2_fontSize": "1.75em",
                                    "h2_fontWeight": 700,
                                    "h3_color": "#58606e",
                                    "h3_fontSize": "1.375em",
                                    "h3_fontWeight": 700,
                                    "h4_color": "#58606e",
                                    "h4_fontSize": "1.125em",
                                    "h4_fontWeight": 700,
                                    "h5_color": "#333840",
                                    "h5_fontSize": "0.875em",
                                    "h5_fontWeight": 700,
                                    "h6_color": "#58606e",
                                    "h6_fontSize": "0.875em",
                                    "h6_fontWeight": 400,
                                    "icon_color": "#58606e",
                                    "icon_color_danger": "#de1b1b",
                                    "icon_color_success": "#2a854e",
                                    "icon_color_theme": "#3272d9",
                                    "icon_color_warning": "#ad5f00",
                                    "input_backgroundColor": "#ffffff",
                                    "input_backgroundColor_disabled": "#ebeff5",
                                    "input_color_placeholder": "#8e99ab",
                                    "lineHeight": 1.25,
                                    "lineHeight_heading": 1.25,
                                    "lineHeight_heading_small": 1.5,
                                    "lineHeight_prose": 1.5,
                                    "panel_backgroundColor": "#ffffff",
                                    "panel_backgroundColor_inverted": "#434a54",
                                    "panel_borderColor": "#ebeff5",
                                    "panel_borderColor_inverted": "#434a54",
                                    "size_jumbo": "3.25em",
                                    "size_large": "2.5em",
                                    "size_medium": "2em",
                                    "size_small": "1.5em",
                                    "space_inline_lg": "1.5em",
                                    "space_inline_md": "1em",
                                    "space_inline_sm": "0.5em",
                                    "space_inline_xl": "2em",
                                    "space_inline_xs": "0.25em",
                                    "space_inline_xxl": "4em",
                                    "space_inline_xxs": "0.125em",
                                    "space_inset_lg": "1.5em",
                                    "space_inset_md": "1em",
                                    "space_inset_sm": "0.5em",
                                    "space_stack_lg": "1.5em",
                                    "space_stack_md": "1em",
                                    "space_stack_sm": "0.5em",
                                    "space_stack_xl": "2em",
                                    "space_stack_xs": "0.25em",
                                    "space_stack_xxl": "4em",
                                    "space_stack_xxs": "0.125em",
                                    "well_backgroundColor": "#ebeff5",
                                    "well_backgroundColor_danger": "#fad4d4",
                                    "well_backgroundColor_success": "#abedc5",
                                    "well_backgroundColor_warning": "#fad8af",
                                    "well_borderColor_danger": "#fa8e8e",
                                    "well_borderColor_success": "#57c282",
                                    "well_borderColor_warning": "#e89c3f",
                                    "zIndex_100": 100,
                                    "zIndex_1600": 1600,
                                    "zIndex_200": 200,
                                    "zIndex_400": 400,
                                    "zIndex_800": 800,
                                  }
                                }
                              >
                                <Popper
                                  className="emotion-27"
                                  component="div"
                                  eventsEnabled={true}
                                  id="dropdown-11-content"
                                  modifiers={Object {}}
                                  onBlur={[Function]}
                                  placement="bottom-start"
                                  positionFixed={false}
                                >
                                  <div
                                    className="emotion-27"
                                    id="dropdown-11-content"
                                    onBlur={[Function]}
                                    style={
                                      Object {
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                      }
                                    }
                                  >
                                    <Menu
                                      data={
                                        Array [
                                          Object {
                                            "items": Array [
                                              Object {
                                                "text": "Light years",
                                              },
                                              Object {
                                                "text": "Star stuff",
                                              },
                                              Object {
                                                "text": "Encyclopaedia galactica",
                                              },
                                              Object {
                                                "text": "Cosmic ocean",
                                              },
                                            ],
                                          },
                                        ]
                                      }
                                      id="dropdown-11-menu"
                                      item={[Function]}
                                      itemKey="text"
                                      role="menu"
                                    >
                                      <Menu
                                        id="dropdown-11-menu"
                                        item={[Function]}
                                        itemKey="text"
                                        role="menu"
                                      >
                                        <div
                                          className="emotion-26"
                                          id="dropdown-11-menu"
                                          role="menu"
                                        >
                                          <MenuGroup
                                            key="0"
                                          >
                                            <MenuGroup>
                                              <div
                                                className="emotion-25"
                                              >
                                                <MenuItem
                                                  index={0}
                                                  item={
                                                    Object {
                                                      "text": "Light years",
                                                    }
                                                  }
                                                  key="Light years"
                                                  render={[Function]}
                                                  text="Light years"
                                                >
                                                  <MenuItem
                                                    id="dropdown-11-item-0"
                                                    index={0}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Light years",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Light years"
                                                  >
                                                    <MenuItem
                                                      id="dropdown-11-item-0"
                                                      index={0}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Light years",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Light years"
                                                    >
                                                      <div
                                                        className="emotion-9"
                                                        id="dropdown-11-item-0"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-8"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-7"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    Light years
                                                                  </span>
                                                                </Styled(span)>
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-6"
                                                                  />
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </MenuItem>
                                                  </MenuItem>
                                                </MenuItem>
                                                <MenuItem
                                                  index={1}
                                                  item={
                                                    Object {
                                                      "text": "Star stuff",
                                                    }
                                                  }
                                                  key="Star stuff"
                                                  render={[Function]}
                                                  text="Star stuff"
                                                >
                                                  <MenuItem
                                                    id="dropdown-11-item-1"
                                                    index={1}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Star stuff",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Star stuff"
                                                  >
                                                    <MenuItem
                                                      id="dropdown-11-item-1"
                                                      index={1}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Star stuff",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Star stuff"
                                                    >
                                                      <div
                                                        className="emotion-9"
                                                        id="dropdown-11-item-1"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-8"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-7"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    Star stuff
                                                                  </span>
                                                                </Styled(span)>
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-6"
                                                                  />
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </MenuItem>
                                                  </MenuItem>
                                                </MenuItem>
                                                <MenuItem
                                                  index={2}
                                                  item={
                                                    Object {
                                                      "text": "Encyclopaedia galactica",
                                                    }
                                                  }
                                                  key="Encyclopaedia galactica"
                                                  render={[Function]}
                                                  text="Encyclopaedia galactica"
                                                >
                                                  <MenuItem
                                                    id="dropdown-11-item-2"
                                                    index={2}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Encyclopaedia galactica",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Encyclopaedia galactica"
                                                  >
                                                    <MenuItem
                                                      id="dropdown-11-item-2"
                                                      index={2}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Encyclopaedia galactica",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Encyclopaedia galactica"
                                                    >
                                                      <div
                                                        className="emotion-9"
                                                        id="dropdown-11-item-2"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-8"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-7"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    Encyclopaedia galactica
                                                                  </span>
                                                                </Styled(span)>
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-6"
                                                                  />
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </MenuItem>
                                                  </MenuItem>
                                                </MenuItem>
                                                <MenuItem
                                                  index={3}
                                                  item={
                                                    Object {
                                                      "text": "Cosmic ocean",
                                                    }
                                                  }
                                                  key="Cosmic ocean"
                                                  render={[Function]}
                                                  text="Cosmic ocean"
                                                >
                                                  <MenuItem
                                                    id="dropdown-11-item-3"
                                                    index={3}
                                                    isHighlighted={false}
                                                    item={
                                                      Object {
                                                        "text": "Cosmic ocean",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="menuitem"
                                                    tabIndex={null}
                                                    text="Cosmic ocean"
                                                  >
                                                    <MenuItem
                                                      id="dropdown-11-item-3"
                                                      index={3}
                                                      isHighlighted={false}
                                                      item={
                                                        Object {
                                                          "text": "Cosmic ocean",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="menuitem"
                                                      tabIndex={null}
                                                      text="Cosmic ocean"
                                                    >
                                                      <div
                                                        className="emotion-9"
                                                        id="dropdown-11-item-3"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="menuitem"
                                                        tabIndex={null}
                                                      >
                                                        <Styled(span)>
                                                          <span
                                                            className="emotion-8"
                                                          >
                                                            <Styled(span)>
                                                              <span
                                                                className="emotion-7"
                                                              >
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-5"
                                                                  >
                                                                    Cosmic ocean
                                                                  </span>
                                                                </Styled(span)>
                                                                <Styled(span)>
                                                                  <span
                                                                    className="emotion-6"
                                                                  />
                                                                </Styled(span)>
                                                              </span>
                                                            </Styled(span)>
                                                          </span>
                                                        </Styled(span)>
                                                      </div>
                                                    </MenuItem>
                                                  </MenuItem>
                                                </MenuItem>
                                              </div>
                                            </MenuGroup>
                                          </MenuGroup>
                                        </div>
                                      </Menu>
                                    </Menu>
                                  </div>
                                </Popper>
                              </RtlPopper>
                            </DropdownContent>
                          </DropdownContent>
                        </DropdownContent>
                        <EventListener
                          listeners={
                            Array [
                              Object {
                                "event": "click",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                              Object {
                                "event": "keydown",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                            ]
                          }
                        />
                      </span>
                    </Popover>
                  </Popover>
                </Popover>
              </Dropdown>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(Button)
        element="button"
        minimal={true}
        onClick={[Function]}
        size="small"
        type="button"
        variant="regular"
      >
        <Button
          className="emotion-38"
          element="button"
          minimal={true}
          onClick={[Function]}
          size="small"
          type="button"
          variant="regular"
        >
          <Button
            className="emotion-38"
            element="button"
            minimal={true}
            onClick={[Function]}
            size="small"
            text="Re-center"
            type="button"
            variant="regular"
          >
            <button
              className="emotion-37"
              onClick={[Function]}
              type="button"
            >
              <Styled(span)>
                <span
                  className="emotion-1"
                >
                  <Styled(span)
                    size="small"
                  >
                    <span
                      className="emotion-35"
                    >
                      Re-center
                    </span>
                  </Styled(span)>
                </span>
              </Styled(span)>
            </button>
          </Button>
        </Button>
      </Styled(Button)>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Dropdown demo examples Snapshots: wide 1`] = `
.emotion-31 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-33 {
  height: 210px;
}

.emotion-27 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 21.5em;
  z-index: 100;
}

.emotion-27 *,
.emotion-27 *::before,
.emotion-27 *::after {
  box-sizing: inherit;
}

.emotion-27[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-27[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-27[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-27[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-27[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-25 {
  margin: 0.5em 0;
}

.emotion-25:first-child,
.emotion-25 + .emotion-25 {
  margin-top: 0;
}

.emotion-25:last-child {
  margin-bottom: 0;
}

.emotion-9 {
  color: #333840;
  cursor: pointer;
  font-weight: 400;
  padding: 0.5em 1em;
}

.emotion-9:focus {
  background-color: #f5f7fa;
  outline: 0;
}

.emotion-9:hover {
  background-color: #f5f7fa;
}

.emotion-9:active {
  background-color: #ebeff5;
}

.emotion-9[aria-selected="true"] {
  background-color: #f0f5fc;
  font-weight: 700;
}

.emotion-9[aria-selected="true"]:active {
  background-color: #accbfc;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.emotion-9 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.1875em 0 0.25em;
  white-space: normal;
  word-break: break-all;
}

.emotion-5 {
  font-size: 0.875em;
  margin-right: 0.5714285714285714em;
  word-break: break-word;
}

.emotion-6 {
  color: #58606e;
  font-size: 0.6875em;
  padding-top: 0.18181818181818182em;
  word-break: break-word;
}

<Styled(div)>
  <div
    className="emotion-33"
  >
    <Dropdown
      data={
        Array [
          Object {
            "items": Array [
              Object {
                "text": "Light years star stuff",
              },
              Object {
                "text": "Harvesting star light citizens of distant epochs",
              },
              Object {
                "text": "Encyclopaedia galactica vastness is bearable",
              },
              Object {
                "text": "Shores of the cosmic ocean",
              },
            ],
          },
        ]
      }
      isOpen={true}
      itemKey="text"
      placement="bottom-start"
      wide={true}
    >
      <Popover
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        id="dropdown-5"
        isOpen={true}
        itemKey="text"
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom-start"
        triggerRef={[Function]}
        wide={true}
      >
        <Popover
          content={[Function]}
          focusTriggerOnClose={true}
          hasArrow={true}
          id="dropdown-5"
          isOpen={true}
          itemKey="text"
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom-start"
          tag="span"
          triggerRef={[Function]}
          wide={true}
        >
          <Popover
            className="emotion-31"
            id="dropdown-5"
            tag="span"
          >
            <span
              className="emotion-31"
              id="dropdown-5"
            >
              <PopoverTrigger
                aria-activedescendant="dropdown-5-menu"
                aria-describedby="dropdown-5-content"
                aria-expanded={true}
                aria-haspopup={true}
                aria-owns="dropdown-5-content"
                element="button"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                size="large"
                type="button"
                variant="regular"
              >
                <PopoverTrigger
                  component="span"
                >
                  <PopoverTrigger
                    className="emotion-3"
                    component="span"
                  >
                    <span
                      className="emotion-3"
                    >
                      <Button
                        aria-activedescendant="dropdown-5-menu"
                        aria-describedby="dropdown-5-content"
                        aria-expanded={true}
                        aria-haspopup={true}
                        aria-owns="dropdown-5-content"
                        element="button"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        role="button"
                        size="large"
                        type="button"
                        variant="regular"
                      >
                        <Button
                          aria-activedescendant="dropdown-5-menu"
                          aria-describedby="dropdown-5-content"
                          aria-expanded={true}
                          aria-haspopup={true}
                          aria-owns="dropdown-5-content"
                          element="button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          role="button"
                          size="large"
                          text="Menu"
                          type="button"
                          variant="regular"
                        >
                          <button
                            aria-activedescendant="dropdown-5-menu"
                            aria-describedby="dropdown-5-content"
                            aria-expanded={true}
                            aria-haspopup={true}
                            aria-owns="dropdown-5-content"
                            className="emotion-2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            role="button"
                            type="button"
                          >
                            <Styled(span)>
                              <span
                                className="emotion-1"
                              >
                                <Styled(span)
                                  size="large"
                                >
                                  <span
                                    className="emotion-0"
                                  >
                                    Menu
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </button>
                        </Button>
                      </Button>
                    </span>
                  </PopoverTrigger>
                </PopoverTrigger>
              </PopoverTrigger>
              <DropdownContent
                hasArrow={true}
                id="dropdown-5-content"
                onBlur={[Function]}
                placement="bottom-start"
                wide={true}
              >
                <DropdownContent
                  hasArrow={true}
                  id="dropdown-5-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                  wide={true}
                >
                  <DropdownContent
                    className="emotion-27"
                    id="dropdown-5-content"
                    onBlur={[Function]}
                    placement="bottom-start"
                  >
                    <RtlPopper
                      className="emotion-27"
                      id="dropdown-5-content"
                      onBlur={[Function]}
                      placement="bottom-start"
                      theme={
                        Object {
                          "backgroundColor_active": "#ebeff5",
                          "backgroundColor_dangerPrimary": "#de1b1b",
                          "backgroundColor_dangerPrimary_active": "#b80d0d",
                          "backgroundColor_dangerPrimary_focus": "#de1b1b",
                          "backgroundColor_dangerPrimary_hover": "#f55353",
                          "backgroundColor_danger_active": "#fad4d4",
                          "backgroundColor_danger_focus": "#faf0f0",
                          "backgroundColor_danger_hover": "#faf0f0",
                          "backgroundColor_disabled": "#dde3ed",
                          "backgroundColor_focus": "#f5f7fa",
                          "backgroundColor_hover": "#f5f7fa",
                          "backgroundColor_successPrimary": "#2a854e",
                          "backgroundColor_successPrimary_active": "#20693d",
                          "backgroundColor_successPrimary_focus": "#2a854e",
                          "backgroundColor_successPrimary_hover": "#3ba164",
                          "backgroundColor_success_active": "#abedc5",
                          "backgroundColor_success_focus": "#e1faeb",
                          "backgroundColor_success_hover": "#e1faeb",
                          "backgroundColor_themePrimary": "#3272d9",
                          "backgroundColor_themePrimary_active": "#1d5bbf",
                          "backgroundColor_themePrimary_focus": "#3272d9",
                          "backgroundColor_themePrimary_hover": "#5691f0",
                          "backgroundColor_theme_selected": "#f0f5fc",
                          "backgroundColor_theme_selectedActive": "#accbfc",
                          "backgroundColor_theme_selectedHover": "#cfe0fc",
                          "backgroundColor_warningPrimary": "#ad5f00",
                          "backgroundColor_warningPrimary_active": "#8a4d03",
                          "backgroundColor_warningPrimary_focus": "#ad5f00",
                          "backgroundColor_warningPrimary_hover": "#cf7911",
                          "backgroundColor_warning_active": "#fad8af",
                          "backgroundColor_warning_focus": "#fcf2e6",
                          "backgroundColor_warning_hover": "#fcf2e6",
                          "borderColor": "#c8d1e0",
                          "borderColor_danger": "#de1b1b",
                          "borderColor_danger_active": "#b80d0d",
                          "borderColor_danger_focus": "#b80d0d",
                          "borderColor_danger_hover": "#f55353",
                          "borderColor_success": "#2a854e",
                          "borderColor_success_active": "#20693d",
                          "borderColor_success_focus": "#20693d",
                          "borderColor_success_hover": "#3ba164",
                          "borderColor_theme": "#3272d9",
                          "borderColor_theme_active": "#1d5bbf",
                          "borderColor_theme_focus": "#1d5bbf",
                          "borderColor_theme_hover": "#5691f0",
                          "borderColor_warning": "#ad5f00",
                          "borderColor_warning_active": "#8a4d03",
                          "borderColor_warning_focus": "#8a4d03",
                          "borderColor_warning_hover": "#cf7911",
                          "borderRadius_1": "0.1875em",
                          "boxShadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                          "boxShadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                          "boxShadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                          "boxShadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                          "boxShadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                          "boxShadow_focusInner": "#ffffff",
                          "breakpoint_medium": "768px",
                          "breakpoint_narrow": "512px",
                          "breakpoint_wide": "1024px",
                          "color": "#333840",
                          "color_black": "#1d1f24",
                          "color_danger": "#de1b1b",
                          "color_dangerPrimary": "#ffffff",
                          "color_danger_active": "#b80d0d",
                          "color_danger_focus": "#de1b1b",
                          "color_danger_hover": "#f55353",
                          "color_disabled": "#afbacc",
                          "color_gray_10": "#f5f7fa",
                          "color_gray_100": "#333840",
                          "color_gray_20": "#ebeff5",
                          "color_gray_30": "#dde3ed",
                          "color_gray_40": "#c8d1e0",
                          "color_gray_50": "#afbacc",
                          "color_gray_60": "#8e99ab",
                          "color_gray_70": "#707a8a",
                          "color_gray_80": "#58606e",
                          "color_gray_90": "#434a54",
                          "color_inverted": "#ffffff",
                          "color_mouse": "#58606e",
                          "color_readOnly": "#58606e",
                          "color_required": "#de1b1b",
                          "color_success": "#2a854e",
                          "color_successPrimary": "#ffffff",
                          "color_success_active": "#20693d",
                          "color_success_focus": "#2a854e",
                          "color_success_hover": "#3ba164",
                          "color_theme": "#3272d9",
                          "color_themePrimary": "#ffffff",
                          "color_theme_10": "#f0f5fc",
                          "color_theme_100": "#15233b",
                          "color_theme_20": "#cfe0fc",
                          "color_theme_30": "#accbfc",
                          "color_theme_40": "#84b1fa",
                          "color_theme_50": "#5691f0",
                          "color_theme_60": "#3272d9",
                          "color_theme_70": "#1d5bbf",
                          "color_theme_80": "#114599",
                          "color_theme_90": "#103570",
                          "color_theme_active": "#1d5bbf",
                          "color_theme_focus": "#3272d9",
                          "color_theme_hover": "#5691f0",
                          "color_warning": "#ad5f00",
                          "color_warningPrimary": "#ffffff",
                          "color_warning_active": "#8a4d03",
                          "color_warning_focus": "#ad5f00",
                          "color_warning_hover": "#cf7911",
                          "color_white": "#ffffff",
                          "direction": "ltr",
                          "fontFamily": "\\"Open Sans\\"",
                          "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                          "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                          "fontSize_base": "16px",
                          "fontSize_mouse": "0.6875em",
                          "fontSize_prose": "1em",
                          "fontSize_ui": "0.875em",
                          "fontWeight_bold": 700,
                          "fontWeight_extraBold": 800,
                          "fontWeight_regular": 400,
                          "fontWeight_semiBold": 600,
                          "h1_color": "#333840",
                          "h1_fontSize": "2.125em",
                          "h1_fontWeight": 800,
                          "h2_color": "#58606e",
                          "h2_fontSize": "1.75em",
                          "h2_fontWeight": 700,
                          "h3_color": "#58606e",
                          "h3_fontSize": "1.375em",
                          "h3_fontWeight": 700,
                          "h4_color": "#58606e",
                          "h4_fontSize": "1.125em",
                          "h4_fontWeight": 700,
                          "h5_color": "#333840",
                          "h5_fontSize": "0.875em",
                          "h5_fontWeight": 700,
                          "h6_color": "#58606e",
                          "h6_fontSize": "0.875em",
                          "h6_fontWeight": 400,
                          "icon_color": "#58606e",
                          "icon_color_danger": "#de1b1b",
                          "icon_color_success": "#2a854e",
                          "icon_color_theme": "#3272d9",
                          "icon_color_warning": "#ad5f00",
                          "input_backgroundColor": "#ffffff",
                          "input_backgroundColor_disabled": "#ebeff5",
                          "input_color_placeholder": "#8e99ab",
                          "lineHeight": 1.25,
                          "lineHeight_heading": 1.25,
                          "lineHeight_heading_small": 1.5,
                          "lineHeight_prose": 1.5,
                          "panel_backgroundColor": "#ffffff",
                          "panel_backgroundColor_inverted": "#434a54",
                          "panel_borderColor": "#ebeff5",
                          "panel_borderColor_inverted": "#434a54",
                          "size_jumbo": "3.25em",
                          "size_large": "2.5em",
                          "size_medium": "2em",
                          "size_small": "1.5em",
                          "space_inline_lg": "1.5em",
                          "space_inline_md": "1em",
                          "space_inline_sm": "0.5em",
                          "space_inline_xl": "2em",
                          "space_inline_xs": "0.25em",
                          "space_inline_xxl": "4em",
                          "space_inline_xxs": "0.125em",
                          "space_inset_lg": "1.5em",
                          "space_inset_md": "1em",
                          "space_inset_sm": "0.5em",
                          "space_stack_lg": "1.5em",
                          "space_stack_md": "1em",
                          "space_stack_sm": "0.5em",
                          "space_stack_xl": "2em",
                          "space_stack_xs": "0.25em",
                          "space_stack_xxl": "4em",
                          "space_stack_xxs": "0.125em",
                          "well_backgroundColor": "#ebeff5",
                          "well_backgroundColor_danger": "#fad4d4",
                          "well_backgroundColor_success": "#abedc5",
                          "well_backgroundColor_warning": "#fad8af",
                          "well_borderColor_danger": "#fa8e8e",
                          "well_borderColor_success": "#57c282",
                          "well_borderColor_warning": "#e89c3f",
                          "zIndex_100": 100,
                          "zIndex_1600": 1600,
                          "zIndex_200": 200,
                          "zIndex_400": 400,
                          "zIndex_800": 800,
                        }
                      }
                    >
                      <Popper
                        className="emotion-27"
                        component="div"
                        eventsEnabled={true}
                        id="dropdown-5-content"
                        modifiers={Object {}}
                        onBlur={[Function]}
                        placement="bottom-start"
                        positionFixed={false}
                      >
                        <div
                          className="emotion-27"
                          id="dropdown-5-content"
                          onBlur={[Function]}
                          style={
                            Object {
                              "opacity": 0,
                              "pointerEvents": "none",
                              "position": "absolute",
                            }
                          }
                        >
                          <Menu
                            data={
                              Array [
                                Object {
                                  "items": Array [
                                    Object {
                                      "text": "Light years star stuff",
                                    },
                                    Object {
                                      "text": "Harvesting star light citizens of distant epochs",
                                    },
                                    Object {
                                      "text": "Encyclopaedia galactica vastness is bearable",
                                    },
                                    Object {
                                      "text": "Shores of the cosmic ocean",
                                    },
                                  ],
                                },
                              ]
                            }
                            id="dropdown-5-menu"
                            item={[Function]}
                            itemKey="text"
                            role="menu"
                          >
                            <Menu
                              id="dropdown-5-menu"
                              item={[Function]}
                              itemKey="text"
                              role="menu"
                            >
                              <div
                                className="emotion-26"
                                id="dropdown-5-menu"
                                role="menu"
                              >
                                <MenuGroup
                                  key="0"
                                >
                                  <MenuGroup>
                                    <div
                                      className="emotion-25"
                                    >
                                      <MenuItem
                                        index={0}
                                        item={
                                          Object {
                                            "text": "Light years star stuff",
                                          }
                                        }
                                        key="Light years star stuff"
                                        render={[Function]}
                                        text="Light years star stuff"
                                      >
                                        <MenuItem
                                          id="dropdown-5-item-0"
                                          index={0}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Light years star stuff",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Light years star stuff"
                                        >
                                          <MenuItem
                                            id="dropdown-5-item-0"
                                            index={0}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Light years star stuff",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Light years star stuff"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-5-item-0"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Light years star stuff
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={1}
                                        item={
                                          Object {
                                            "text": "Harvesting star light citizens of distant epochs",
                                          }
                                        }
                                        key="Harvesting star light citizens of distant epochs"
                                        render={[Function]}
                                        text="Harvesting star light citizens of distant epochs"
                                      >
                                        <MenuItem
                                          id="dropdown-5-item-1"
                                          index={1}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Harvesting star light citizens of distant epochs",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Harvesting star light citizens of distant epochs"
                                        >
                                          <MenuItem
                                            id="dropdown-5-item-1"
                                            index={1}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Harvesting star light citizens of distant epochs",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Harvesting star light citizens of distant epochs"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-5-item-1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Harvesting star light citizens of distant epochs
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={2}
                                        item={
                                          Object {
                                            "text": "Encyclopaedia galactica vastness is bearable",
                                          }
                                        }
                                        key="Encyclopaedia galactica vastness is bearable"
                                        render={[Function]}
                                        text="Encyclopaedia galactica vastness is bearable"
                                      >
                                        <MenuItem
                                          id="dropdown-5-item-2"
                                          index={2}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Encyclopaedia galactica vastness is bearable",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Encyclopaedia galactica vastness is bearable"
                                        >
                                          <MenuItem
                                            id="dropdown-5-item-2"
                                            index={2}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Encyclopaedia galactica vastness is bearable",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Encyclopaedia galactica vastness is bearable"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-5-item-2"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Encyclopaedia galactica vastness is bearable
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                      <MenuItem
                                        index={3}
                                        item={
                                          Object {
                                            "text": "Shores of the cosmic ocean",
                                          }
                                        }
                                        key="Shores of the cosmic ocean"
                                        render={[Function]}
                                        text="Shores of the cosmic ocean"
                                      >
                                        <MenuItem
                                          id="dropdown-5-item-3"
                                          index={3}
                                          isHighlighted={false}
                                          item={
                                            Object {
                                              "text": "Shores of the cosmic ocean",
                                            }
                                          }
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="menuitem"
                                          tabIndex={null}
                                          text="Shores of the cosmic ocean"
                                        >
                                          <MenuItem
                                            id="dropdown-5-item-3"
                                            index={3}
                                            isHighlighted={false}
                                            item={
                                              Object {
                                                "text": "Shores of the cosmic ocean",
                                              }
                                            }
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="menuitem"
                                            tabIndex={null}
                                            text="Shores of the cosmic ocean"
                                          >
                                            <div
                                              className="emotion-9"
                                              id="dropdown-5-item-3"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex={null}
                                            >
                                              <Styled(span)>
                                                <span
                                                  className="emotion-8"
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-7"
                                                    >
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-5"
                                                        >
                                                          Shores of the cosmic ocean
                                                        </span>
                                                      </Styled(span)>
                                                      <Styled(span)>
                                                        <span
                                                          className="emotion-6"
                                                        />
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </span>
                                              </Styled(span)>
                                            </div>
                                          </MenuItem>
                                        </MenuItem>
                                      </MenuItem>
                                    </div>
                                  </MenuGroup>
                                </MenuGroup>
                              </div>
                            </Menu>
                          </Menu>
                        </div>
                      </Popper>
                    </RtlPopper>
                  </DropdownContent>
                </DropdownContent>
              </DropdownContent>
              <EventListener
                listeners={
                  Array [
                    Object {
                      "event": "click",
                      "handler": [Function],
                      "options": true,
                      "target": "document",
                    },
                    Object {
                      "event": "keydown",
                      "handler": [Function],
                      "options": true,
                      "target": "document",
                    },
                  ]
                }
              />
            </span>
          </Popover>
        </Popover>
      </Popover>
    </Dropdown>
  </div>
</Styled(div)>
`;

exports[`Dropdown render props children renders expected content 1`] = `
.emotion-0 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

<Dropdown
  data={
    Array [
      Object {
        "onClick": [MockFunction],
        "text": "item 1",
      },
      Object {
        "divider": true,
      },
      Object {
        "onClick": [MockFunction],
        "text": "item 2",
      },
    ]
  }
  itemKey="text"
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-31"
    isOpen={false}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-31"
      isOpen={false}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      tag="span"
      triggerRef={[Function]}
    >
      <Popover
        className="emotion-0"
        id="dropdown-31"
        tag="span"
      >
        <span
          className="emotion-0"
          id="dropdown-31"
        >
          <div
            aria-describedby="dropdown-31-content"
            aria-expanded={false}
            aria-haspopup={true}
            aria-owns="dropdown-31-content"
            onBlur={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
          >
            Trigger
          </div>
        </span>
      </Popover>
    </Popover>
  </Popover>
</Dropdown>
`;

exports[`Dropdown render props item renders expected content 1`] = `
.emotion-9 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  display: inline-block;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  margin: 0.5em 0;
}

.emotion-3:first-child,
.emotion-3 + .emotion-3 {
  margin-top: 0;
}

.emotion-3:last-child {
  margin-bottom: 0;
}

.emotion-5 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-5[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-5[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-5[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-5[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-5[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-2 {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5em 0;
}

<Dropdown
  data={
    Array [
      Object {
        "onClick": [MockFunction],
        "text": "item 1",
      },
      Object {
        "divider": true,
      },
      Object {
        "onClick": [MockFunction],
        "text": "item 2",
      },
    ]
  }
  isOpen={true}
  item={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "helpers": Object {
              "close": [Function],
              "focusTrigger": [Function],
              "open": [Function],
            },
            "props": Object {
              "aria-disabled": undefined,
              "children": "item 1",
              "disabled": undefined,
              "id": "dropdown-35-item-0",
              "index": 0,
              "isHighlighted": false,
              "item": Object {
                "onClick": [MockFunction],
                "text": "item 1",
              },
              "onClick": [Function],
              "onKeyDown": [Function],
              "role": "menuitem",
              "tabIndex": null,
              "text": "item 1",
            },
            "state": Object {
              "highlightedIndex": undefined,
              "isOpen": true,
            },
          },
        ],
        Array [
          Object {
            "helpers": Object {
              "close": [Function],
              "focusTrigger": [Function],
              "open": [Function],
            },
            "props": Object {
              "aria-disabled": undefined,
              "children": "item 2",
              "disabled": undefined,
              "id": "dropdown-35-item-1",
              "index": 1,
              "isHighlighted": false,
              "item": Object {
                "onClick": [MockFunction],
                "text": "item 2",
              },
              "onClick": [Function],
              "onKeyDown": [Function],
              "role": "menuitem",
              "tabIndex": null,
              "text": "item 2",
            },
            "state": Object {
              "highlightedIndex": undefined,
              "isOpen": true,
            },
          },
        ],
      ],
    }
  }
  itemKey="text"
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-35"
    isOpen={true}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-35"
      isOpen={true}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      tag="span"
      triggerRef={[Function]}
    >
      <Popover
        className="emotion-9"
        id="dropdown-35"
        tag="span"
      >
        <span
          className="emotion-9"
          id="dropdown-35"
        >
          <PopoverTrigger
            aria-activedescendant="dropdown-35-menu"
            aria-describedby="dropdown-35-content"
            aria-expanded={true}
            aria-haspopup={true}
            aria-owns="dropdown-35-content"
            onBlur={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
          >
            <PopoverTrigger
              component="span"
            >
              <PopoverTrigger
                className="emotion-0"
                component="span"
              >
                <span
                  className="emotion-0"
                >
                  <button
                    aria-activedescendant="dropdown-35-menu"
                    aria-describedby="dropdown-35-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-35-content"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                  >
                    trigger
                  </button>
                </span>
              </PopoverTrigger>
            </PopoverTrigger>
          </PopoverTrigger>
          <DropdownContent
            hasArrow={true}
            id="dropdown-35-content"
            onBlur={[Function]}
            placement="bottom-start"
          >
            <DropdownContent
              hasArrow={true}
              id="dropdown-35-content"
              onBlur={[Function]}
              placement="bottom-start"
            >
              <DropdownContent
                className="emotion-5"
                id="dropdown-35-content"
                onBlur={[Function]}
                placement="bottom-start"
              >
                <RtlPopper
                  className="emotion-5"
                  id="dropdown-35-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                  theme={
                    Object {
                      "backgroundColor_active": "#ebeff5",
                      "backgroundColor_dangerPrimary": "#de1b1b",
                      "backgroundColor_dangerPrimary_active": "#b80d0d",
                      "backgroundColor_dangerPrimary_focus": "#de1b1b",
                      "backgroundColor_dangerPrimary_hover": "#f55353",
                      "backgroundColor_danger_active": "#fad4d4",
                      "backgroundColor_danger_focus": "#faf0f0",
                      "backgroundColor_danger_hover": "#faf0f0",
                      "backgroundColor_disabled": "#dde3ed",
                      "backgroundColor_focus": "#f5f7fa",
                      "backgroundColor_hover": "#f5f7fa",
                      "backgroundColor_successPrimary": "#2a854e",
                      "backgroundColor_successPrimary_active": "#20693d",
                      "backgroundColor_successPrimary_focus": "#2a854e",
                      "backgroundColor_successPrimary_hover": "#3ba164",
                      "backgroundColor_success_active": "#abedc5",
                      "backgroundColor_success_focus": "#e1faeb",
                      "backgroundColor_success_hover": "#e1faeb",
                      "backgroundColor_themePrimary": "#3272d9",
                      "backgroundColor_themePrimary_active": "#1d5bbf",
                      "backgroundColor_themePrimary_focus": "#3272d9",
                      "backgroundColor_themePrimary_hover": "#5691f0",
                      "backgroundColor_theme_selected": "#f0f5fc",
                      "backgroundColor_theme_selectedActive": "#accbfc",
                      "backgroundColor_theme_selectedHover": "#cfe0fc",
                      "backgroundColor_warningPrimary": "#ad5f00",
                      "backgroundColor_warningPrimary_active": "#8a4d03",
                      "backgroundColor_warningPrimary_focus": "#ad5f00",
                      "backgroundColor_warningPrimary_hover": "#cf7911",
                      "backgroundColor_warning_active": "#fad8af",
                      "backgroundColor_warning_focus": "#fcf2e6",
                      "backgroundColor_warning_hover": "#fcf2e6",
                      "borderColor": "#c8d1e0",
                      "borderColor_danger": "#de1b1b",
                      "borderColor_danger_active": "#b80d0d",
                      "borderColor_danger_focus": "#b80d0d",
                      "borderColor_danger_hover": "#f55353",
                      "borderColor_success": "#2a854e",
                      "borderColor_success_active": "#20693d",
                      "borderColor_success_focus": "#20693d",
                      "borderColor_success_hover": "#3ba164",
                      "borderColor_theme": "#3272d9",
                      "borderColor_theme_active": "#1d5bbf",
                      "borderColor_theme_focus": "#1d5bbf",
                      "borderColor_theme_hover": "#5691f0",
                      "borderColor_warning": "#ad5f00",
                      "borderColor_warning_active": "#8a4d03",
                      "borderColor_warning_focus": "#8a4d03",
                      "borderColor_warning_hover": "#cf7911",
                      "borderRadius_1": "0.1875em",
                      "boxShadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                      "boxShadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                      "boxShadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                      "boxShadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                      "boxShadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                      "boxShadow_focusInner": "#ffffff",
                      "breakpoint_medium": "768px",
                      "breakpoint_narrow": "512px",
                      "breakpoint_wide": "1024px",
                      "color": "#333840",
                      "color_black": "#1d1f24",
                      "color_danger": "#de1b1b",
                      "color_dangerPrimary": "#ffffff",
                      "color_danger_active": "#b80d0d",
                      "color_danger_focus": "#de1b1b",
                      "color_danger_hover": "#f55353",
                      "color_disabled": "#afbacc",
                      "color_gray_10": "#f5f7fa",
                      "color_gray_100": "#333840",
                      "color_gray_20": "#ebeff5",
                      "color_gray_30": "#dde3ed",
                      "color_gray_40": "#c8d1e0",
                      "color_gray_50": "#afbacc",
                      "color_gray_60": "#8e99ab",
                      "color_gray_70": "#707a8a",
                      "color_gray_80": "#58606e",
                      "color_gray_90": "#434a54",
                      "color_inverted": "#ffffff",
                      "color_mouse": "#58606e",
                      "color_readOnly": "#58606e",
                      "color_required": "#de1b1b",
                      "color_success": "#2a854e",
                      "color_successPrimary": "#ffffff",
                      "color_success_active": "#20693d",
                      "color_success_focus": "#2a854e",
                      "color_success_hover": "#3ba164",
                      "color_theme": "#3272d9",
                      "color_themePrimary": "#ffffff",
                      "color_theme_10": "#f0f5fc",
                      "color_theme_100": "#15233b",
                      "color_theme_20": "#cfe0fc",
                      "color_theme_30": "#accbfc",
                      "color_theme_40": "#84b1fa",
                      "color_theme_50": "#5691f0",
                      "color_theme_60": "#3272d9",
                      "color_theme_70": "#1d5bbf",
                      "color_theme_80": "#114599",
                      "color_theme_90": "#103570",
                      "color_theme_active": "#1d5bbf",
                      "color_theme_focus": "#3272d9",
                      "color_theme_hover": "#5691f0",
                      "color_warning": "#ad5f00",
                      "color_warningPrimary": "#ffffff",
                      "color_warning_active": "#8a4d03",
                      "color_warning_focus": "#ad5f00",
                      "color_warning_hover": "#cf7911",
                      "color_white": "#ffffff",
                      "direction": "ltr",
                      "fontFamily": "\\"Open Sans\\"",
                      "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                      "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                      "fontSize_base": "16px",
                      "fontSize_mouse": "0.6875em",
                      "fontSize_prose": "1em",
                      "fontSize_ui": "0.875em",
                      "fontWeight_bold": 700,
                      "fontWeight_extraBold": 800,
                      "fontWeight_regular": 400,
                      "fontWeight_semiBold": 600,
                      "h1_color": "#333840",
                      "h1_fontSize": "2.125em",
                      "h1_fontWeight": 800,
                      "h2_color": "#58606e",
                      "h2_fontSize": "1.75em",
                      "h2_fontWeight": 700,
                      "h3_color": "#58606e",
                      "h3_fontSize": "1.375em",
                      "h3_fontWeight": 700,
                      "h4_color": "#58606e",
                      "h4_fontSize": "1.125em",
                      "h4_fontWeight": 700,
                      "h5_color": "#333840",
                      "h5_fontSize": "0.875em",
                      "h5_fontWeight": 700,
                      "h6_color": "#58606e",
                      "h6_fontSize": "0.875em",
                      "h6_fontWeight": 400,
                      "icon_color": "#58606e",
                      "icon_color_danger": "#de1b1b",
                      "icon_color_success": "#2a854e",
                      "icon_color_theme": "#3272d9",
                      "icon_color_warning": "#ad5f00",
                      "input_backgroundColor": "#ffffff",
                      "input_backgroundColor_disabled": "#ebeff5",
                      "input_color_placeholder": "#8e99ab",
                      "lineHeight": 1.25,
                      "lineHeight_heading": 1.25,
                      "lineHeight_heading_small": 1.5,
                      "lineHeight_prose": 1.5,
                      "panel_backgroundColor": "#ffffff",
                      "panel_backgroundColor_inverted": "#434a54",
                      "panel_borderColor": "#ebeff5",
                      "panel_borderColor_inverted": "#434a54",
                      "size_jumbo": "3.25em",
                      "size_large": "2.5em",
                      "size_medium": "2em",
                      "size_small": "1.5em",
                      "space_inline_lg": "1.5em",
                      "space_inline_md": "1em",
                      "space_inline_sm": "0.5em",
                      "space_inline_xl": "2em",
                      "space_inline_xs": "0.25em",
                      "space_inline_xxl": "4em",
                      "space_inline_xxs": "0.125em",
                      "space_inset_lg": "1.5em",
                      "space_inset_md": "1em",
                      "space_inset_sm": "0.5em",
                      "space_stack_lg": "1.5em",
                      "space_stack_md": "1em",
                      "space_stack_sm": "0.5em",
                      "space_stack_xl": "2em",
                      "space_stack_xs": "0.25em",
                      "space_stack_xxl": "4em",
                      "space_stack_xxs": "0.125em",
                      "well_backgroundColor": "#ebeff5",
                      "well_backgroundColor_danger": "#fad4d4",
                      "well_backgroundColor_success": "#abedc5",
                      "well_backgroundColor_warning": "#fad8af",
                      "well_borderColor_danger": "#fa8e8e",
                      "well_borderColor_success": "#57c282",
                      "well_borderColor_warning": "#e89c3f",
                      "zIndex_100": 100,
                      "zIndex_1600": 1600,
                      "zIndex_200": 200,
                      "zIndex_400": 400,
                      "zIndex_800": 800,
                    }
                  }
                >
                  <Popper
                    className="emotion-5"
                    component="div"
                    eventsEnabled={true}
                    id="dropdown-35-content"
                    modifiers={Object {}}
                    onBlur={[Function]}
                    placement="bottom-start"
                    positionFixed={false}
                  >
                    <div
                      className="emotion-5"
                      id="dropdown-35-content"
                      onBlur={[Function]}
                      style={
                        Object {
                          "opacity": 0,
                          "pointerEvents": "none",
                          "position": "absolute",
                        }
                      }
                    >
                      <Menu
                        data={
                          Array [
                            Object {
                              "onClick": [MockFunction],
                              "text": "item 1",
                            },
                            Object {
                              "divider": true,
                            },
                            Object {
                              "onClick": [MockFunction],
                              "text": "item 2",
                            },
                          ]
                        }
                        id="dropdown-35-menu"
                        item={[Function]}
                        itemKey="text"
                        role="menu"
                      >
                        <Menu
                          id="dropdown-35-menu"
                          item={[Function]}
                          itemKey="text"
                          role="menu"
                        >
                          <div
                            className="emotion-4"
                            id="dropdown-35-menu"
                            role="menu"
                          >
                            <MenuGroup
                              key="0"
                            >
                              <MenuGroup>
                                <div
                                  className="emotion-3"
                                >
                                  <MenuItem
                                    index={0}
                                    item={
                                      Object {
                                        "onClick": [MockFunction],
                                        "text": "item 1",
                                      }
                                    }
                                    key="item 1"
                                    onClick={[MockFunction]}
                                    render={[Function]}
                                    text="item 1"
                                  >
                                    <div
                                      id="dropdown-35-item-0"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="menuitem"
                                      tabIndex={null}
                                    >
                                      item 1
                                    </div>
                                  </MenuItem>
                                  <MenuDivider
                                    key="1"
                                  >
                                    <MenuDivider
                                      role="separator"
                                    >
                                      <div
                                        className="emotion-2"
                                        role="separator"
                                      />
                                    </MenuDivider>
                                  </MenuDivider>
                                  <MenuItem
                                    index={1}
                                    item={
                                      Object {
                                        "onClick": [MockFunction],
                                        "text": "item 2",
                                      }
                                    }
                                    key="item 2"
                                    onClick={[MockFunction]}
                                    render={[Function]}
                                    text="item 2"
                                  >
                                    <div
                                      id="dropdown-35-item-1"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="menuitem"
                                      tabIndex={null}
                                    >
                                      item 2
                                    </div>
                                  </MenuItem>
                                </div>
                              </MenuGroup>
                            </MenuGroup>
                          </div>
                        </Menu>
                      </Menu>
                    </div>
                  </Popper>
                </RtlPopper>
              </DropdownContent>
            </DropdownContent>
          </DropdownContent>
          <EventListener
            listeners={
              Array [
                Object {
                  "event": "click",
                  "handler": [Function],
                  "options": true,
                  "target": "document",
                },
                Object {
                  "event": "keydown",
                  "handler": [Function],
                  "options": true,
                  "target": "document",
                },
              ]
            }
          />
        </span>
      </Popover>
    </Popover>
  </Popover>
</Dropdown>
`;

exports[`Dropdown render props menu renders expected content 1`] = `
.emotion-6 {
  box-sizing: border-box;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  max-height: 23em;
  overflow-y: auto;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 14em;
  z-index: 100;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2[data-placement^="top"] {
  margin-bottom: 5px;
}

.emotion-2[data-placement^="bottom"] {
  margin-top: 5px;
}

.emotion-2[data-placement^="left"] {
  margin-right: 5px;
}

.emotion-2[data-placement^="right"] {
  margin-left: 5px;
}

.emotion-2[data-x-out-of-boundaries] {
  visibility: hidden;
}

<Dropdown
  data={
    Array [
      Object {
        "onClick": [MockFunction],
        "text": "item 1",
      },
      Object {
        "divider": true,
      },
      Object {
        "onClick": [MockFunction],
        "text": "item 2",
      },
    ]
  }
  isOpen={true}
  itemKey="text"
  menu={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "helpers": Object {
              "close": [Function],
              "focusTrigger": [Function],
              "open": [Function],
            },
            "props": Object {
              "data": Array [
                Object {
                  "onClick": [MockFunction],
                  "text": "item 1",
                },
                Object {
                  "divider": true,
                },
                Object {
                  "onClick": [MockFunction],
                  "text": "item 2",
                },
              ],
              "id": "dropdown-33-menu",
              "item": [Function],
              "itemKey": "text",
              "role": "menu",
            },
            "state": Object {
              "highlightedIndex": undefined,
              "isOpen": true,
            },
          },
        ],
      ],
    }
  }
  placement="bottom-start"
>
  <Popover
    content={[Function]}
    focusTriggerOnClose={true}
    hasArrow={true}
    id="dropdown-33"
    isOpen={true}
    itemKey="text"
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom-start"
    triggerRef={[Function]}
  >
    <Popover
      content={[Function]}
      focusTriggerOnClose={true}
      hasArrow={true}
      id="dropdown-33"
      isOpen={true}
      itemKey="text"
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom-start"
      tag="span"
      triggerRef={[Function]}
    >
      <Popover
        className="emotion-6"
        id="dropdown-33"
        tag="span"
      >
        <span
          className="emotion-6"
          id="dropdown-33"
        >
          <PopoverTrigger
            aria-activedescendant="dropdown-33-menu"
            aria-describedby="dropdown-33-content"
            aria-expanded={true}
            aria-haspopup={true}
            aria-owns="dropdown-33-content"
            onBlur={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            role="button"
          >
            <PopoverTrigger
              component="span"
            >
              <PopoverTrigger
                className="emotion-0"
                component="span"
              >
                <span
                  className="emotion-0"
                >
                  <button
                    aria-activedescendant="dropdown-33-menu"
                    aria-describedby="dropdown-33-content"
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-owns="dropdown-33-content"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    role="button"
                  >
                    trigger
                  </button>
                </span>
              </PopoverTrigger>
            </PopoverTrigger>
          </PopoverTrigger>
          <DropdownContent
            hasArrow={true}
            id="dropdown-33-content"
            onBlur={[Function]}
            placement="bottom-start"
          >
            <DropdownContent
              hasArrow={true}
              id="dropdown-33-content"
              onBlur={[Function]}
              placement="bottom-start"
            >
              <DropdownContent
                className="emotion-2"
                id="dropdown-33-content"
                onBlur={[Function]}
                placement="bottom-start"
              >
                <RtlPopper
                  className="emotion-2"
                  id="dropdown-33-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                  theme={
                    Object {
                      "backgroundColor_active": "#ebeff5",
                      "backgroundColor_dangerPrimary": "#de1b1b",
                      "backgroundColor_dangerPrimary_active": "#b80d0d",
                      "backgroundColor_dangerPrimary_focus": "#de1b1b",
                      "backgroundColor_dangerPrimary_hover": "#f55353",
                      "backgroundColor_danger_active": "#fad4d4",
                      "backgroundColor_danger_focus": "#faf0f0",
                      "backgroundColor_danger_hover": "#faf0f0",
                      "backgroundColor_disabled": "#dde3ed",
                      "backgroundColor_focus": "#f5f7fa",
                      "backgroundColor_hover": "#f5f7fa",
                      "backgroundColor_successPrimary": "#2a854e",
                      "backgroundColor_successPrimary_active": "#20693d",
                      "backgroundColor_successPrimary_focus": "#2a854e",
                      "backgroundColor_successPrimary_hover": "#3ba164",
                      "backgroundColor_success_active": "#abedc5",
                      "backgroundColor_success_focus": "#e1faeb",
                      "backgroundColor_success_hover": "#e1faeb",
                      "backgroundColor_themePrimary": "#3272d9",
                      "backgroundColor_themePrimary_active": "#1d5bbf",
                      "backgroundColor_themePrimary_focus": "#3272d9",
                      "backgroundColor_themePrimary_hover": "#5691f0",
                      "backgroundColor_theme_selected": "#f0f5fc",
                      "backgroundColor_theme_selectedActive": "#accbfc",
                      "backgroundColor_theme_selectedHover": "#cfe0fc",
                      "backgroundColor_warningPrimary": "#ad5f00",
                      "backgroundColor_warningPrimary_active": "#8a4d03",
                      "backgroundColor_warningPrimary_focus": "#ad5f00",
                      "backgroundColor_warningPrimary_hover": "#cf7911",
                      "backgroundColor_warning_active": "#fad8af",
                      "backgroundColor_warning_focus": "#fcf2e6",
                      "backgroundColor_warning_hover": "#fcf2e6",
                      "borderColor": "#c8d1e0",
                      "borderColor_danger": "#de1b1b",
                      "borderColor_danger_active": "#b80d0d",
                      "borderColor_danger_focus": "#b80d0d",
                      "borderColor_danger_hover": "#f55353",
                      "borderColor_success": "#2a854e",
                      "borderColor_success_active": "#20693d",
                      "borderColor_success_focus": "#20693d",
                      "borderColor_success_hover": "#3ba164",
                      "borderColor_theme": "#3272d9",
                      "borderColor_theme_active": "#1d5bbf",
                      "borderColor_theme_focus": "#1d5bbf",
                      "borderColor_theme_hover": "#5691f0",
                      "borderColor_warning": "#ad5f00",
                      "borderColor_warning_active": "#8a4d03",
                      "borderColor_warning_focus": "#8a4d03",
                      "borderColor_warning_hover": "#cf7911",
                      "borderRadius_1": "0.1875em",
                      "boxShadow_1": "0 1px 2px 0 rgba(0,0,0,0.2), 0 2px 4px 0 rgba(0,0,0,0.2)",
                      "boxShadow_2": "0 2px 4px 0 rgba(0,0,0,0.2), 0 4px 8px 0 rgba(0,0,0,0.2)",
                      "boxShadow_3": "0 4px 8px 0 rgba(0,0,0,0.2), 0 8px 16px 0 rgba(0,0,0,0.2)",
                      "boxShadow_4": "0 8px 16px 0 rgba(0,0,0,0.2), 0 20px 16px -8px rgba(0,0,0,0.2)",
                      "boxShadow_5": "0 16px 24px 0 rgba(0,0,0,0.2), 0 32px 24px -16px rgba(0,0,0,0.2)",
                      "boxShadow_focusInner": "#ffffff",
                      "breakpoint_medium": "768px",
                      "breakpoint_narrow": "512px",
                      "breakpoint_wide": "1024px",
                      "color": "#333840",
                      "color_black": "#1d1f24",
                      "color_danger": "#de1b1b",
                      "color_dangerPrimary": "#ffffff",
                      "color_danger_active": "#b80d0d",
                      "color_danger_focus": "#de1b1b",
                      "color_danger_hover": "#f55353",
                      "color_disabled": "#afbacc",
                      "color_gray_10": "#f5f7fa",
                      "color_gray_100": "#333840",
                      "color_gray_20": "#ebeff5",
                      "color_gray_30": "#dde3ed",
                      "color_gray_40": "#c8d1e0",
                      "color_gray_50": "#afbacc",
                      "color_gray_60": "#8e99ab",
                      "color_gray_70": "#707a8a",
                      "color_gray_80": "#58606e",
                      "color_gray_90": "#434a54",
                      "color_inverted": "#ffffff",
                      "color_mouse": "#58606e",
                      "color_readOnly": "#58606e",
                      "color_required": "#de1b1b",
                      "color_success": "#2a854e",
                      "color_successPrimary": "#ffffff",
                      "color_success_active": "#20693d",
                      "color_success_focus": "#2a854e",
                      "color_success_hover": "#3ba164",
                      "color_theme": "#3272d9",
                      "color_themePrimary": "#ffffff",
                      "color_theme_10": "#f0f5fc",
                      "color_theme_100": "#15233b",
                      "color_theme_20": "#cfe0fc",
                      "color_theme_30": "#accbfc",
                      "color_theme_40": "#84b1fa",
                      "color_theme_50": "#5691f0",
                      "color_theme_60": "#3272d9",
                      "color_theme_70": "#1d5bbf",
                      "color_theme_80": "#114599",
                      "color_theme_90": "#103570",
                      "color_theme_active": "#1d5bbf",
                      "color_theme_focus": "#3272d9",
                      "color_theme_hover": "#5691f0",
                      "color_warning": "#ad5f00",
                      "color_warningPrimary": "#ffffff",
                      "color_warning_active": "#8a4d03",
                      "color_warning_focus": "#ad5f00",
                      "color_warning_hover": "#cf7911",
                      "color_white": "#ffffff",
                      "direction": "ltr",
                      "fontFamily": "\\"Open Sans\\"",
                      "fontFamily_monospace": "\\"SF Mono\\", \\"Droid Sans Mono\\", \\"Source Code Pro\\", Monaco, Consolas, \\"Courier New\\", Courier, monospace",
                      "fontFamily_system": "-apple-system, system-ui, BlinkMacSystemFont, \\"Segoe UI\\", Roboto, Helvetica, Arial, sans-serif, \\"Apple Color Emoji\\", \\"Segoe UI Emoji\\", \\"Segoe UI Symbol\\"",
                      "fontSize_base": "16px",
                      "fontSize_mouse": "0.6875em",
                      "fontSize_prose": "1em",
                      "fontSize_ui": "0.875em",
                      "fontWeight_bold": 700,
                      "fontWeight_extraBold": 800,
                      "fontWeight_regular": 400,
                      "fontWeight_semiBold": 600,
                      "h1_color": "#333840",
                      "h1_fontSize": "2.125em",
                      "h1_fontWeight": 800,
                      "h2_color": "#58606e",
                      "h2_fontSize": "1.75em",
                      "h2_fontWeight": 700,
                      "h3_color": "#58606e",
                      "h3_fontSize": "1.375em",
                      "h3_fontWeight": 700,
                      "h4_color": "#58606e",
                      "h4_fontSize": "1.125em",
                      "h4_fontWeight": 700,
                      "h5_color": "#333840",
                      "h5_fontSize": "0.875em",
                      "h5_fontWeight": 700,
                      "h6_color": "#58606e",
                      "h6_fontSize": "0.875em",
                      "h6_fontWeight": 400,
                      "icon_color": "#58606e",
                      "icon_color_danger": "#de1b1b",
                      "icon_color_success": "#2a854e",
                      "icon_color_theme": "#3272d9",
                      "icon_color_warning": "#ad5f00",
                      "input_backgroundColor": "#ffffff",
                      "input_backgroundColor_disabled": "#ebeff5",
                      "input_color_placeholder": "#8e99ab",
                      "lineHeight": 1.25,
                      "lineHeight_heading": 1.25,
                      "lineHeight_heading_small": 1.5,
                      "lineHeight_prose": 1.5,
                      "panel_backgroundColor": "#ffffff",
                      "panel_backgroundColor_inverted": "#434a54",
                      "panel_borderColor": "#ebeff5",
                      "panel_borderColor_inverted": "#434a54",
                      "size_jumbo": "3.25em",
                      "size_large": "2.5em",
                      "size_medium": "2em",
                      "size_small": "1.5em",
                      "space_inline_lg": "1.5em",
                      "space_inline_md": "1em",
                      "space_inline_sm": "0.5em",
                      "space_inline_xl": "2em",
                      "space_inline_xs": "0.25em",
                      "space_inline_xxl": "4em",
                      "space_inline_xxs": "0.125em",
                      "space_inset_lg": "1.5em",
                      "space_inset_md": "1em",
                      "space_inset_sm": "0.5em",
                      "space_stack_lg": "1.5em",
                      "space_stack_md": "1em",
                      "space_stack_sm": "0.5em",
                      "space_stack_xl": "2em",
                      "space_stack_xs": "0.25em",
                      "space_stack_xxl": "4em",
                      "space_stack_xxs": "0.125em",
                      "well_backgroundColor": "#ebeff5",
                      "well_backgroundColor_danger": "#fad4d4",
                      "well_backgroundColor_success": "#abedc5",
                      "well_backgroundColor_warning": "#fad8af",
                      "well_borderColor_danger": "#fa8e8e",
                      "well_borderColor_success": "#57c282",
                      "well_borderColor_warning": "#e89c3f",
                      "zIndex_100": 100,
                      "zIndex_1600": 1600,
                      "zIndex_200": 200,
                      "zIndex_400": 400,
                      "zIndex_800": 800,
                    }
                  }
                >
                  <Popper
                    className="emotion-2"
                    component="div"
                    eventsEnabled={true}
                    id="dropdown-33-content"
                    modifiers={Object {}}
                    onBlur={[Function]}
                    placement="bottom-start"
                    positionFixed={false}
                  >
                    <div
                      className="emotion-2"
                      id="dropdown-33-content"
                      onBlur={[Function]}
                      style={
                        Object {
                          "opacity": 0,
                          "pointerEvents": "none",
                          "position": "absolute",
                        }
                      }
                    >
                      <div
                        data={
                          Array [
                            Object {
                              "onClick": [MockFunction],
                              "text": "item 1",
                            },
                            Object {
                              "divider": true,
                            },
                            Object {
                              "onClick": [MockFunction],
                              "text": "item 2",
                            },
                          ]
                        }
                        id="dropdown-33-menu"
                        role="menu"
                      >
                        Menu
                      </div>
                    </div>
                  </Popper>
                </RtlPopper>
              </DropdownContent>
            </DropdownContent>
          </DropdownContent>
          <EventListener
            listeners={
              Array [
                Object {
                  "event": "click",
                  "handler": [Function],
                  "options": true,
                  "target": "document",
                },
                Object {
                  "event": "keydown",
                  "handler": [Function],
                  "options": true,
                  "target": "document",
                },
              ]
            }
          />
        </span>
      </Popover>
    </Popover>
  </Popover>
</Dropdown>
`;
