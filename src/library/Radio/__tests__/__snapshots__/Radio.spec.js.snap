// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio demo examples Snapshots: controlled 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

<Component>
  <MyForm>
    <DemoForm>
      <Styled(form)
        onSubmit={[Function]}
      >
        <form
          className="emotion-10"
          onSubmit={[Function]}
        >
          <Radio
            checked={true}
            label="Quartz"
            labelPosition="end"
            name="mineral"
            onChange={[Function]}
            size="large"
            value="quartz"
          >
            <WithTheme(Themed(Choice))
              checked={true}
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Quartz"
              labelPosition="end"
              name="mineral"
              onChange={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="radio"
              value="quartz"
            >
              <Themed(Choice)
                checked={true}
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Quartz"
                labelPosition="end"
                name="mineral"
                onChange={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="radio"
                value="quartz"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          checked={true}
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Quartz"
                          labelPosition="end"
                          name="mineral"
                          onChange={[Function]}
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="radio"
                          value="quartz"
                        >
                          <Choice
                            labelPosition="end"
                            size="large"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                checked={true}
                                innerRef={[Function]}
                                name="mineral"
                                onChange={[Function]}
                                size="large"
                                type="radio"
                                value="quartz"
                              >
                                <input
                                  checked={true}
                                  className="emotion-0"
                                  name="mineral"
                                  onChange={[Function]}
                                  size="large"
                                  type="radio"
                                  value="quartz"
                                />
                              </Styled(input)>
                              <Control
                                size="large"
                              >
                                <span
                                  className="emotion-2"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="large"
                              >
                                <span
                                  className="emotion-3"
                                >
                                  Quartz
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
          <Radio
            checked={false}
            label="Magnetite"
            labelPosition="end"
            name="mineral"
            onChange={[Function]}
            size="large"
            value="magnetite"
          >
            <WithTheme(Themed(Choice))
              checked={false}
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Magnetite"
              labelPosition="end"
              name="mineral"
              onChange={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="radio"
              value="magnetite"
            >
              <Themed(Choice)
                checked={false}
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Magnetite"
                labelPosition="end"
                name="mineral"
                onChange={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="radio"
                value="magnetite"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          checked={false}
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Magnetite"
                          labelPosition="end"
                          name="mineral"
                          onChange={[Function]}
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="radio"
                          value="magnetite"
                        >
                          <Choice
                            labelPosition="end"
                            size="large"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                checked={false}
                                innerRef={[Function]}
                                name="mineral"
                                onChange={[Function]}
                                size="large"
                                type="radio"
                                value="magnetite"
                              >
                                <input
                                  checked={false}
                                  className="emotion-0"
                                  name="mineral"
                                  onChange={[Function]}
                                  size="large"
                                  type="radio"
                                  value="magnetite"
                                />
                              </Styled(input)>
                              <Control
                                size="large"
                              >
                                <span
                                  className="emotion-2"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="large"
                              >
                                <span
                                  className="emotion-3"
                                >
                                  Magnetite
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
        </form>
      </Styled(form)>
    </DemoForm>
  </MyForm>
</Component>
`;

exports[`Radio demo examples Snapshots: disabled 1`] = `
.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ebeff5;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-3 {
  color: #afbacc;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Radio
        disabled={true}
        label="Quartz"
        labelPosition="end"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          disabled={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="quartz"
        >
          <Themed(Choice)
            disabled={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="quartz"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      disabled={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Quartz"
                      labelPosition="end"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="quartz"
                    >
                      <Choice
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            disabled={true}
                            innerRef={[Function]}
                            size="large"
                            type="radio"
                            value="quartz"
                          >
                            <input
                              className="emotion-0"
                              disabled={true}
                              size="large"
                              type="radio"
                              value="quartz"
                            />
                          </Styled(input)>
                          <Control
                            disabled={true}
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            disabled={true}
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Quartz
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        defaultChecked={true}
        disabled={true}
        label="Magnetite"
        labelPosition="end"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          disabled={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="magnetite"
        >
          <Themed(Choice)
            defaultChecked={true}
            disabled={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="magnetite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      defaultChecked={true}
                      disabled={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Magnetite"
                      labelPosition="end"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="magnetite"
                    >
                      <Choice
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            defaultChecked={true}
                            disabled={true}
                            innerRef={[Function]}
                            size="large"
                            type="radio"
                            value="magnetite"
                          >
                            <input
                              className="emotion-0"
                              defaultChecked={true}
                              disabled={true}
                              size="large"
                              type="radio"
                              value="magnetite"
                            />
                          </Styled(input)>
                          <Control
                            disabled={true}
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            disabled={true}
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Magnetite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: hide-label 1`] = `
.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-5 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-4::after {
  content: '.';
  font-size: 0.875rem;
  visibility: hidden;
  width: 0.1px;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-5"
      onSubmit={[Function]}
    >
      <Radio
        hideLabel={true}
        label="Select All"
        labelPosition="end"
        size="large"
      >
        <WithTheme(Themed(Choice))
          hideLabel={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Select All"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
        >
          <Themed(Choice)
            hideLabel={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Select All"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      hideLabel={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Select All"
                      labelPosition="end"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                    >
                      <Choice
                        hideLabel={true}
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            size="large"
                            type="radio"
                          >
                            <input
                              className="emotion-0"
                              size="large"
                              type="radio"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            hideLabel={true}
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Select All
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: input-ref 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-8[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-7 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5rem;
  margin: 0;
  min-width: 2.5rem;
  padding: 0 0.5rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus:active,
.emotion-7:focus:hover {
  border-color: #c8d1e0;
}

.emotion-7:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-7::-moz-focus-inner {
  border: 0;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5rem;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5rem;
}

.emotion-7 [role="img"]:only-child {
  margin: 0;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-5 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875rem;
  line-height: 2.5rem;
}

.emotion-5:first-child {
  padding-left: 0.5rem;
}

.emotion-5:last-child {
  padding-right: 0.5rem;
}

<Component>
  <MyForm>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-8"
        >
          <Radio
            inputRef={[Function]}
            label="Option 1"
            labelPosition="end"
            size="large"
            value="1"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Option 1"
              labelPosition="end"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="radio"
              value="1"
            >
              <Themed(Choice)
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Option 1"
                labelPosition="end"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="radio"
                value="1"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Option 1"
                          labelPosition="end"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="radio"
                          value="1"
                        >
                          <Choice
                            labelPosition="end"
                            size="large"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                innerRef={[Function]}
                                size="large"
                                type="radio"
                                value="1"
                              >
                                <input
                                  className="emotion-0"
                                  size="large"
                                  type="radio"
                                  value="1"
                                />
                              </Styled(input)>
                              <Control
                                size="large"
                              >
                                <span
                                  className="emotion-2"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="large"
                              >
                                <span
                                  className="emotion-3"
                                >
                                  Option 1
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
          <Button
            element="button"
            onClick={[Function]}
            size="large"
            type="button"
          >
            <Button
              element="button"
              onClick={[Function]}
              size="large"
              text="Focus the input"
              type="button"
            >
              <button
                className="emotion-7"
                onClick={[Function]}
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-6"
                  >
                    <Styled(span)
                      size="large"
                    >
                      <span
                        className="emotion-5"
                      >
                        Focus the input
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
      </Styled(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`Radio demo examples Snapshots: invalid 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Radio
        defaultChecked={true}
        invalid={true}
        label="Quartz"
        labelPosition="end"
        name="mineral"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          invalid={true}
          label="Quartz"
          labelPosition="end"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            invalid={true}
            label="Quartz"
            labelPosition="end"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="quartz"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      defaultChecked={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      invalid={true}
                      label="Quartz"
                      labelPosition="end"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="quartz"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            aria-invalid={true}
                            defaultChecked={true}
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="quartz"
                          >
                            <input
                              aria-invalid={true}
                              className="emotion-0"
                              defaultChecked={true}
                              name="mineral"
                              size="large"
                              type="radio"
                              value="quartz"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Quartz
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        invalid={true}
        label="Magnetite"
        labelPosition="end"
        name="mineral"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          invalid={true}
          label="Magnetite"
          labelPosition="end"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            invalid={true}
            label="Magnetite"
            labelPosition="end"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="magnetite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      invalid={true}
                      label="Magnetite"
                      labelPosition="end"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="magnetite"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            aria-invalid={true}
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="magnetite"
                          >
                            <input
                              aria-invalid={true}
                              className="emotion-0"
                              name="mineral"
                              size="large"
                              type="radio"
                              value="magnetite"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Magnetite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: label-position-and-justification 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-23 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-5 {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5rem 0;
}

.emotion-10 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-10:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-9 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 0;
  margin-right: 1rem;
}

.emotion-16 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.emotion-16 *,
.emotion-16 *::before,
.emotion-16 *::after {
  box-sizing: inherit;
}

.emotion-16:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-15 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: auto;
  margin-right: 0;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-21 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 0;
  margin-right: auto;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-23"
      onSubmit={[Function]}
    >
      <Radio
        label="Quartz"
        labelPosition="end"
        name="mineral"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="quartz"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="quartz"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Quartz"
                      labelPosition="end"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="quartz"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="quartz"
                          >
                            <input
                              className="emotion-0"
                              name="mineral"
                              size="large"
                              type="radio"
                              value="quartz"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Quartz
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="emotion-5"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <Radio
        label="Magnetite"
        labelPosition="start"
        name="mineral"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="start"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="start"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="magnetite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Magnetite"
                      labelPosition="start"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="magnetite"
                    >
                      <Choice
                        labelPosition="start"
                        size="large"
                      >
                        <label
                          className="emotion-10"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="magnetite"
                          >
                            <input
                              className="emotion-0"
                              name="mineral"
                              size="large"
                              type="radio"
                              value="magnetite"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="start"
                            size="large"
                          >
                            <span
                              className="emotion-9"
                            >
                              Magnetite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="emotion-5"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <Radio
        justify={true}
        label="Azurite"
        labelPosition="end"
        name="mineral"
        size="large"
        value="azurite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          justify={true}
          label="Azurite"
          labelPosition="end"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="azurite"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            justify={true}
            label="Azurite"
            labelPosition="end"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="azurite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      justify={true}
                      label="Azurite"
                      labelPosition="end"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="azurite"
                    >
                      <Choice
                        justify={true}
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-16"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="azurite"
                          >
                            <input
                              className="emotion-0"
                              name="mineral"
                              size="large"
                              type="radio"
                              value="azurite"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            justify={true}
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-15"
                            >
                              Azurite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="emotion-5"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <Radio
        justify={true}
        label="Hematite"
        labelPosition="start"
        name="mineral"
        size="large"
        value="hematite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          justify={true}
          label="Hematite"
          labelPosition="start"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="hematite"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            justify={true}
            label="Hematite"
            labelPosition="start"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="hematite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      justify={true}
                      label="Hematite"
                      labelPosition="start"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="hematite"
                    >
                      <Choice
                        justify={true}
                        labelPosition="start"
                        size="large"
                      >
                        <label
                          className="emotion-22"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="hematite"
                          >
                            <input
                              className="emotion-0"
                              name="mineral"
                              size="large"
                              type="radio"
                              value="hematite"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            justify={true}
                            labelPosition="start"
                            size="large"
                          >
                            <span
                              className="emotion-21"
                            >
                              Hematite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: label-wrapping 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-5 > *:not(:last-child) {
  margin-bottom: 1rem;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-5"
      onSubmit={[Function]}
    >
      <Radio
        defaultChecked={true}
        label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
        labelPosition="end"
        name="example"
        size="large"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
          labelPosition="end"
          name="example"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
            labelPosition="end"
            name="example"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      defaultChecked={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
                      labelPosition="end"
                      name="example"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            defaultChecked={true}
                            innerRef={[Function]}
                            name="example"
                            size="large"
                            type="radio"
                          >
                            <input
                              className="emotion-0"
                              defaultChecked={true}
                              name="example"
                              size="large"
                              type="radio"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis.
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: next-to-other-inputs 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-18 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-3 {
  color: #333840;
  font-size: 0.75rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-47 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1.5rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1.5rem;
}

.emotion-47 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-44 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5rem;
  margin: 0;
  min-width: 2.5rem;
  padding: 0 0.5rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-44 *,
.emotion-44 *::before,
.emotion-44 *::after {
  box-sizing: inherit;
}

.emotion-44:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-44:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-44:focus:active,
.emotion-44:focus:hover {
  border-color: #c8d1e0;
}

.emotion-44:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-44::-moz-focus-inner {
  border: 0;
}

.emotion-44 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-44 [role="img"]:first-child {
  margin-right: 0.5rem;
}

.emotion-44 [role="img"]:last-child {
  margin-left: 0.5rem;
}

.emotion-44 [role="img"]:only-child {
  margin: 0;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-42 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875rem;
  line-height: 2.5rem;
}

.emotion-42:first-child {
  padding-left: 0.5rem;
}

.emotion-42:last-child {
  padding-right: 0.5rem;
}

.emotion-61 > * {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-61 > * > * {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-60 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-60 > * {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-60 > * > * {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-8 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-8 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-7 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-7:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-7:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-7 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-7 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 1.5rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75rem;
  outline: 0;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.emotion-5[type="search"] {
  -webkit-appearance: none;
}

.emotion-5[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-6 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-14 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5rem;
  margin: 0;
  min-width: 1.5rem;
  padding: 0 0.5rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:focus:active,
.emotion-14:focus:hover {
  border-color: #c8d1e0;
}

.emotion-14:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5rem;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5rem;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

.emotion-12 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75rem;
  line-height: 1.5rem;
}

.emotion-20 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.emotion-20[type="search"] {
  -webkit-appearance: none;
}

.emotion-20[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-20::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-ms-clear {
  display: none;
}

.emotion-20:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-29 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2rem;
  margin: 0;
  min-width: 2rem;
  padding: 0 0.5rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-29:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-29:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-29:focus:active,
.emotion-29:focus:hover {
  border-color: #c8d1e0;
}

.emotion-29:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-29::-moz-focus-inner {
  border: 0;
}

.emotion-29 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-29 [role="img"]:first-child {
  margin-right: 0.5rem;
}

.emotion-29 [role="img"]:last-child {
  margin-left: 0.5rem;
}

.emotion-29 [role="img"]:only-child {
  margin: 0;
}

.emotion-27 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875rem;
  line-height: 2rem;
}

.emotion-35 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.5rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 1rem;
  padding-right: 1rem;
}

.emotion-35[type="search"] {
  -webkit-appearance: none;
}

.emotion-35[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-35::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-ms-clear {
  display: none;
}

.emotion-35:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-50 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.25rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 1rem;
  padding-right: 1rem;
}

.emotion-50[type="search"] {
  -webkit-appearance: none;
}

.emotion-50[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-50::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::-ms-clear {
  display: none;
}

.emotion-50:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-59 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25rem;
  margin: 0;
  min-width: 3.25rem;
  padding: 0 0.5rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-59 *,
.emotion-59 *::before,
.emotion-59 *::after {
  box-sizing: inherit;
}

.emotion-59:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-59:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-59:focus:active,
.emotion-59:focus:hover {
  border-color: #c8d1e0;
}

.emotion-59:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-59::-moz-focus-inner {
  border: 0;
}

.emotion-59 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-59 [role="img"]:first-child {
  margin-right: 0.5rem;
}

.emotion-59 [role="img"]:last-child {
  margin-left: 0.5rem;
}

.emotion-59 [role="img"]:only-child {
  margin: 0;
}

.emotion-57 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875rem;
  line-height: 3.25rem;
}

.emotion-57:first-child {
  padding-left: 0.5rem;
}

.emotion-57:last-child {
  padding-right: 0.5rem;
}

<Styled(DemoForm)>
  <DemoForm
    className="emotion-61"
  >
    <Styled(form)
      className="emotion-61"
      onSubmit={[Function]}
    >
      <form
        className="emotion-60"
        onSubmit={[Function]}
      >
        <div>
          <Radio
            label="Small"
            labelPosition="end"
            name="size"
            size="small"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Small"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="small"
              type="radio"
            >
              <Themed(Choice)
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Small"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="small"
                type="radio"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Small"
                          labelPosition="end"
                          name="size"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="small"
                          type="radio"
                        >
                          <Choice
                            labelPosition="end"
                            size="small"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                innerRef={[Function]}
                                name="size"
                                size="small"
                                type="radio"
                              >
                                <input
                                  className="emotion-0"
                                  name="size"
                                  size="small"
                                  type="radio"
                                />
                              </Styled(input)>
                              <Control
                                size="small"
                              >
                                <span
                                  className="emotion-2"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="small"
                              >
                                <span
                                  className="emotion-3"
                                >
                                  Small
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
          <TextInput
            defaultValue="Small"
            size="small"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <TextInput
                className="emotion-8"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="small"
                >
                  <ThemeProvider>
                    <Fragment>
                      <DocumentFontSizeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-8"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Small",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="small"
                          >
                            <FauxControl
                              className="emotion-8"
                              control={[Function]}
                            >
                              <div
                                className="emotion-7"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "Small",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="Small"
                                  key="control"
                                  size="small"
                                  type="text"
                                >
                                  <input
                                    className="emotion-5"
                                    defaultValue="Small"
                                    size="small"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-6"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </DocumentFontSizeProvider>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "DOMContentLoaded",
                              "handler": [Function],
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </Fragment>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="small"
            type="button"
          >
            <Button
              element="button"
              size="small"
              text="Small"
              type="button"
            >
              <button
                className="emotion-14"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-13"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-12"
                      >
                        Small
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
        <div>
          <Radio
            label="Medium"
            labelPosition="end"
            name="size"
            size="medium"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Medium"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="medium"
              type="radio"
            >
              <Themed(Choice)
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Medium"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="medium"
                type="radio"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Medium"
                          labelPosition="end"
                          name="size"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="medium"
                          type="radio"
                        >
                          <Choice
                            labelPosition="end"
                            size="medium"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                innerRef={[Function]}
                                name="size"
                                size="medium"
                                type="radio"
                              >
                                <input
                                  className="emotion-0"
                                  name="size"
                                  size="medium"
                                  type="radio"
                                />
                              </Styled(input)>
                              <Control
                                size="medium"
                              >
                                <span
                                  className="emotion-2"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="medium"
                              >
                                <span
                                  className="emotion-18"
                                >
                                  Medium
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
          <TextInput
            defaultValue="Medium"
            size="medium"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <TextInput
                className="emotion-8"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="medium"
                >
                  <ThemeProvider>
                    <Fragment>
                      <DocumentFontSizeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-8"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Medium",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="medium"
                          >
                            <FauxControl
                              className="emotion-8"
                              control={[Function]}
                            >
                              <div
                                className="emotion-7"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "Medium",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="Medium"
                                  key="control"
                                  size="medium"
                                  type="text"
                                >
                                  <input
                                    className="emotion-20"
                                    defaultValue="Medium"
                                    size="medium"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-6"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </DocumentFontSizeProvider>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "DOMContentLoaded",
                              "handler": [Function],
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </Fragment>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="medium"
            type="button"
          >
            <Button
              element="button"
              size="medium"
              text="Medium"
              type="button"
            >
              <button
                className="emotion-29"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-13"
                  >
                    <Styled(span)
                      size="medium"
                    >
                      <span
                        className="emotion-27"
                      >
                        Medium
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
        <div>
          <Radio
            label="Large"
            labelPosition="end"
            name="size"
            size="large"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Large"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="radio"
            >
              <Themed(Choice)
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Large"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="radio"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Large"
                          labelPosition="end"
                          name="size"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="radio"
                        >
                          <Choice
                            labelPosition="end"
                            size="large"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                innerRef={[Function]}
                                name="size"
                                size="large"
                                type="radio"
                              >
                                <input
                                  className="emotion-0"
                                  name="size"
                                  size="large"
                                  type="radio"
                                />
                              </Styled(input)>
                              <Control
                                size="large"
                              >
                                <span
                                  className="emotion-2"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="large"
                              >
                                <span
                                  className="emotion-18"
                                >
                                  Large
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
          <TextInput
            defaultValue="Large"
            size="large"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <TextInput
                className="emotion-8"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <ThemeProvider>
                    <Fragment>
                      <DocumentFontSizeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-8"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Large",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                          >
                            <FauxControl
                              className="emotion-8"
                              control={[Function]}
                            >
                              <div
                                className="emotion-7"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "Large",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="Large"
                                  key="control"
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    className="emotion-35"
                                    defaultValue="Large"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-6"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </DocumentFontSizeProvider>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "DOMContentLoaded",
                              "handler": [Function],
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </Fragment>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="large"
            type="button"
          >
            <Button
              element="button"
              size="large"
              text="Large"
              type="button"
            >
              <button
                className="emotion-44"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-13"
                  >
                    <Styled(span)
                      size="large"
                    >
                      <span
                        className="emotion-42"
                      >
                        Large
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
        <div>
          <Radio
            label="Jumbo"
            labelPosition="end"
            name="size"
            size="jumbo"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconRadioButtonCheck />}
              inputRef={[Function]}
              label="Jumbo"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="jumbo"
              type="radio"
            >
              <Themed(Choice)
                iconChecked={<IconRadioButtonCheck />}
                inputRef={[Function]}
                label="Jumbo"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="jumbo"
                type="radio"
              >
                <ThemeProvider>
                  <Fragment>
                    <DocumentFontSizeProvider>
                      <ThemeProvider>
                        <Choice
                          iconChecked={<IconRadioButtonCheck />}
                          inputRef={[Function]}
                          label="Jumbo"
                          labelPosition="end"
                          name="size"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="jumbo"
                          type="radio"
                        >
                          <Choice
                            labelPosition="end"
                            size="jumbo"
                          >
                            <label
                              className="emotion-4"
                            >
                              <Styled(input)
                                innerRef={[Function]}
                                name="size"
                                size="jumbo"
                                type="radio"
                              >
                                <input
                                  className="emotion-0"
                                  name="size"
                                  size="jumbo"
                                  type="radio"
                                />
                              </Styled(input)>
                              <Control
                                size="jumbo"
                              >
                                <span
                                  className="emotion-47"
                                >
                                  <IconRadioButtonCheck>
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-1"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <circle
                                              cx="12"
                                              cy="12"
                                              r="3.43"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconRadioButtonCheck>
                                </span>
                              </Control>
                              <Text
                                labelPosition="end"
                                size="jumbo"
                              >
                                <span
                                  className="emotion-18"
                                >
                                  Jumbo
                                </span>
                              </Text>
                            </label>
                          </Choice>
                        </Choice>
                      </ThemeProvider>
                    </DocumentFontSizeProvider>
                    <EventListener
                      listeners={
                        Array [
                          Object {
                            "event": "DOMContentLoaded",
                            "handler": [Function],
                            "target": "document",
                          },
                        ]
                      }
                    />
                  </Fragment>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Radio>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <TextInput
                className="emotion-8"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="jumbo"
                >
                  <ThemeProvider>
                    <Fragment>
                      <DocumentFontSizeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-8"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Jumbo",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="jumbo"
                          >
                            <FauxControl
                              className="emotion-8"
                              control={[Function]}
                            >
                              <div
                                className="emotion-7"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "Jumbo",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="Jumbo"
                                  key="control"
                                  size="jumbo"
                                  type="text"
                                >
                                  <input
                                    className="emotion-50"
                                    defaultValue="Jumbo"
                                    size="jumbo"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-6"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </DocumentFontSizeProvider>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "DOMContentLoaded",
                              "handler": [Function],
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </Fragment>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="jumbo"
            type="button"
          >
            <Button
              element="button"
              size="jumbo"
              text="Jumbo"
              type="button"
            >
              <button
                className="emotion-59"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-13"
                  >
                    <Styled(span)
                      size="jumbo"
                    >
                      <span
                        className="emotion-57"
                      >
                        Jumbo
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
      </form>
    </Styled(form)>
  </DemoForm>
</Styled(DemoForm)>
`;

exports[`Radio demo examples Snapshots: required 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Radio
        defaultChecked={true}
        label="Quartz"
        labelPosition="end"
        name="mineral"
        required={true}
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="mineral"
          required={true}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="mineral"
            required={true}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="quartz"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      defaultChecked={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Quartz"
                      labelPosition="end"
                      name="mineral"
                      required={true}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="quartz"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            aria-required={true}
                            defaultChecked={true}
                            innerRef={[Function]}
                            name="mineral"
                            required={true}
                            size="large"
                            type="radio"
                            value="quartz"
                          >
                            <input
                              aria-required={true}
                              className="emotion-0"
                              defaultChecked={true}
                              name="mineral"
                              required={true}
                              size="large"
                              type="radio"
                              value="quartz"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Quartz
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        label="Magnetite"
        labelPosition="end"
        name="mineral"
        required={true}
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          name="mineral"
          required={true}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            name="mineral"
            required={true}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="magnetite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Magnetite"
                      labelPosition="end"
                      name="mineral"
                      required={true}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="magnetite"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            aria-required={true}
                            innerRef={[Function]}
                            name="mineral"
                            required={true}
                            size="large"
                            type="radio"
                            value="magnetite"
                          >
                            <input
                              aria-required={true}
                              className="emotion-0"
                              name="mineral"
                              required={true}
                              size="large"
                              type="radio"
                              value="magnetite"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Magnetite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: rtl 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-8 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-21 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-10 {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5rem 0;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 0;
  margin-right: 1rem;
}

.emotion-15 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.emotion-15 *,
.emotion-15 *::before,
.emotion-15 *::after {
  box-sizing: inherit;
}

.emotion-15:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-19 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: auto;
  margin-right: 0;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-20:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-14 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 0;
  margin-right: auto;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <Fragment>
      <DocumentFontSizeProvider>
        <ThemeProvider>
          <DemoForm>
            <Styled(form)
              onSubmit={[Function]}
            >
              <form
                className="emotion-21"
                onSubmit={[Function]}
              >
                <Radio
                  label="مرحبا بالعالم"
                  labelPosition="end"
                  name="example"
                  size="large"
                >
                  <WithTheme(Themed(Choice))
                    iconChecked={<IconRadioButtonCheck />}
                    inputRef={[Function]}
                    label="مرحبا بالعالم"
                    labelPosition="end"
                    name="example"
                    rootProps={
                      Object {
                        "className": undefined,
                      }
                    }
                    size="large"
                    type="radio"
                  >
                    <Themed(Choice)
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="مرحبا بالعالم"
                      labelPosition="end"
                      name="example"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <Choice
                                iconChecked={<IconRadioButtonCheck />}
                                inputRef={[Function]}
                                label="مرحبا بالعالم"
                                labelPosition="end"
                                name="example"
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="radio"
                              >
                                <Choice
                                  labelPosition="end"
                                  size="large"
                                >
                                  <label
                                    className="emotion-4"
                                  >
                                    <Styled(input)
                                      innerRef={[Function]}
                                      name="example"
                                      size="large"
                                      type="radio"
                                    >
                                      <input
                                        className="emotion-0"
                                        name="example"
                                        size="large"
                                        type="radio"
                                      />
                                    </Styled(input)>
                                    <Control
                                      size="large"
                                    >
                                      <span
                                        className="emotion-2"
                                      >
                                        <IconRadioButtonCheck>
                                          <Icon
                                            rtl={false}
                                            size="medium"
                                          >
                                            <Styled(svg)
                                              aria-hidden={true}
                                              focusable="false"
                                              role="img"
                                              rtl={false}
                                              size="medium"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="emotion-1"
                                                focusable="false"
                                                role="img"
                                                viewBox="0 0 24 24"
                                              >
                                                <g>
                                                  <circle
                                                    cx="12"
                                                    cy="12"
                                                    r="3.43"
                                                  />
                                                </g>
                                              </svg>
                                            </Styled(svg)>
                                          </Icon>
                                        </IconRadioButtonCheck>
                                      </span>
                                    </Control>
                                    <Text
                                      labelPosition="end"
                                      size="large"
                                    >
                                      <span
                                        className="emotion-3"
                                      >
                                        مرحبا بالعالم
                                      </span>
                                    </Text>
                                  </label>
                                </Choice>
                              </Choice>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(Choice)>
                  </WithTheme(Themed(Choice))>
                </Radio>
                <Radio
                  label="مرحبا بالعالم"
                  labelPosition="start"
                  name="example"
                  size="large"
                >
                  <WithTheme(Themed(Choice))
                    iconChecked={<IconRadioButtonCheck />}
                    inputRef={[Function]}
                    label="مرحبا بالعالم"
                    labelPosition="start"
                    name="example"
                    rootProps={
                      Object {
                        "className": undefined,
                      }
                    }
                    size="large"
                    type="radio"
                  >
                    <Themed(Choice)
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="مرحبا بالعالم"
                      labelPosition="start"
                      name="example"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <Choice
                                iconChecked={<IconRadioButtonCheck />}
                                inputRef={[Function]}
                                label="مرحبا بالعالم"
                                labelPosition="start"
                                name="example"
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="radio"
                              >
                                <Choice
                                  labelPosition="start"
                                  size="large"
                                >
                                  <label
                                    className="emotion-9"
                                  >
                                    <Styled(input)
                                      innerRef={[Function]}
                                      name="example"
                                      size="large"
                                      type="radio"
                                    >
                                      <input
                                        className="emotion-0"
                                        name="example"
                                        size="large"
                                        type="radio"
                                      />
                                    </Styled(input)>
                                    <Control
                                      size="large"
                                    >
                                      <span
                                        className="emotion-2"
                                      >
                                        <IconRadioButtonCheck>
                                          <Icon
                                            rtl={false}
                                            size="medium"
                                          >
                                            <Styled(svg)
                                              aria-hidden={true}
                                              focusable="false"
                                              role="img"
                                              rtl={false}
                                              size="medium"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="emotion-1"
                                                focusable="false"
                                                role="img"
                                                viewBox="0 0 24 24"
                                              >
                                                <g>
                                                  <circle
                                                    cx="12"
                                                    cy="12"
                                                    r="3.43"
                                                  />
                                                </g>
                                              </svg>
                                            </Styled(svg)>
                                          </Icon>
                                        </IconRadioButtonCheck>
                                      </span>
                                    </Control>
                                    <Text
                                      labelPosition="start"
                                      size="large"
                                    >
                                      <span
                                        className="emotion-8"
                                      >
                                        مرحبا بالعالم
                                      </span>
                                    </Text>
                                  </label>
                                </Choice>
                              </Choice>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(Choice)>
                  </WithTheme(Themed(Choice))>
                </Radio>
                <FormFieldDivider>
                  <FormFieldDivider
                    role="separator"
                  >
                    <div
                      className="emotion-10"
                      role="separator"
                    />
                  </FormFieldDivider>
                </FormFieldDivider>
                <Radio
                  justify={true}
                  label="مرحبا بالعالم"
                  labelPosition="end"
                  name="example"
                  size="large"
                >
                  <WithTheme(Themed(Choice))
                    iconChecked={<IconRadioButtonCheck />}
                    inputRef={[Function]}
                    justify={true}
                    label="مرحبا بالعالم"
                    labelPosition="end"
                    name="example"
                    rootProps={
                      Object {
                        "className": undefined,
                      }
                    }
                    size="large"
                    type="radio"
                  >
                    <Themed(Choice)
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      justify={true}
                      label="مرحبا بالعالم"
                      labelPosition="end"
                      name="example"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <Choice
                                iconChecked={<IconRadioButtonCheck />}
                                inputRef={[Function]}
                                justify={true}
                                label="مرحبا بالعالم"
                                labelPosition="end"
                                name="example"
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="radio"
                              >
                                <Choice
                                  justify={true}
                                  labelPosition="end"
                                  size="large"
                                >
                                  <label
                                    className="emotion-15"
                                  >
                                    <Styled(input)
                                      innerRef={[Function]}
                                      name="example"
                                      size="large"
                                      type="radio"
                                    >
                                      <input
                                        className="emotion-0"
                                        name="example"
                                        size="large"
                                        type="radio"
                                      />
                                    </Styled(input)>
                                    <Control
                                      size="large"
                                    >
                                      <span
                                        className="emotion-2"
                                      >
                                        <IconRadioButtonCheck>
                                          <Icon
                                            rtl={false}
                                            size="medium"
                                          >
                                            <Styled(svg)
                                              aria-hidden={true}
                                              focusable="false"
                                              role="img"
                                              rtl={false}
                                              size="medium"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="emotion-1"
                                                focusable="false"
                                                role="img"
                                                viewBox="0 0 24 24"
                                              >
                                                <g>
                                                  <circle
                                                    cx="12"
                                                    cy="12"
                                                    r="3.43"
                                                  />
                                                </g>
                                              </svg>
                                            </Styled(svg)>
                                          </Icon>
                                        </IconRadioButtonCheck>
                                      </span>
                                    </Control>
                                    <Text
                                      justify={true}
                                      labelPosition="end"
                                      size="large"
                                    >
                                      <span
                                        className="emotion-14"
                                      >
                                        مرحبا بالعالم
                                      </span>
                                    </Text>
                                  </label>
                                </Choice>
                              </Choice>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(Choice)>
                  </WithTheme(Themed(Choice))>
                </Radio>
                <Radio
                  justify={true}
                  label="مرحبا بالعالم"
                  labelPosition="start"
                  name="example"
                  size="large"
                >
                  <WithTheme(Themed(Choice))
                    iconChecked={<IconRadioButtonCheck />}
                    inputRef={[Function]}
                    justify={true}
                    label="مرحبا بالعالم"
                    labelPosition="start"
                    name="example"
                    rootProps={
                      Object {
                        "className": undefined,
                      }
                    }
                    size="large"
                    type="radio"
                  >
                    <Themed(Choice)
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      justify={true}
                      label="مرحبا بالعالم"
                      labelPosition="start"
                      name="example"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <Choice
                                iconChecked={<IconRadioButtonCheck />}
                                inputRef={[Function]}
                                justify={true}
                                label="مرحبا بالعالم"
                                labelPosition="start"
                                name="example"
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="radio"
                              >
                                <Choice
                                  justify={true}
                                  labelPosition="start"
                                  size="large"
                                >
                                  <label
                                    className="emotion-20"
                                  >
                                    <Styled(input)
                                      innerRef={[Function]}
                                      name="example"
                                      size="large"
                                      type="radio"
                                    >
                                      <input
                                        className="emotion-0"
                                        name="example"
                                        size="large"
                                        type="radio"
                                      />
                                    </Styled(input)>
                                    <Control
                                      size="large"
                                    >
                                      <span
                                        className="emotion-2"
                                      >
                                        <IconRadioButtonCheck>
                                          <Icon
                                            rtl={false}
                                            size="medium"
                                          >
                                            <Styled(svg)
                                              aria-hidden={true}
                                              focusable="false"
                                              role="img"
                                              rtl={false}
                                              size="medium"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="emotion-1"
                                                focusable="false"
                                                role="img"
                                                viewBox="0 0 24 24"
                                              >
                                                <g>
                                                  <circle
                                                    cx="12"
                                                    cy="12"
                                                    r="3.43"
                                                  />
                                                </g>
                                              </svg>
                                            </Styled(svg)>
                                          </Icon>
                                        </IconRadioButtonCheck>
                                      </span>
                                    </Control>
                                    <Text
                                      justify={true}
                                      labelPosition="start"
                                      size="large"
                                    >
                                      <span
                                        className="emotion-19"
                                      >
                                        مرحبا بالعالم
                                      </span>
                                    </Text>
                                  </label>
                                </Choice>
                              </Choice>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(Choice)>
                  </WithTheme(Themed(Choice))>
                </Radio>
              </form>
            </Styled(form)>
          </DemoForm>
        </ThemeProvider>
      </DocumentFontSizeProvider>
      <EventListener
        listeners={
          Array [
            Object {
              "event": "DOMContentLoaded",
              "handler": [Function],
              "target": "document",
            },
          ]
        }
      />
    </Fragment>
  </ThemeProvider>
</div>
`;

exports[`Radio demo examples Snapshots: sizes 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-8 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-20 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.75rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-17 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1.5rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1.5rem;
}

.emotion-17 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-20"
      onSubmit={[Function]}
    >
      <Radio
        label="Small"
        labelPosition="end"
        name="size"
        size="small"
        value="small"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Small"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="small"
          type="radio"
          value="small"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Small"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="small"
            type="radio"
            value="small"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Small"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="small"
                      type="radio"
                      value="small"
                    >
                      <Choice
                        labelPosition="end"
                        size="small"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="size"
                            size="small"
                            type="radio"
                            value="small"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              size="small"
                              type="radio"
                              value="small"
                            />
                          </Styled(input)>
                          <Control
                            size="small"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="small"
                          >
                            <span
                              className="emotion-3"
                            >
                              Small
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        label="Medium"
        labelPosition="end"
        name="size"
        size="medium"
        value="medium"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Medium"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="medium"
          type="radio"
          value="medium"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Medium"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="medium"
            type="radio"
            value="medium"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Medium"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="medium"
                      type="radio"
                      value="medium"
                    >
                      <Choice
                        labelPosition="end"
                        size="medium"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="size"
                            size="medium"
                            type="radio"
                            value="medium"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              size="medium"
                              type="radio"
                              value="medium"
                            />
                          </Styled(input)>
                          <Control
                            size="medium"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="medium"
                          >
                            <span
                              className="emotion-8"
                            >
                              Medium
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        defaultChecked={true}
        label="Large"
        labelPosition="end"
        name="size"
        size="large"
        value="large"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Large"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="large"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Large"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="large"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      defaultChecked={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Large"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="large"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            defaultChecked={true}
                            innerRef={[Function]}
                            name="size"
                            size="large"
                            type="radio"
                            value="large"
                          >
                            <input
                              className="emotion-0"
                              defaultChecked={true}
                              name="size"
                              size="large"
                              type="radio"
                              value="large"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-8"
                            >
                              Large
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        label="Jumbo"
        labelPosition="end"
        name="size"
        size="jumbo"
        value="jumbo"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Jumbo"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="jumbo"
          type="radio"
          value="jumbo"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Jumbo"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="jumbo"
            type="radio"
            value="jumbo"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Jumbo"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="jumbo"
                      type="radio"
                      value="jumbo"
                    >
                      <Choice
                        labelPosition="end"
                        size="jumbo"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="size"
                            size="jumbo"
                            type="radio"
                            value="jumbo"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              size="jumbo"
                              type="radio"
                              value="jumbo"
                            />
                          </Styled(input)>
                          <Control
                            size="jumbo"
                          >
                            <span
                              className="emotion-17"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="jumbo"
                          >
                            <span
                              className="emotion-8"
                            >
                              Jumbo
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Radio demo examples Snapshots: uncontrolled 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 100%;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1rem;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1rem;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1rem;
  width: 1rem;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875rem;
  margin-left: 1rem;
  margin-right: 0;
}

.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Radio
        defaultChecked={true}
        label="Quartz"
        labelPosition="end"
        name="mineral"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="quartz"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      defaultChecked={true}
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Quartz"
                      labelPosition="end"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="quartz"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            defaultChecked={true}
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="quartz"
                          >
                            <input
                              className="emotion-0"
                              defaultChecked={true}
                              name="mineral"
                              size="large"
                              type="radio"
                              value="quartz"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Quartz
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
      <Radio
        label="Magnetite"
        labelPosition="end"
        name="mineral"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconRadioButtonCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          name="mineral"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="radio"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconRadioButtonCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            name="mineral"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="radio"
            value="magnetite"
          >
            <ThemeProvider>
              <Fragment>
                <DocumentFontSizeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconRadioButtonCheck />}
                      inputRef={[Function]}
                      label="Magnetite"
                      labelPosition="end"
                      name="mineral"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="radio"
                      value="magnetite"
                    >
                      <Choice
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                        >
                          <Styled(input)
                            innerRef={[Function]}
                            name="mineral"
                            size="large"
                            type="radio"
                            value="magnetite"
                          >
                            <input
                              className="emotion-0"
                              name="mineral"
                              size="large"
                              type="radio"
                              value="magnetite"
                            />
                          </Styled(input)>
                          <Control
                            size="large"
                          >
                            <span
                              className="emotion-2"
                            >
                              <IconRadioButtonCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <circle
                                          cx="12"
                                          cy="12"
                                          r="3.43"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconRadioButtonCheck>
                            </span>
                          </Control>
                          <Text
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                            >
                              Magnetite
                            </span>
                          </Text>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </DocumentFontSizeProvider>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "DOMContentLoaded",
                        "handler": [Function],
                        "target": "document",
                      },
                    ]
                  }
                />
              </Fragment>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Radio>
    </form>
  </Styled(form)>
</DemoForm>
`;
