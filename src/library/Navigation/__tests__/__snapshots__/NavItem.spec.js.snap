// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavItem demo examples Snapshots: basic 1`] = `
.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-1 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-1:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-1:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-0:focus {
  outline: 1px solid #cfe0fc;
  outline-offset: -1px;
}

.emotion-19 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-19:focus {
  outline: 1px solid #84b1fa;
  outline-offset: -1px;
}

.emotion-20 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 1.7142857142857142em;
}

.emotion-38[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-18 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin: 0;
  padding: 0.5em 2em;
}

.emotion-18 *,
.emotion-18 *::before,
.emotion-18 *::after {
  box-sizing: inherit;
}

.emotion-18 > :not(:first-child) {
  margin-left: 0.25em;
}

.emotion-4 {
  display: block;
  max-width: 8.5em;
}

.emotion-4:hover {
  color: #ffffff;
}

.emotion-4:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-4 > span > span > span,
.emotion-4 > span > span > span > span,
.emotion-4 > span > span > span > span > span {
  display: block;
}

.emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:focus:active,
.emotion-3:focus:hover {
  border-color: transparent;
}

.emotion-3:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-3::-moz-focus-inner {
  border: 0;
}

.emotion-3 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-3 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-3 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-3 [role="img"]:only-child {
  margin: 0;
}

.emotion-3:hover {
  color: #ffffff;
}

.emotion-3:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-3 > span > span > span,
.emotion-3 > span > span > span > span,
.emotion-3 > span > span > span > span > span {
  display: block;
}

.emotion-37 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-bottom: 1px solid #dde3ed;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0.5em 0.75em;
}

.emotion-37 *,
.emotion-37 *::before,
.emotion-37 *::after {
  box-sizing: inherit;
}

.emotion-37 > :not(:first-child) {
  margin-left: 0.125em;
}

.emotion-23 {
  display: block;
  max-width: 8.5em;
}

.emotion-23:hover {
  color: #3272d9;
}

.emotion-23:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-23 > span > span > span,
.emotion-23 > span > span > span > span,
.emotion-23 > span > span > span > span > span {
  display: block;
}

.emotion-22 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:focus:active,
.emotion-22:focus:hover {
  border-color: transparent;
}

.emotion-22:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-22::-moz-focus-inner {
  border: 0;
}

.emotion-22 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-22 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-22 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-22 [role="img"]:only-child {
  margin: 0;
}

.emotion-22:hover {
  color: #3272d9;
}

.emotion-22:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-22 > span > span > span,
.emotion-22 > span > span > span > span,
.emotion-22 > span > span > span > span > span {
  display: block;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-38"
    >
      <PrimaryNav>
        <PrimaryNav
          align="center"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
        >
          <Navigation
            align="center"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
          >
            <Navigation
              align="center"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Primary"
              type=""
            >
              <nav
                className="emotion-18"
                onChange={[Function]}
              >
                <NavItem
                  align="center"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={1}
                    element="a"
                    href="/fluorite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={1}
                      element="a"
                      href="/fluorite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={1}
                            element="a"
                            href="/fluorite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={1}
                              element="a"
                              href="/fluorite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={1}
                                element="a"
                                href="/fluorite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Fluorite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </PrimaryNav>
      </PrimaryNav>
      <SecondaryNav>
        <SecondaryNav
          align="start"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
          type="pills"
        >
          <Navigation
            align="start"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
            secondary={true}
            type="pills"
          >
            <Navigation
              align="start"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Secondary"
              type="_pills"
            >
              <nav
                className="emotion-37"
                onChange={[Function]}
              >
                <NavItem
                  align="start"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={1}
                    element="a"
                    href="/fluorite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={1}
                      element="a"
                      href="/fluorite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={1}
                            element="a"
                            href="/fluorite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={1}
                              element="a"
                              href="/fluorite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={1}
                                element="a"
                                href="/fluorite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Fluorite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </SecondaryNav>
      </SecondaryNav>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`NavItem demo examples Snapshots: disabled 1`] = `
.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-1 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-1:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-1:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-0:focus {
  outline: 1px solid #cfe0fc;
  outline-offset: -1px;
}

.emotion-19 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-19:focus {
  outline: 1px solid #84b1fa;
  outline-offset: -1px;
}

.emotion-20 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 1.7142857142857142em;
}

.emotion-38[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-18 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin: 0;
  padding: 0.5em 2em;
}

.emotion-18 *,
.emotion-18 *::before,
.emotion-18 *::after {
  box-sizing: inherit;
}

.emotion-18 > :not(:first-child) {
  margin-left: 0.25em;
}

.emotion-4 {
  display: block;
  max-width: 8.5em;
}

.emotion-4:hover {
  color: #ffffff;
}

.emotion-4:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-4 > span > span > span,
.emotion-4 > span > span > span > span,
.emotion-4 > span > span > span > span > span {
  display: block;
}

.emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:focus:active,
.emotion-3:focus:hover {
  border-color: transparent;
}

.emotion-3:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-3::-moz-focus-inner {
  border: 0;
}

.emotion-3 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-3 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-3 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-3 [role="img"]:only-child {
  margin: 0;
}

.emotion-3:hover {
  color: #ffffff;
}

.emotion-3:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-3 > span > span > span,
.emotion-3 > span > span > span > span,
.emotion-3 > span > span > span > span > span {
  display: block;
}

.emotion-37 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-bottom: 1px solid #dde3ed;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0.5em 0.75em;
}

.emotion-37 *,
.emotion-37 *::before,
.emotion-37 *::after {
  box-sizing: inherit;
}

.emotion-37 > :not(:first-child) {
  margin-left: 0.125em;
}

.emotion-23 {
  display: block;
  max-width: 8.5em;
}

.emotion-23:hover {
  color: #3272d9;
}

.emotion-23:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-23 > span > span > span,
.emotion-23 > span > span > span > span,
.emotion-23 > span > span > span > span > span {
  display: block;
}

.emotion-22 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:focus:active,
.emotion-22:focus:hover {
  border-color: transparent;
}

.emotion-22:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-22::-moz-focus-inner {
  border: 0;
}

.emotion-22 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-22 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-22 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-22 [role="img"]:only-child {
  margin: 0;
}

.emotion-22:hover {
  color: #3272d9;
}

.emotion-22:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-22 > span > span > span,
.emotion-22 > span > span > span > span,
.emotion-22 > span > span > span > span > span {
  display: block;
}

.emotion-10 {
  background-color: transparent;
  display: block;
  max-width: 8.5em;
}

.emotion-10:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-10 > span > span > span,
.emotion-10 > span > span > span > span,
.emotion-10 > span > span > span > span > span {
  display: block;
}

.emotion-9 {
  box-sizing: border-box;
  color: #84b1fa;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  background-color: transparent;
  display: block;
  max-width: 8.5em;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:hover {
  color: #84b1fa;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-9:focus:active,
.emotion-9:focus:hover {
  border-color: transparent;
}

.emotion-9:active {
  color: #84b1fa;
}

.emotion-9::-moz-focus-inner {
  border: 0;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-9 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-9 [role="img"]:only-child {
  margin: 0;
}

.emotion-9:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-9 > span > span > span,
.emotion-9 > span > span > span > span,
.emotion-9 > span > span > span > span > span {
  display: block;
}

.emotion-28 {
  box-sizing: border-box;
  color: #afbacc;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  background-color: transparent;
  display: block;
  max-width: 8.5em;
}

.emotion-28 *,
.emotion-28 *::before,
.emotion-28 *::after {
  box-sizing: inherit;
}

.emotion-28:hover {
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:focus:active,
.emotion-28:focus:hover {
  border-color: transparent;
}

.emotion-28:active {
  color: #afbacc;
}

.emotion-28::-moz-focus-inner {
  border: 0;
}

.emotion-28 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-28 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-28 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-28 [role="img"]:only-child {
  margin: 0;
}

.emotion-28:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-28 > span > span > span,
.emotion-28 > span > span > span > span,
.emotion-28 > span > span > span > span > span {
  display: block;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-38"
    >
      <PrimaryNav>
        <PrimaryNav
          align="center"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
        >
          <Navigation
            align="center"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
          >
            <Navigation
              align="center"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Primary"
              type=""
            >
              <nav
                className="emotion-18"
                onChange={[Function]}
              >
                <NavItem
                  align="center"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  disabled={true}
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    aria-disabled={true}
                    circular={false}
                    data-index={1}
                    disabled={true}
                    element="a"
                    href="/fluorite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      aria-disabled={true}
                      circular={false}
                      data-index={1}
                      disabled={true}
                      element="a"
                      href="/fluorite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            aria-disabled={true}
                            circular={false}
                            data-index={1}
                            disabled={true}
                            element="a"
                            href="/fluorite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              aria-disabled={true}
                              circular={false}
                              className="emotion-10"
                              data-index={1}
                              disabled={true}
                              element="a"
                              href="/fluorite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                aria-disabled={true}
                                circular={false}
                                className="emotion-10"
                                data-index={1}
                                disabled={true}
                                element="a"
                                href="/fluorite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                tabIndex={-1}
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  aria-disabled={true}
                                  className="emotion-9"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Fluorite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </PrimaryNav>
      </PrimaryNav>
      <SecondaryNav>
        <SecondaryNav
          align="start"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
          type="pills"
        >
          <Navigation
            align="start"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
            secondary={true}
            type="pills"
          >
            <Navigation
              align="start"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Secondary"
              type="_pills"
            >
              <nav
                className="emotion-37"
                onChange={[Function]}
              >
                <NavItem
                  align="start"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  disabled={true}
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    aria-disabled={true}
                    circular={true}
                    data-index={1}
                    disabled={true}
                    element="a"
                    href="/fluorite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      aria-disabled={true}
                      circular={true}
                      data-index={1}
                      disabled={true}
                      element="a"
                      href="/fluorite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            aria-disabled={true}
                            circular={true}
                            data-index={1}
                            disabled={true}
                            element="a"
                            href="/fluorite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              aria-disabled={true}
                              circular={true}
                              className="emotion-10"
                              data-index={1}
                              disabled={true}
                              element="a"
                              href="/fluorite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                aria-disabled={true}
                                circular={true}
                                className="emotion-10"
                                data-index={1}
                                disabled={true}
                                element="a"
                                href="/fluorite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                tabIndex={-1}
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  aria-disabled={true}
                                  className="emotion-28"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Fluorite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </SecondaryNav>
      </SecondaryNav>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`NavItem demo examples Snapshots: element 1`] = `
.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-1 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-1:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-1:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-0:focus {
  outline: 1px solid #cfe0fc;
  outline-offset: -1px;
}

.emotion-22 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-22:focus {
  outline: 1px solid #84b1fa;
  outline-offset: -1px;
}

.emotion-23 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 1.7142857142857142em;
}

.emotion-44[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin: 0;
  padding: 0.5em 2em;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21 > :not(:first-child) {
  margin-left: 0.25em;
}

.emotion-5 {
  display: block;
  max-width: 8.5em;
}

.emotion-5:hover {
  color: #ffffff;
}

.emotion-5:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-5 > span > span > span,
.emotion-5 > span > span > span > span,
.emotion-5 > span > span > span > span > span {
  display: block;
}

.emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:focus:active,
.emotion-3:focus:hover {
  border-color: transparent;
}

.emotion-3:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-3::-moz-focus-inner {
  border: 0;
}

.emotion-3 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-3 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-3 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-3 [role="img"]:only-child {
  margin: 0;
}

.emotion-3:hover {
  color: #ffffff;
}

.emotion-3:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-3 > span > span > span,
.emotion-3 > span > span > span > span,
.emotion-3 > span > span > span > span > span {
  display: block;
}

.emotion-43 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-bottom: 1px solid #dde3ed;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0.5em 0.75em;
}

.emotion-43 *,
.emotion-43 *::before,
.emotion-43 *::after {
  box-sizing: inherit;
}

.emotion-43 > :not(:first-child) {
  margin-left: 0.125em;
}

.emotion-27 {
  display: block;
  max-width: 8.5em;
}

.emotion-27:hover {
  color: #3272d9;
}

.emotion-27:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-27 > span > span > span,
.emotion-27 > span > span > span > span,
.emotion-27 > span > span > span > span > span {
  display: block;
}

.emotion-25 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-25 *,
.emotion-25 *::before,
.emotion-25 *::after {
  box-sizing: inherit;
}

.emotion-25:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-25:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-25:focus:active,
.emotion-25:focus:hover {
  border-color: transparent;
}

.emotion-25:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-25::-moz-focus-inner {
  border: 0;
}

.emotion-25 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-25 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-25 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-25 [role="img"]:only-child {
  margin: 0;
}

.emotion-25:hover {
  color: #3272d9;
}

.emotion-25:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-25 > span > span > span,
.emotion-25 > span > span > span > span,
.emotion-25 > span > span > span > span > span {
  display: block;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-44"
    >
      <PrimaryNav>
        <PrimaryNav
          align="center"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
        >
          <Navigation
            align="center"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
          >
            <Navigation
              align="center"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Primary"
              type=""
            >
              <nav
                className="emotion-21"
                onChange={[Function]}
              >
                <NavItem
                  align="center"
                  element={[Function]}
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  to="/components/malachite"
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={0}
                    element={[Function]}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    to="/components/malachite"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={0}
                      element={[Function]}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      to="/components/malachite"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={0}
                            element={[Function]}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            to="/components/malachite"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-5"
                              data-index={0}
                              element={[Function]}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              to="/components/malachite"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-5"
                                data-index={0}
                                element={[Function]}
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                to="/components/malachite"
                                type="button"
                              >
                                <FakeRouterLink
                                  align="center"
                                  circular={false}
                                  className="emotion-3"
                                  data-index={0}
                                  maxWidth="8.5em"
                                  onClick={[Function]}
                                  selected={false}
                                  size="large"
                                  to="/components/malachite"
                                >
                                  <a
                                    className="emotion-3"
                                    data-index={0}
                                    href="/components/malachite"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-2"
                                      >
                                        <Styled(span)
                                          size="large"
                                        >
                                          <span
                                            className="emotion-1"
                                          >
                                            <Truncate>
                                              <Truncate
                                                innerRef={[Function]}
                                              >
                                                <span
                                                  className="emotion-0"
                                                >
                                                  Malachite
                                                  <EventListener
                                                    listeners={
                                                      Array [
                                                        Object {
                                                          "event": "resize",
                                                          "handler": [Function],
                                                          "target": "window",
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </span>
                                              </Truncate>
                                            </Truncate>
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </a>
                                </FakeRouterLink>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element={[Function]}
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  to="/components/fluorite"
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={1}
                    element={[Function]}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    to="/components/fluorite"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={1}
                      element={[Function]}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      to="/components/fluorite"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={1}
                            element={[Function]}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            to="/components/fluorite"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-5"
                              data-index={1}
                              element={[Function]}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              to="/components/fluorite"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-5"
                                data-index={1}
                                element={[Function]}
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                to="/components/fluorite"
                                type="button"
                              >
                                <FakeRouterLink
                                  align="center"
                                  circular={false}
                                  className="emotion-3"
                                  data-index={1}
                                  maxWidth="8.5em"
                                  onClick={[Function]}
                                  selected={false}
                                  size="large"
                                  to="/components/fluorite"
                                >
                                  <a
                                    className="emotion-3"
                                    data-index={1}
                                    href="/components/fluorite"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-2"
                                      >
                                        <Styled(span)
                                          size="large"
                                        >
                                          <span
                                            className="emotion-1"
                                          >
                                            <Truncate>
                                              <Truncate
                                                innerRef={[Function]}
                                              >
                                                <span
                                                  className="emotion-0"
                                                >
                                                  Fluorite
                                                  <EventListener
                                                    listeners={
                                                      Array [
                                                        Object {
                                                          "event": "resize",
                                                          "handler": [Function],
                                                          "target": "window",
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </span>
                                              </Truncate>
                                            </Truncate>
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </a>
                                </FakeRouterLink>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element={[Function]}
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  to="/components/magnetite"
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={2}
                    element={[Function]}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    to="/components/magnetite"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={2}
                      element={[Function]}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      to="/components/magnetite"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={2}
                            element={[Function]}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            to="/components/magnetite"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-5"
                              data-index={2}
                              element={[Function]}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              to="/components/magnetite"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-5"
                                data-index={2}
                                element={[Function]}
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                to="/components/magnetite"
                                type="button"
                              >
                                <FakeRouterLink
                                  align="center"
                                  circular={false}
                                  className="emotion-3"
                                  data-index={2}
                                  maxWidth="8.5em"
                                  onClick={[Function]}
                                  selected={false}
                                  size="large"
                                  to="/components/magnetite"
                                >
                                  <a
                                    className="emotion-3"
                                    data-index={2}
                                    href="/components/magnetite"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-2"
                                      >
                                        <Styled(span)
                                          size="large"
                                        >
                                          <span
                                            className="emotion-1"
                                          >
                                            <Truncate>
                                              <Truncate
                                                innerRef={[Function]}
                                              >
                                                <span
                                                  className="emotion-0"
                                                >
                                                  Magnetite
                                                  <EventListener
                                                    listeners={
                                                      Array [
                                                        Object {
                                                          "event": "resize",
                                                          "handler": [Function],
                                                          "target": "window",
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </span>
                                              </Truncate>
                                            </Truncate>
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </a>
                                </FakeRouterLink>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </PrimaryNav>
      </PrimaryNav>
      <SecondaryNav>
        <SecondaryNav
          align="start"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
          type="pills"
        >
          <Navigation
            align="start"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
            secondary={true}
            type="pills"
          >
            <Navigation
              align="start"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Secondary"
              type="_pills"
            >
              <nav
                className="emotion-43"
                onChange={[Function]}
              >
                <NavItem
                  align="start"
                  element={[Function]}
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  to="/components/malachite"
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={0}
                    element={[Function]}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    to="/components/malachite"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={0}
                      element={[Function]}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      to="/components/malachite"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={0}
                            element={[Function]}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            to="/components/malachite"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-27"
                              data-index={0}
                              element={[Function]}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              to="/components/malachite"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-27"
                                data-index={0}
                                element={[Function]}
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                to="/components/malachite"
                                type="button"
                              >
                                <FakeRouterLink
                                  align="start"
                                  circular={true}
                                  className="emotion-25"
                                  data-index={0}
                                  maxWidth="8.5em"
                                  onClick={[Function]}
                                  secondary={true}
                                  selected={false}
                                  size="small"
                                  to="/components/malachite"
                                >
                                  <a
                                    className="emotion-25"
                                    data-index={0}
                                    href="/components/malachite"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-2"
                                      >
                                        <Styled(span)
                                          size="small"
                                        >
                                          <span
                                            className="emotion-23"
                                          >
                                            <Truncate>
                                              <Truncate
                                                innerRef={[Function]}
                                              >
                                                <span
                                                  className="emotion-22"
                                                >
                                                  Malachite
                                                  <EventListener
                                                    listeners={
                                                      Array [
                                                        Object {
                                                          "event": "resize",
                                                          "handler": [Function],
                                                          "target": "window",
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </span>
                                              </Truncate>
                                            </Truncate>
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </a>
                                </FakeRouterLink>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element={[Function]}
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  to="/components/fluorite"
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={1}
                    element={[Function]}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    to="/components/fluorite"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={1}
                      element={[Function]}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      to="/components/fluorite"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={1}
                            element={[Function]}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            to="/components/fluorite"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-27"
                              data-index={1}
                              element={[Function]}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              to="/components/fluorite"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-27"
                                data-index={1}
                                element={[Function]}
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                to="/components/fluorite"
                                type="button"
                              >
                                <FakeRouterLink
                                  align="start"
                                  circular={true}
                                  className="emotion-25"
                                  data-index={1}
                                  maxWidth="8.5em"
                                  onClick={[Function]}
                                  secondary={true}
                                  selected={false}
                                  size="small"
                                  to="/components/fluorite"
                                >
                                  <a
                                    className="emotion-25"
                                    data-index={1}
                                    href="/components/fluorite"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-2"
                                      >
                                        <Styled(span)
                                          size="small"
                                        >
                                          <span
                                            className="emotion-23"
                                          >
                                            <Truncate>
                                              <Truncate
                                                innerRef={[Function]}
                                              >
                                                <span
                                                  className="emotion-22"
                                                >
                                                  Fluorite
                                                  <EventListener
                                                    listeners={
                                                      Array [
                                                        Object {
                                                          "event": "resize",
                                                          "handler": [Function],
                                                          "target": "window",
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </span>
                                              </Truncate>
                                            </Truncate>
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </a>
                                </FakeRouterLink>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element={[Function]}
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  to="/components/magnetite"
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={2}
                    element={[Function]}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    to="/components/magnetite"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={2}
                      element={[Function]}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      to="/components/magnetite"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={2}
                            element={[Function]}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            to="/components/magnetite"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-27"
                              data-index={2}
                              element={[Function]}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              to="/components/magnetite"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-27"
                                data-index={2}
                                element={[Function]}
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                to="/components/magnetite"
                                type="button"
                              >
                                <FakeRouterLink
                                  align="start"
                                  circular={true}
                                  className="emotion-25"
                                  data-index={2}
                                  maxWidth="8.5em"
                                  onClick={[Function]}
                                  secondary={true}
                                  selected={false}
                                  size="small"
                                  to="/components/magnetite"
                                >
                                  <a
                                    className="emotion-25"
                                    data-index={2}
                                    href="/components/magnetite"
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-2"
                                      >
                                        <Styled(span)
                                          size="small"
                                        >
                                          <span
                                            className="emotion-23"
                                          >
                                            <Truncate>
                                              <Truncate
                                                innerRef={[Function]}
                                              >
                                                <span
                                                  className="emotion-22"
                                                >
                                                  Magnetite
                                                  <EventListener
                                                    listeners={
                                                      Array [
                                                        Object {
                                                          "event": "resize",
                                                          "handler": [Function],
                                                          "target": "window",
                                                        },
                                                      ]
                                                    }
                                                  />
                                                </span>
                                              </Truncate>
                                            </Truncate>
                                          </span>
                                        </Styled(span)>
                                      </span>
                                    </Styled(span)>
                                  </a>
                                </FakeRouterLink>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </SecondaryNav>
      </SecondaryNav>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`NavItem demo examples Snapshots: icons 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-2:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-2:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-1 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-1:focus {
  outline: 1px solid #cfe0fc;
  outline-offset: -1px;
}

.emotion-23 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-23:focus {
  outline: 1px solid #84b1fa;
  outline-offset: -1px;
}

.emotion-24 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 1.7142857142857142em;
}

.emotion-44[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-21 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin: 0;
  padding: 0.5em 2em;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21 > :not(:first-child) {
  margin-left: 0.25em;
}

.emotion-5 {
  display: block;
  max-width: 8.5em;
}

.emotion-5:hover {
  color: #ffffff;
}

.emotion-5:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-5 > span > span > span,
.emotion-5 > span > span > span > span,
.emotion-5 > span > span > span > span > span {
  display: block;
}

.emotion-4 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-4:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-4:focus:active,
.emotion-4:focus:hover {
  border-color: transparent;
}

.emotion-4:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-4::-moz-focus-inner {
  border: 0;
}

.emotion-4 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-4 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-4 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-4 [role="img"]:only-child {
  margin: 0;
}

.emotion-4:hover {
  color: #ffffff;
}

.emotion-4:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-4 > span > span > span,
.emotion-4 > span > span > span > span,
.emotion-4 > span > span > span > span > span {
  display: block;
}

.emotion-43 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-bottom: 1px solid #dde3ed;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0.5em 0.75em;
}

.emotion-43 *,
.emotion-43 *::before,
.emotion-43 *::after {
  box-sizing: inherit;
}

.emotion-43 > :not(:first-child) {
  margin-left: 0.125em;
}

.emotion-27 {
  display: block;
  max-width: 8.5em;
}

.emotion-27:hover {
  color: #3272d9;
}

.emotion-27:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-27 > span > span > span,
.emotion-27 > span > span > span > span,
.emotion-27 > span > span > span > span > span {
  display: block;
}

.emotion-26 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-26:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-26:focus:active,
.emotion-26:focus:hover {
  border-color: transparent;
}

.emotion-26:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-26::-moz-focus-inner {
  border: 0;
}

.emotion-26 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-26 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-26 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-26 [role="img"]:only-child {
  margin: 0;
}

.emotion-26:hover {
  color: #3272d9;
}

.emotion-26:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-26 > span > span > span,
.emotion-26 > span > span > span > span,
.emotion-26 > span > span > span > span > span {
  display: block;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-22 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-44"
    >
      <PrimaryNav>
        <PrimaryNav
          align="center"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
        >
          <Navigation
            align="center"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
          >
            <Navigation
              align="center"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Primary"
              type=""
            >
              <nav
                className="emotion-21"
                onChange={[Function]}
              >
                <NavItem
                  align="center"
                  element="a"
                  href="/bio"
                  icon={<IconInfoOutline />}
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={0}
                    element="a"
                    href="/bio"
                    iconStart={<IconInfoOutline />}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={0}
                      element="a"
                      href="/bio"
                      iconStart={<IconInfoOutline />}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={0}
                            element="a"
                            href="/bio"
                            iconStart={<IconInfoOutline />}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-5"
                              data-index={0}
                              element="a"
                              href="/bio"
                              iconStart={<IconInfoOutline />}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-5"
                                data-index={0}
                                element="a"
                                href="/bio"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Bio
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-4"
                                  data-index={0}
                                  href="/bio"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <IconInfoOutline
                                        key="iconStart"
                                        size="1.5em"
                                      >
                                        <Icon
                                          rtl={false}
                                          size="1.5em"
                                        >
                                          <Styled(svg)
                                            aria-hidden={true}
                                            focusable="false"
                                            role="img"
                                            rtl={false}
                                            size="1.5em"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="emotion-0"
                                              focusable="false"
                                              role="img"
                                              viewBox="0 0 24 24"
                                            >
                                              <g>
                                                <path
                                                  d="M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z"
                                                />
                                              </g>
                                            </svg>
                                          </Styled(svg)>
                                        </Icon>
                                      </IconInfoOutline>
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-2"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-1"
                                              >
                                                Bio
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/albums"
                  icon={<IconMusicNote />}
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={1}
                    element="a"
                    href="/albums"
                    iconStart={<IconMusicNote />}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={1}
                      element="a"
                      href="/albums"
                      iconStart={<IconMusicNote />}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={1}
                            element="a"
                            href="/albums"
                            iconStart={<IconMusicNote />}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-5"
                              data-index={1}
                              element="a"
                              href="/albums"
                              iconStart={<IconMusicNote />}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-5"
                                data-index={1}
                                element="a"
                                href="/albums"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Albums
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-4"
                                  data-index={1}
                                  href="/albums"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <IconMusicNote
                                        key="iconStart"
                                        size="1.5em"
                                      >
                                        <Icon
                                          rtl={false}
                                          size="1.5em"
                                        >
                                          <Styled(svg)
                                            aria-hidden={true}
                                            focusable="false"
                                            role="img"
                                            rtl={false}
                                            size="1.5em"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="emotion-0"
                                              focusable="false"
                                              role="img"
                                              viewBox="0 0 24 24"
                                            >
                                              <g>
                                                <path
                                                  d="M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z"
                                                />
                                              </g>
                                            </svg>
                                          </Styled(svg)>
                                        </Icon>
                                      </IconMusicNote>
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-2"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-1"
                                              >
                                                Albums
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/photos"
                  icon={<IconCameraAlt />}
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={2}
                    element="a"
                    href="/photos"
                    iconStart={<IconCameraAlt />}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={2}
                      element="a"
                      href="/photos"
                      iconStart={<IconCameraAlt />}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={2}
                            element="a"
                            href="/photos"
                            iconStart={<IconCameraAlt />}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-5"
                              data-index={2}
                              element="a"
                              href="/photos"
                              iconStart={<IconCameraAlt />}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-5"
                                data-index={2}
                                element="a"
                                href="/photos"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Photos
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-4"
                                  data-index={2}
                                  href="/photos"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <IconCameraAlt
                                        key="iconStart"
                                        size="1.5em"
                                      >
                                        <Icon
                                          rtl={false}
                                          size="1.5em"
                                        >
                                          <Styled(svg)
                                            aria-hidden={true}
                                            focusable="false"
                                            role="img"
                                            rtl={false}
                                            size="1.5em"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="emotion-0"
                                              focusable="false"
                                              role="img"
                                              viewBox="0 0 24 24"
                                            >
                                              <g>
                                                <circle
                                                  cx="12"
                                                  cy="12"
                                                  r="3.2"
                                                />
                                                <path
                                                  d="M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
                                                />
                                              </g>
                                            </svg>
                                          </Styled(svg)>
                                        </Icon>
                                      </IconCameraAlt>
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-2"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-1"
                                              >
                                                Photos
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </PrimaryNav>
      </PrimaryNav>
      <SecondaryNav>
        <SecondaryNav
          align="start"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
          type="pills"
        >
          <Navigation
            align="start"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
            secondary={true}
            type="pills"
          >
            <Navigation
              align="start"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Secondary"
              type="_pills"
            >
              <nav
                className="emotion-43"
                onChange={[Function]}
              >
                <NavItem
                  align="start"
                  element="a"
                  href="/bio"
                  icon={<IconInfoOutline />}
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={0}
                    element="a"
                    href="/bio"
                    iconStart={<IconInfoOutline />}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={0}
                      element="a"
                      href="/bio"
                      iconStart={<IconInfoOutline />}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={0}
                            element="a"
                            href="/bio"
                            iconStart={<IconInfoOutline />}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-27"
                              data-index={0}
                              element="a"
                              href="/bio"
                              iconStart={<IconInfoOutline />}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-27"
                                data-index={0}
                                element="a"
                                href="/bio"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Bio
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-26"
                                  data-index={0}
                                  href="/bio"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <IconInfoOutline
                                        key="iconStart"
                                        size="medium"
                                      >
                                        <Icon
                                          rtl={false}
                                          size="medium"
                                        >
                                          <Styled(svg)
                                            aria-hidden={true}
                                            focusable="false"
                                            role="img"
                                            rtl={false}
                                            size="medium"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="emotion-22"
                                              focusable="false"
                                              role="img"
                                              viewBox="0 0 24 24"
                                            >
                                              <g>
                                                <path
                                                  d="M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z"
                                                />
                                              </g>
                                            </svg>
                                          </Styled(svg)>
                                        </Icon>
                                      </IconInfoOutline>
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-24"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-23"
                                              >
                                                Bio
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/albums"
                  icon={<IconMusicNote />}
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={1}
                    element="a"
                    href="/albums"
                    iconStart={<IconMusicNote />}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={1}
                      element="a"
                      href="/albums"
                      iconStart={<IconMusicNote />}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={1}
                            element="a"
                            href="/albums"
                            iconStart={<IconMusicNote />}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-27"
                              data-index={1}
                              element="a"
                              href="/albums"
                              iconStart={<IconMusicNote />}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-27"
                                data-index={1}
                                element="a"
                                href="/albums"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Albums
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-26"
                                  data-index={1}
                                  href="/albums"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <IconMusicNote
                                        key="iconStart"
                                        size="medium"
                                      >
                                        <Icon
                                          rtl={false}
                                          size="medium"
                                        >
                                          <Styled(svg)
                                            aria-hidden={true}
                                            focusable="false"
                                            role="img"
                                            rtl={false}
                                            size="medium"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="emotion-22"
                                              focusable="false"
                                              role="img"
                                              viewBox="0 0 24 24"
                                            >
                                              <g>
                                                <path
                                                  d="M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z"
                                                />
                                              </g>
                                            </svg>
                                          </Styled(svg)>
                                        </Icon>
                                      </IconMusicNote>
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-24"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-23"
                                              >
                                                Albums
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/photos"
                  icon={<IconCameraAlt />}
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={2}
                    element="a"
                    href="/photos"
                    iconStart={<IconCameraAlt />}
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={2}
                      element="a"
                      href="/photos"
                      iconStart={<IconCameraAlt />}
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={2}
                            element="a"
                            href="/photos"
                            iconStart={<IconCameraAlt />}
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-27"
                              data-index={2}
                              element="a"
                              href="/photos"
                              iconStart={<IconCameraAlt />}
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-27"
                                data-index={2}
                                element="a"
                                href="/photos"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Photos
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-26"
                                  data-index={2}
                                  href="/photos"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-3"
                                    >
                                      <IconCameraAlt
                                        key="iconStart"
                                        size="medium"
                                      >
                                        <Icon
                                          rtl={false}
                                          size="medium"
                                        >
                                          <Styled(svg)
                                            aria-hidden={true}
                                            focusable="false"
                                            role="img"
                                            rtl={false}
                                            size="medium"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="emotion-22"
                                              focusable="false"
                                              role="img"
                                              viewBox="0 0 24 24"
                                            >
                                              <g>
                                                <circle
                                                  cx="12"
                                                  cy="12"
                                                  r="3.2"
                                                />
                                                <path
                                                  d="M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
                                                />
                                              </g>
                                            </svg>
                                          </Styled(svg)>
                                        </Icon>
                                      </IconCameraAlt>
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-24"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-23"
                                              >
                                                Photos
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </SecondaryNav>
      </SecondaryNav>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`NavItem demo examples Snapshots: max-width 1`] = `
.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-1 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-1:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-1:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-0:focus {
  outline: 1px solid #cfe0fc;
  outline-offset: -1px;
}

.emotion-19 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-19:focus {
  outline: 1px solid #84b1fa;
  outline-offset: -1px;
}

.emotion-20 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 1.7142857142857142em;
}

.emotion-38[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-18 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin: 0;
  padding: 0.5em 2em;
}

.emotion-18 *,
.emotion-18 *::before,
.emotion-18 *::after {
  box-sizing: inherit;
}

.emotion-18 > :not(:first-child) {
  margin-left: 0.25em;
}

.emotion-4 {
  display: block;
  max-width: 8.5em;
}

.emotion-4:hover {
  color: #ffffff;
}

.emotion-4:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-4 > span > span > span,
.emotion-4 > span > span > span > span,
.emotion-4 > span > span > span > span > span {
  display: block;
}

.emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:focus:active,
.emotion-3:focus:hover {
  border-color: transparent;
}

.emotion-3:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-3::-moz-focus-inner {
  border: 0;
}

.emotion-3 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-3 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-3 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-3 [role="img"]:only-child {
  margin: 0;
}

.emotion-3:hover {
  color: #ffffff;
}

.emotion-3:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-3 > span > span > span,
.emotion-3 > span > span > span > span,
.emotion-3 > span > span > span > span > span {
  display: block;
}

.emotion-37 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-bottom: 1px solid #dde3ed;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0.5em 0.75em;
}

.emotion-37 *,
.emotion-37 *::before,
.emotion-37 *::after {
  box-sizing: inherit;
}

.emotion-37 > :not(:first-child) {
  margin-left: 0.125em;
}

.emotion-23 {
  display: block;
  max-width: 8.5em;
}

.emotion-23:hover {
  color: #3272d9;
}

.emotion-23:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-23 > span > span > span,
.emotion-23 > span > span > span > span,
.emotion-23 > span > span > span > span > span {
  display: block;
}

.emotion-22 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:focus:active,
.emotion-22:focus:hover {
  border-color: transparent;
}

.emotion-22:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-22::-moz-focus-inner {
  border: 0;
}

.emotion-22 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-22 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-22 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-22 [role="img"]:only-child {
  margin: 0;
}

.emotion-22:hover {
  color: #3272d9;
}

.emotion-22:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-22 > span > span > span,
.emotion-22 > span > span > span > span,
.emotion-22 > span > span > span > span > span {
  display: block;
}

.emotion-10 {
  display: block;
  max-width: 6em;
}

.emotion-10:hover {
  color: #ffffff;
}

.emotion-10:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-10 > span > span > span,
.emotion-10 > span > span > span > span,
.emotion-10 > span > span > span > span > span {
  display: block;
}

.emotion-9 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 6em;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-9:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-9:focus:active,
.emotion-9:focus:hover {
  border-color: transparent;
}

.emotion-9:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-9::-moz-focus-inner {
  border: 0;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-9 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-9 [role="img"]:only-child {
  margin: 0;
}

.emotion-9:hover {
  color: #ffffff;
}

.emotion-9:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-9 > span > span > span,
.emotion-9 > span > span > span > span,
.emotion-9 > span > span > span > span > span {
  display: block;
}

.emotion-29 {
  display: block;
  max-width: 6em;
}

.emotion-29:hover {
  color: #3272d9;
}

.emotion-29:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-29 > span > span > span,
.emotion-29 > span > span > span > span,
.emotion-29 > span > span > span > span > span {
  display: block;
}

.emotion-28 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 6em;
}

.emotion-28 *,
.emotion-28 *::before,
.emotion-28 *::after {
  box-sizing: inherit;
}

.emotion-28:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:focus:active,
.emotion-28:focus:hover {
  border-color: transparent;
}

.emotion-28:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-28::-moz-focus-inner {
  border: 0;
}

.emotion-28 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-28 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-28 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-28 [role="img"]:only-child {
  margin: 0;
}

.emotion-28:hover {
  color: #3272d9;
}

.emotion-28:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-28 > span > span > span,
.emotion-28 > span > span > span > span,
.emotion-28 > span > span > span > span > span {
  display: block;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-38"
    >
      <PrimaryNav>
        <PrimaryNav
          align="center"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
        >
          <Navigation
            align="center"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
          >
            <Navigation
              align="center"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Primary"
              type=""
            >
              <nav
                className="emotion-18"
                onChange={[Function]}
              >
                <NavItem
                  align="center"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="6em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={1}
                    element="a"
                    href="/fluorite"
                    maxWidth="6em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={1}
                      element="a"
                      href="/fluorite"
                      maxWidth="6em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={1}
                            element="a"
                            href="/fluorite"
                            maxWidth="6em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-10"
                              data-index={1}
                              element="a"
                              href="/fluorite"
                              maxWidth="6em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-10"
                                data-index={1}
                                element="a"
                                href="/fluorite"
                                maxWidth="6em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Fluorite Will Truncate
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-9"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Fluorite Will Truncate
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </PrimaryNav>
      </PrimaryNav>
      <SecondaryNav>
        <SecondaryNav
          align="start"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
          type="pills"
        >
          <Navigation
            align="start"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
            secondary={true}
            type="pills"
          >
            <Navigation
              align="start"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Secondary"
              type="_pills"
            >
              <nav
                className="emotion-37"
                onChange={[Function]}
              >
                <NavItem
                  align="start"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="6em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={1}
                    element="a"
                    href="/fluorite"
                    maxWidth="6em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={1}
                      element="a"
                      href="/fluorite"
                      maxWidth="6em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={1}
                            element="a"
                            href="/fluorite"
                            maxWidth="6em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-29"
                              data-index={1}
                              element="a"
                              href="/fluorite"
                              maxWidth="6em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-29"
                                data-index={1}
                                element="a"
                                href="/fluorite"
                                maxWidth="6em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Fluorite Will Truncate
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-28"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Fluorite Will Truncate
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </SecondaryNav>
      </SecondaryNav>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`NavItem demo examples Snapshots: selected 1`] = `
.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-1 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-1:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-1:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-0:focus {
  outline: 1px solid #cfe0fc;
  outline-offset: -1px;
}

.emotion-19 {
  pointer-events: all;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

.emotion-19:focus {
  outline: 1px solid #84b1fa;
  outline-offset: -1px;
}

.emotion-20 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 1.7142857142857142em;
}

.emotion-38[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-18 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  list-style: none;
  margin: 0;
  padding: 0.5em 2em;
}

.emotion-18 *,
.emotion-18 *::before,
.emotion-18 *::after {
  box-sizing: inherit;
}

.emotion-18 > :not(:first-child) {
  margin-left: 0.25em;
}

.emotion-4 {
  display: block;
  max-width: 8.5em;
}

.emotion-4:hover {
  color: #ffffff;
}

.emotion-4:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-4 > span > span > span,
.emotion-4 > span > span > span > span,
.emotion-4 > span > span > span > span > span {
  display: block;
}

.emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-3:focus:active,
.emotion-3:focus:hover {
  border-color: transparent;
}

.emotion-3:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-3::-moz-focus-inner {
  border: 0;
}

.emotion-3 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-3 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-3 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-3 [role="img"]:only-child {
  margin: 0;
}

.emotion-3:hover {
  color: #ffffff;
}

.emotion-3:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-3 > span > span > span,
.emotion-3 > span > span > span > span,
.emotion-3 > span > span > span > span > span {
  display: block;
}

.emotion-37 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-bottom: 1px solid #dde3ed;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0.5em 0.75em;
}

.emotion-37 *,
.emotion-37 *::before,
.emotion-37 *::after {
  box-sizing: inherit;
}

.emotion-37 > :not(:first-child) {
  margin-left: 0.125em;
}

.emotion-23 {
  display: block;
  max-width: 8.5em;
}

.emotion-23:hover {
  color: #3272d9;
}

.emotion-23:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-23 > span > span > span,
.emotion-23 > span > span > span > span,
.emotion-23 > span > span > span > span > span {
  display: block;
}

.emotion-22 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-22:focus:active,
.emotion-22:focus:hover {
  border-color: transparent;
}

.emotion-22:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-22::-moz-focus-inner {
  border: 0;
}

.emotion-22 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-22 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-22 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-22 [role="img"]:only-child {
  margin: 0;
}

.emotion-22:hover {
  color: #3272d9;
}

.emotion-22:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-22 > span > span > span,
.emotion-22 > span > span > span > span,
.emotion-22 > span > span > span > span > span {
  display: block;
}

.emotion-10 {
  display: block;
  max-width: 8.5em;
  border-color: #114599;
}

.emotion-10:hover {
  background-color: #114599;
  border-color: #114599;
  color: #ffffff;
}

.emotion-10,
.emotion-10:focus {
  background-color: #114599;
  color: #ffffff;
}

.emotion-10:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-10 > span > span > span,
.emotion-10 > span > span > span > span,
.emotion-10 > span > span > span > span > span {
  display: block;
}

.emotion-9 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
  border-color: #114599;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #3272d9,0 0 0 2px #cfe0fc;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-9:hover {
  background-color: #1d5bbf;
  border-color: transparent;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-9:focus:active,
.emotion-9:focus:hover {
  border-color: transparent;
}

.emotion-9:active {
  background-color: #114599;
  border-color: transparent;
  color: #ffffff;
}

.emotion-9::-moz-focus-inner {
  border: 0;
}

.emotion-9 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-9 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-9 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-9 [role="img"]:only-child {
  margin: 0;
}

.emotion-9:hover {
  background-color: #114599;
  border-color: #114599;
  color: #ffffff;
}

.emotion-9,
.emotion-9:focus {
  background-color: #114599;
  color: #ffffff;
}

.emotion-9:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-9 > span > span > span,
.emotion-9 > span > span > span > span,
.emotion-9 > span > span > span > span > span {
  display: block;
}

.emotion-29 {
  display: block;
  max-width: 8.5em;
  border-color: #3272d9;
}

.emotion-29:hover {
  background-color: #3272d9;
  border-color: #3272d9;
  color: #ffffff;
}

.emotion-29,
.emotion-29:focus {
  background-color: #3272d9;
  color: #ffffff;
}

.emotion-29:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-29 > span > span > span,
.emotion-29 > span > span > span > span,
.emotion-29 > span > span > span > span > span {
  display: block;
}

.emotion-28 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.75em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 1em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  display: block;
  max-width: 8.5em;
  border-color: #3272d9;
}

.emotion-28 *,
.emotion-28 *::before,
.emotion-28 *::after {
  box-sizing: inherit;
}

.emotion-28:focus {
  background-color: transparent;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #84b1fa;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:hover {
  background-color: transparent;
  border-color: transparent;
  color: #58606e;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-28:focus:active,
.emotion-28:focus:hover {
  border-color: transparent;
}

.emotion-28:active {
  background-color: #f5f7fa;
  border-color: transparent;
  color: #58606e;
}

.emotion-28::-moz-focus-inner {
  border: 0;
}

.emotion-28 [role="img"] {
  box-sizing: content-box;
  color: inherit;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-28 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-28 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-28 [role="img"]:only-child {
  margin: 0;
}

.emotion-28:hover {
  background-color: #3272d9;
  border-color: #3272d9;
  color: #ffffff;
}

.emotion-28,
.emotion-28:focus {
  background-color: #3272d9;
  color: #ffffff;
}

.emotion-28:active > span > span > span > span > span:focus {
  outline: none;
}

.emotion-28 > span > span > span,
.emotion-28 > span > span > span > span,
.emotion-28 > span > span > span > span > span {
  display: block;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-38"
    >
      <PrimaryNav>
        <PrimaryNav
          align="center"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
        >
          <Navigation
            align="center"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
          >
            <Navigation
              align="center"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Primary"
              type=""
            >
              <nav
                className="emotion-18"
                onChange={[Function]}
              >
                <NavItem
                  align="center"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={true}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    aria-current="page"
                    circular={false}
                    data-index={1}
                    element="a"
                    href="/fluorite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={true}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      aria-current="page"
                      circular={false}
                      data-index={1}
                      element="a"
                      href="/fluorite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={true}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            aria-current="page"
                            circular={false}
                            data-index={1}
                            element="a"
                            href="/fluorite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={true}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              aria-current="page"
                              circular={false}
                              className="emotion-10"
                              data-index={1}
                              element="a"
                              href="/fluorite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={true}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                aria-current="page"
                                circular={false}
                                className="emotion-10"
                                data-index={1}
                                element="a"
                                href="/fluorite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={true}
                                size="large"
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  aria-current="page"
                                  className="emotion-9"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Fluorite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="center"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Primary"
                  selected={false}
                  type=""
                >
                  <WithTheme(Themed(NavItem))
                    align="center"
                    circular={false}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Primary"
                    selected={false}
                    size="large"
                    type=""
                  >
                    <Themed(NavItem)
                      align="center"
                      circular={false}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Primary"
                      selected={false}
                      size="large"
                      type=""
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="center"
                            circular={false}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Primary"
                            selected={false}
                            size="large"
                            type=""
                          >
                            <Button
                              align="center"
                              circular={false}
                              className="emotion-4"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              selected={false}
                              size="large"
                              type="button"
                            >
                              <Button
                                align="center"
                                circular={false}
                                className="emotion-4"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                selected={false}
                                size="large"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-3"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-1"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-0"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </PrimaryNav>
      </PrimaryNav>
      <SecondaryNav>
        <SecondaryNav
          align="start"
          itemElement="a"
          maxItemWidth="8.5em"
          messages={
            Object {
              "moreLabel": "More navigation items",
              "moreText": "More",
            }
          }
          onChange={[Function]}
          type="pills"
        >
          <Navigation
            align="start"
            itemElement="a"
            maxItemWidth="8.5em"
            messages={
              Object {
                "moreLabel": "More navigation items",
                "moreText": "More",
              }
            }
            onChange={[Function]}
            secondary={true}
            type="pills"
          >
            <Navigation
              align="start"
              itemElement="a"
              maxItemWidth="8.5em"
              messages={
                Object {
                  "moreLabel": "More navigation items",
                  "moreText": "More",
                }
              }
              onChange={[Function]}
              prefix="Secondary"
              type="_pills"
            >
              <nav
                className="emotion-37"
                onChange={[Function]}
              >
                <NavItem
                  align="start"
                  element="a"
                  href="/malachite"
                  index={0}
                  key="0"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={0}
                    element="a"
                    href="/malachite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={0}
                      element="a"
                      href="/malachite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={0}
                            element="a"
                            href="/malachite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={0}
                              element="a"
                              href="/malachite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={0}
                                element="a"
                                href="/malachite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Malachite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={0}
                                  href="/malachite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Malachite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/fluorite"
                  index={1}
                  key="1"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={true}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    aria-current="page"
                    circular={true}
                    data-index={1}
                    element="a"
                    href="/fluorite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={true}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      aria-current="page"
                      circular={true}
                      data-index={1}
                      element="a"
                      href="/fluorite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={true}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            aria-current="page"
                            circular={true}
                            data-index={1}
                            element="a"
                            href="/fluorite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={true}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              aria-current="page"
                              circular={true}
                              className="emotion-29"
                              data-index={1}
                              element="a"
                              href="/fluorite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={true}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                aria-current="page"
                                circular={true}
                                className="emotion-29"
                                data-index={1}
                                element="a"
                                href="/fluorite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={true}
                                size="small"
                                text={
                                  <Truncate>
                                    Fluorite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  aria-current="page"
                                  className="emotion-28"
                                  data-index={1}
                                  href="/fluorite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Fluorite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
                <NavItem
                  align="start"
                  element="a"
                  href="/magnetite"
                  index={2}
                  key="2"
                  maxWidth="8.5em"
                  onClick={[Function]}
                  prefix="Secondary"
                  secondary={true}
                  selected={false}
                  type="_pills"
                >
                  <WithTheme(Themed(NavItem))
                    align="start"
                    circular={true}
                    data-index={2}
                    element="a"
                    href="/magnetite"
                    maxWidth="8.5em"
                    onClick={[Function]}
                    prefix="Secondary"
                    secondary={true}
                    selected={false}
                    size="small"
                    type="_pills"
                  >
                    <Themed(NavItem)
                      align="start"
                      circular={true}
                      data-index={2}
                      element="a"
                      href="/magnetite"
                      maxWidth="8.5em"
                      onClick={[Function]}
                      prefix="Secondary"
                      secondary={true}
                      selected={false}
                      size="small"
                      type="_pills"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <NavItem
                            align="start"
                            circular={true}
                            data-index={2}
                            element="a"
                            href="/magnetite"
                            maxWidth="8.5em"
                            onClick={[Function]}
                            prefix="Secondary"
                            secondary={true}
                            selected={false}
                            size="small"
                            type="_pills"
                          >
                            <Button
                              align="start"
                              circular={true}
                              className="emotion-23"
                              data-index={2}
                              element="a"
                              href="/magnetite"
                              maxWidth="8.5em"
                              onClick={[Function]}
                              secondary={true}
                              selected={false}
                              size="small"
                              type="button"
                            >
                              <Button
                                align="start"
                                circular={true}
                                className="emotion-23"
                                data-index={2}
                                element="a"
                                href="/magnetite"
                                maxWidth="8.5em"
                                onClick={[Function]}
                                secondary={true}
                                selected={false}
                                size="small"
                                text={
                                  <Truncate>
                                    Magnetite
                                  </Truncate>
                                }
                                type="button"
                              >
                                <a
                                  className="emotion-22"
                                  data-index={2}
                                  href="/magnetite"
                                  onClick={[Function]}
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-2"
                                    >
                                      <Styled(span)
                                        size="small"
                                      >
                                        <span
                                          className="emotion-20"
                                        >
                                          <Truncate>
                                            <Truncate
                                              innerRef={[Function]}
                                            >
                                              <span
                                                className="emotion-19"
                                              >
                                                Magnetite
                                                <EventListener
                                                  listeners={
                                                    Array [
                                                      Object {
                                                        "event": "resize",
                                                        "handler": [Function],
                                                        "target": "window",
                                                      },
                                                    ]
                                                  }
                                                />
                                              </span>
                                            </Truncate>
                                          </Truncate>
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </a>
                              </Button>
                            </Button>
                          </NavItem>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(NavItem)>
                  </WithTheme(Themed(NavItem))>
                </NavItem>
              </nav>
            </Navigation>
          </Navigation>
        </SecondaryNav>
      </SecondaryNav>
    </div>
  </Styled(div)>
</DemoLayout>
`;
