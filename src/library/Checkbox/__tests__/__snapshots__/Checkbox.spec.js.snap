// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox demo examples controlled 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

<Component>
  <MyForm>
    <DemoForm>
      <glamorous(form)
        onSubmit={[Function]}
      >
        <form
          className="css-0"
          onSubmit={[Function]}
        >
          <Checkbox
            checked={false}
            label="Fluorite"
            name="minerals"
            onChange={[Function]}
            value="fluorite"
          >
            <ThemedComponent
              checked={false}
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Fluorite"
              labelPosition="end"
              name="minerals"
              onChange={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="fluorite"
            >
              <Themed(Choice)
                checked={false}
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Fluorite"
                labelPosition="end"
                name="minerals"
                onChange={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="fluorite"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      checked={false}
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Fluorite"
                      labelPosition="end"
                      name="minerals"
                      onChange={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="fluorite"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-1"
                        >
                          <glamorous(input)
                            checked={false}
                            innerRef={[Function]}
                            name="minerals"
                            onChange={[Function]}
                            size="large"
                            type="checkbox"
                            value="fluorite"
                          >
                            <input
                              checked={false}
                              className="css-3"
                              name="minerals"
                              onChange={[Function]}
                              size="large"
                              type="checkbox"
                              value="fluorite"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-21"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-22"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-23"
                            >
                              Fluorite
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
          <Checkbox
            checked={true}
            label="Quartz"
            name="minerals"
            onChange={[Function]}
            value="quartz"
          >
            <ThemedComponent
              checked={true}
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Quartz"
              labelPosition="end"
              name="minerals"
              onChange={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="quartz"
            >
              <Themed(Choice)
                checked={true}
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Quartz"
                labelPosition="end"
                name="minerals"
                onChange={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="quartz"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      checked={true}
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Quartz"
                      labelPosition="end"
                      name="minerals"
                      onChange={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="quartz"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-1"
                        >
                          <glamorous(input)
                            checked={true}
                            innerRef={[Function]}
                            name="minerals"
                            onChange={[Function]}
                            size="large"
                            type="checkbox"
                            value="quartz"
                          >
                            <input
                              checked={true}
                              className="css-3"
                              name="minerals"
                              onChange={[Function]}
                              size="large"
                              type="checkbox"
                              value="quartz"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-21"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-22"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-23"
                            >
                              Quartz
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
          <Checkbox
            checked={true}
            label="Magnetite"
            name="minerals"
            onChange={[Function]}
            value="magnetite"
          >
            <ThemedComponent
              checked={true}
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Magnetite"
              labelPosition="end"
              name="minerals"
              onChange={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="magnetite"
            >
              <Themed(Choice)
                checked={true}
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Magnetite"
                labelPosition="end"
                name="minerals"
                onChange={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="magnetite"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      checked={true}
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Magnetite"
                      labelPosition="end"
                      name="minerals"
                      onChange={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="magnetite"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-1"
                        >
                          <glamorous(input)
                            checked={true}
                            innerRef={[Function]}
                            name="minerals"
                            onChange={[Function]}
                            size="large"
                            type="checkbox"
                            value="magnetite"
                          >
                            <input
                              checked={true}
                              className="css-3"
                              name="minerals"
                              onChange={[Function]}
                              size="large"
                              type="checkbox"
                              value="magnetite"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-21"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-22"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-23"
                            >
                              Magnetite
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
        </form>
      </glamorous(form)>
    </DemoForm>
  </MyForm>
</Component>
`;

exports[`Checkbox demo examples controlled 2`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
}

.css-24 *,
[data-css-24] *,
.css-24 *::before,
[data-css-24] *::before,
.css-24 *::after,
[data-css-24] *::after {
  box-sizing: inherit;
}

.css-24 > *:not(:last-child),
[data-css-24] > *:not(:last-child) {
  margin-bottom: 1em;
}

<Component>
  <MyForm>
    <DemoForm>
      <glamorous(form)
        onSubmit={[Function]}
      >
        <form
          className="css-0"
          onSubmit={[Function]}
        >
          <CheckboxGroup
            checked={
              Array [
                "magnetite",
                "quartz",
              ]
            }
            data={
              Array [
                Object {
                  "label": "Fluorite",
                  "value": "fluorite",
                },
                Object {
                  "label": "Magnetite",
                  "value": "magnetite",
                },
                Object {
                  "label": "Quartz",
                  "value": "quartz",
                },
              ]
            }
            name="minerals"
            onChange={[Function]}
          >
            <ThemedComponent
              checked={
                Array [
                  "magnetite",
                  "quartz",
                ]
              }
              data={
                Array [
                  Object {
                    "label": "Fluorite",
                    "value": "fluorite",
                  },
                  Object {
                    "label": "Magnetite",
                    "value": "magnetite",
                  },
                  Object {
                    "label": "Quartz",
                    "value": "quartz",
                  },
                ]
              }
              input={[Function]}
              name="minerals"
              onChange={[Function]}
              rootProps={Object {}}
              type="checkbox"
            >
              <Themed(ChoiceGroup)
                checked={
                  Array [
                    "magnetite",
                    "quartz",
                  ]
                }
                data={
                  Array [
                    Object {
                      "label": "Fluorite",
                      "value": "fluorite",
                    },
                    Object {
                      "label": "Magnetite",
                      "value": "magnetite",
                    },
                    Object {
                      "label": "Quartz",
                      "value": "quartz",
                    },
                  ]
                }
                input={[Function]}
                name="minerals"
                onChange={[Function]}
                rootProps={Object {}}
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <ChoiceGroup
                      checked={
                        Array [
                          "magnetite",
                          "quartz",
                        ]
                      }
                      data={
                        Array [
                          Object {
                            "label": "Fluorite",
                            "value": "fluorite",
                          },
                          Object {
                            "label": "Magnetite",
                            "value": "magnetite",
                          },
                          Object {
                            "label": "Quartz",
                            "value": "quartz",
                          },
                        ]
                      }
                      input={[Function]}
                      name="minerals"
                      onChange={[Function]}
                      rootProps={Object {}}
                      type="checkbox"
                    >
                      <ChoiceGroup
                        role="group"
                        size="large"
                      >
                        <div
                          className="css-24"
                          role="group"
                        >
                          <Checkbox
                            checked={false}
                            key="0"
                            label="Fluorite"
                            name="minerals"
                            onChange={[Function]}
                            size="large"
                            value="fluorite"
                          >
                            <ThemedComponent
                              checked={false}
                              iconChecked={<IconCheckBoxCheck />}
                              inputRef={[Function]}
                              label="Fluorite"
                              labelPosition="end"
                              name="minerals"
                              onChange={[Function]}
                              rootProps={
                                Object {
                                  "className": undefined,
                                }
                              }
                              size="large"
                              type="checkbox"
                              value="fluorite"
                            >
                              <Themed(Choice)
                                checked={false}
                                iconChecked={<IconCheckBoxCheck />}
                                inputRef={[Function]}
                                label="Fluorite"
                                labelPosition="end"
                                name="minerals"
                                onChange={[Function]}
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="checkbox"
                                value="fluorite"
                              >
                                <ThemeProvider>
                                  <ThemeProvider>
                                    <Choice
                                      checked={false}
                                      iconChecked={<IconCheckBoxCheck />}
                                      inputRef={[Function]}
                                      label="Fluorite"
                                      labelPosition="end"
                                      name="minerals"
                                      onChange={[Function]}
                                      rootProps={
                                        Object {
                                          "className": undefined,
                                        }
                                      }
                                      size="large"
                                      type="checkbox"
                                      value="fluorite"
                                    >
                                      <Choice
                                        labelPosition="end"
                                      >
                                        <label
                                          className="css-1"
                                        >
                                          <glamorous(input)
                                            checked={false}
                                            innerRef={[Function]}
                                            name="minerals"
                                            onChange={[Function]}
                                            size="large"
                                            type="checkbox"
                                            value="fluorite"
                                          >
                                            <input
                                              checked={false}
                                              className="css-3"
                                              name="minerals"
                                              onChange={[Function]}
                                              size="large"
                                              type="checkbox"
                                              value="fluorite"
                                            />
                                          </glamorous(input)>
                                          <glamorous(span)
                                            labelPosition="end"
                                            size="large"
                                          >
                                            <span
                                              className="css-21"
                                            >
                                              <IconCheckBoxCheck>
                                                <Icon
                                                  rtl={false}
                                                  size="medium"
                                                >
                                                  <glamorous(svg)
                                                    aria-hidden={true}
                                                    role="img"
                                                    rtl={false}
                                                    size="medium"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="css-22"
                                                      role="img"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <g>
                                                        <path
                                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </glamorous(svg)>
                                                </Icon>
                                              </IconCheckBoxCheck>
                                            </span>
                                          </glamorous(span)>
                                          <glamorous(span)
                                            labelPosition="end"
                                            size="large"
                                          >
                                            <span
                                              className="css-23"
                                            >
                                              Fluorite
                                            </span>
                                          </glamorous(span)>
                                        </label>
                                      </Choice>
                                    </Choice>
                                  </ThemeProvider>
                                </ThemeProvider>
                              </Themed(Choice)>
                            </ThemedComponent>
                          </Checkbox>
                          <Checkbox
                            checked={true}
                            key="1"
                            label="Magnetite"
                            name="minerals"
                            onChange={[Function]}
                            size="large"
                            value="magnetite"
                          >
                            <ThemedComponent
                              checked={true}
                              iconChecked={<IconCheckBoxCheck />}
                              inputRef={[Function]}
                              label="Magnetite"
                              labelPosition="end"
                              name="minerals"
                              onChange={[Function]}
                              rootProps={
                                Object {
                                  "className": undefined,
                                }
                              }
                              size="large"
                              type="checkbox"
                              value="magnetite"
                            >
                              <Themed(Choice)
                                checked={true}
                                iconChecked={<IconCheckBoxCheck />}
                                inputRef={[Function]}
                                label="Magnetite"
                                labelPosition="end"
                                name="minerals"
                                onChange={[Function]}
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="checkbox"
                                value="magnetite"
                              >
                                <ThemeProvider>
                                  <ThemeProvider>
                                    <Choice
                                      checked={true}
                                      iconChecked={<IconCheckBoxCheck />}
                                      inputRef={[Function]}
                                      label="Magnetite"
                                      labelPosition="end"
                                      name="minerals"
                                      onChange={[Function]}
                                      rootProps={
                                        Object {
                                          "className": undefined,
                                        }
                                      }
                                      size="large"
                                      type="checkbox"
                                      value="magnetite"
                                    >
                                      <Choice
                                        labelPosition="end"
                                      >
                                        <label
                                          className="css-1"
                                        >
                                          <glamorous(input)
                                            checked={true}
                                            innerRef={[Function]}
                                            name="minerals"
                                            onChange={[Function]}
                                            size="large"
                                            type="checkbox"
                                            value="magnetite"
                                          >
                                            <input
                                              checked={true}
                                              className="css-3"
                                              name="minerals"
                                              onChange={[Function]}
                                              size="large"
                                              type="checkbox"
                                              value="magnetite"
                                            />
                                          </glamorous(input)>
                                          <glamorous(span)
                                            labelPosition="end"
                                            size="large"
                                          >
                                            <span
                                              className="css-21"
                                            >
                                              <IconCheckBoxCheck>
                                                <Icon
                                                  rtl={false}
                                                  size="medium"
                                                >
                                                  <glamorous(svg)
                                                    aria-hidden={true}
                                                    role="img"
                                                    rtl={false}
                                                    size="medium"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="css-22"
                                                      role="img"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <g>
                                                        <path
                                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </glamorous(svg)>
                                                </Icon>
                                              </IconCheckBoxCheck>
                                            </span>
                                          </glamorous(span)>
                                          <glamorous(span)
                                            labelPosition="end"
                                            size="large"
                                          >
                                            <span
                                              className="css-23"
                                            >
                                              Magnetite
                                            </span>
                                          </glamorous(span)>
                                        </label>
                                      </Choice>
                                    </Choice>
                                  </ThemeProvider>
                                </ThemeProvider>
                              </Themed(Choice)>
                            </ThemedComponent>
                          </Checkbox>
                          <Checkbox
                            checked={true}
                            key="2"
                            label="Quartz"
                            name="minerals"
                            onChange={[Function]}
                            size="large"
                            value="quartz"
                          >
                            <ThemedComponent
                              checked={true}
                              iconChecked={<IconCheckBoxCheck />}
                              inputRef={[Function]}
                              label="Quartz"
                              labelPosition="end"
                              name="minerals"
                              onChange={[Function]}
                              rootProps={
                                Object {
                                  "className": undefined,
                                }
                              }
                              size="large"
                              type="checkbox"
                              value="quartz"
                            >
                              <Themed(Choice)
                                checked={true}
                                iconChecked={<IconCheckBoxCheck />}
                                inputRef={[Function]}
                                label="Quartz"
                                labelPosition="end"
                                name="minerals"
                                onChange={[Function]}
                                rootProps={
                                  Object {
                                    "className": undefined,
                                  }
                                }
                                size="large"
                                type="checkbox"
                                value="quartz"
                              >
                                <ThemeProvider>
                                  <ThemeProvider>
                                    <Choice
                                      checked={true}
                                      iconChecked={<IconCheckBoxCheck />}
                                      inputRef={[Function]}
                                      label="Quartz"
                                      labelPosition="end"
                                      name="minerals"
                                      onChange={[Function]}
                                      rootProps={
                                        Object {
                                          "className": undefined,
                                        }
                                      }
                                      size="large"
                                      type="checkbox"
                                      value="quartz"
                                    >
                                      <Choice
                                        labelPosition="end"
                                      >
                                        <label
                                          className="css-1"
                                        >
                                          <glamorous(input)
                                            checked={true}
                                            innerRef={[Function]}
                                            name="minerals"
                                            onChange={[Function]}
                                            size="large"
                                            type="checkbox"
                                            value="quartz"
                                          >
                                            <input
                                              checked={true}
                                              className="css-3"
                                              name="minerals"
                                              onChange={[Function]}
                                              size="large"
                                              type="checkbox"
                                              value="quartz"
                                            />
                                          </glamorous(input)>
                                          <glamorous(span)
                                            labelPosition="end"
                                            size="large"
                                          >
                                            <span
                                              className="css-21"
                                            >
                                              <IconCheckBoxCheck>
                                                <Icon
                                                  rtl={false}
                                                  size="medium"
                                                >
                                                  <glamorous(svg)
                                                    aria-hidden={true}
                                                    role="img"
                                                    rtl={false}
                                                    size="medium"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="css-22"
                                                      role="img"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <g>
                                                        <path
                                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </glamorous(svg)>
                                                </Icon>
                                              </IconCheckBoxCheck>
                                            </span>
                                          </glamorous(span)>
                                          <glamorous(span)
                                            labelPosition="end"
                                            size="large"
                                          >
                                            <span
                                              className="css-23"
                                            >
                                              Quartz
                                            </span>
                                          </glamorous(span)>
                                        </label>
                                      </Choice>
                                    </Choice>
                                  </ThemeProvider>
                                </ThemeProvider>
                              </Themed(Choice)>
                            </ThemedComponent>
                          </Checkbox>
                        </div>
                      </ChoiceGroup>
                    </ChoiceGroup>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(ChoiceGroup)>
            </ThemedComponent>
          </CheckboxGroup>
        </form>
      </glamorous(form)>
    </DemoForm>
  </MyForm>
</Component>
`;

exports[`Checkbox demo examples data-vs-children 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5em 0;
}

.css-25,
[data-css-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
}

.css-25 *,
[data-css-25] *,
.css-25 *::before,
[data-css-25] *::before,
.css-25 *::after,
[data-css-25] *::after {
  box-sizing: inherit;
}

.css-25 > *:not(:last-child),
[data-css-25] > *:not(:last-child) {
  margin-bottom: 1em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <CheckboxGroup
        data={
          Array [
            Object {
              "label": "Fluorite",
              "value": "fluorite",
            },
            Object {
              "label": "Magnetite",
              "value": "magnetite",
            },
            Object {
              "label": "Quartz",
              "value": "quartz",
            },
          ]
        }
        defaultChecked={
          Array [
            "magnetite",
            "quartz",
          ]
        }
        name="minerals-1"
      >
        <ThemedComponent
          data={
            Array [
              Object {
                "label": "Fluorite",
                "value": "fluorite",
              },
              Object {
                "label": "Magnetite",
                "value": "magnetite",
              },
              Object {
                "label": "Quartz",
                "value": "quartz",
              },
            ]
          }
          defaultChecked={
            Array [
              "magnetite",
              "quartz",
            ]
          }
          input={[Function]}
          name="minerals-1"
          rootProps={Object {}}
          type="checkbox"
        >
          <Themed(ChoiceGroup)
            data={
              Array [
                Object {
                  "label": "Fluorite",
                  "value": "fluorite",
                },
                Object {
                  "label": "Magnetite",
                  "value": "magnetite",
                },
                Object {
                  "label": "Quartz",
                  "value": "quartz",
                },
              ]
            }
            defaultChecked={
              Array [
                "magnetite",
                "quartz",
              ]
            }
            input={[Function]}
            name="minerals-1"
            rootProps={Object {}}
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <ChoiceGroup
                  data={
                    Array [
                      Object {
                        "label": "Fluorite",
                        "value": "fluorite",
                      },
                      Object {
                        "label": "Magnetite",
                        "value": "magnetite",
                      },
                      Object {
                        "label": "Quartz",
                        "value": "quartz",
                      },
                    ]
                  }
                  defaultChecked={
                    Array [
                      "magnetite",
                      "quartz",
                    ]
                  }
                  input={[Function]}
                  name="minerals-1"
                  rootProps={Object {}}
                  type="checkbox"
                >
                  <ChoiceGroup
                    role="group"
                    size="large"
                  >
                    <div
                      className="css-25"
                      role="group"
                    >
                      <Checkbox
                        defaultChecked={false}
                        key="0"
                        label="Fluorite"
                        name="minerals-1"
                        size="large"
                        value="fluorite"
                      >
                        <ThemedComponent
                          defaultChecked={false}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Fluorite"
                          labelPosition="end"
                          name="minerals-1"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="fluorite"
                        >
                          <Themed(Choice)
                            defaultChecked={false}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Fluorite"
                            labelPosition="end"
                            name="minerals-1"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="fluorite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={false}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Fluorite"
                                  labelPosition="end"
                                  name="minerals-1"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="fluorite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={false}
                                        innerRef={[Function]}
                                        name="minerals-1"
                                        size="large"
                                        type="checkbox"
                                        value="fluorite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={false}
                                          name="minerals-1"
                                          size="large"
                                          type="checkbox"
                                          value="fluorite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Fluorite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="1"
                        label="Magnetite"
                        name="minerals-1"
                        size="large"
                        value="magnetite"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Magnetite"
                          labelPosition="end"
                          name="minerals-1"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Magnetite"
                            labelPosition="end"
                            name="minerals-1"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="magnetite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Magnetite"
                                  labelPosition="end"
                                  name="minerals-1"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="magnetite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals-1"
                                        size="large"
                                        type="checkbox"
                                        value="magnetite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals-1"
                                          size="large"
                                          type="checkbox"
                                          value="magnetite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Magnetite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="2"
                        label="Quartz"
                        name="minerals-1"
                        size="large"
                        value="quartz"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Quartz"
                          labelPosition="end"
                          name="minerals-1"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="quartz"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Quartz"
                            labelPosition="end"
                            name="minerals-1"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="quartz"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Quartz"
                                  labelPosition="end"
                                  name="minerals-1"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="quartz"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals-1"
                                        size="large"
                                        type="checkbox"
                                        value="quartz"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals-1"
                                          size="large"
                                          type="checkbox"
                                          value="quartz"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Quartz
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                    </div>
                  </ChoiceGroup>
                </ChoiceGroup>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(ChoiceGroup)>
        </ThemedComponent>
      </CheckboxGroup>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="css-24"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <CheckboxGroup
        defaultChecked={
          Array [
            "hematite",
            "pyrite",
          ]
        }
        name="minerals-2"
      >
        <ThemedComponent
          defaultChecked={
            Array [
              "hematite",
              "pyrite",
            ]
          }
          input={[Function]}
          name="minerals-2"
          rootProps={Object {}}
          type="checkbox"
        >
          <Themed(ChoiceGroup)
            defaultChecked={
              Array [
                "hematite",
                "pyrite",
              ]
            }
            input={[Function]}
            name="minerals-2"
            rootProps={Object {}}
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <ChoiceGroup
                  defaultChecked={
                    Array [
                      "hematite",
                      "pyrite",
                    ]
                  }
                  input={[Function]}
                  name="minerals-2"
                  rootProps={Object {}}
                  type="checkbox"
                >
                  <ChoiceGroup
                    role="group"
                    size="large"
                  >
                    <div
                      className="css-25"
                      role="group"
                    >
                      <Checkbox
                        defaultChecked={false}
                        key="0/.0"
                        label="Azurite"
                        name="minerals-2"
                        size="large"
                        value="azurite"
                      >
                        <ThemedComponent
                          defaultChecked={false}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Azurite"
                          labelPosition="end"
                          name="minerals-2"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="azurite"
                        >
                          <Themed(Choice)
                            defaultChecked={false}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Azurite"
                            labelPosition="end"
                            name="minerals-2"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="azurite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={false}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Azurite"
                                  labelPosition="end"
                                  name="minerals-2"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="azurite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={false}
                                        innerRef={[Function]}
                                        name="minerals-2"
                                        size="large"
                                        type="checkbox"
                                        value="azurite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={false}
                                          name="minerals-2"
                                          size="large"
                                          type="checkbox"
                                          value="azurite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Azurite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="1/.1"
                        label="Hematite"
                        name="minerals-2"
                        size="large"
                        value="hematite"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Hematite"
                          labelPosition="end"
                          name="minerals-2"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="hematite"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Hematite"
                            labelPosition="end"
                            name="minerals-2"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="hematite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Hematite"
                                  labelPosition="end"
                                  name="minerals-2"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="hematite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals-2"
                                        size="large"
                                        type="checkbox"
                                        value="hematite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals-2"
                                          size="large"
                                          type="checkbox"
                                          value="hematite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Hematite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="2/.2"
                        label="Pyrite"
                        name="minerals-2"
                        size="large"
                        value="pyrite"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Pyrite"
                          labelPosition="end"
                          name="minerals-2"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="pyrite"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Pyrite"
                            labelPosition="end"
                            name="minerals-2"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="pyrite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Pyrite"
                                  labelPosition="end"
                                  name="minerals-2"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="pyrite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals-2"
                                        size="large"
                                        type="checkbox"
                                        value="pyrite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals-2"
                                          size="large"
                                          type="checkbox"
                                          value="pyrite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Pyrite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                    </div>
                  </ChoiceGroup>
                </ChoiceGroup>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(ChoiceGroup)>
        </ThemedComponent>
      </CheckboxGroup>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples disabled 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-1:hover:not(:disabled) + span,
[data-css-1]:hover:not(:disabled) + span,
.css-1[data-simulate-hover]:not(:disabled) + span,
[data-css-1][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-1:focus + span,
[data-css-1]:focus + span,
.css-1[data-simulate-focus] + span,
[data-css-1][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-1:checked + span,
[data-css-1]:checked + span,
.css-1[type="checkbox"]:indeterminate + span,
[data-css-1][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-1:checked:hover + span,
[data-css-1]:checked:hover + span,
.css-1[type="checkbox"]:indeterminate:hover + span,
[data-css-1][type="checkbox"]:indeterminate:hover + span,
.css-1:checked[data-simulate-hover] + span,
[data-css-1]:checked[data-simulate-hover] + span,
.css-1[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-1][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-1:checked:disabled + span,
[data-css-1]:checked:disabled + span,
.css-1[type="checkbox"]:indeterminate:disabled + span,
[data-css-1][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-19,
[data-css-19] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-20,
[data-css-20] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-20 *,
[data-css-20] *,
.css-20 *::before,
[data-css-20] *::before,
.css-20 *::after,
[data-css-20] *::after {
  box-sizing: inherit;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ebeff5;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  color: #afbacc;
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        disabled={true}
        label="Quartz"
        value="quartz"
      >
        <ThemedComponent
          disabled={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            disabled={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  disabled={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Choice
                    disabled={true}
                    labelPosition="end"
                  >
                    <label
                      className="css-20"
                    >
                      <glamorous(input)
                        disabled={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          className="css-1"
                          disabled={true}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-19"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-22"
                        >
                          Quartz
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        disabled={true}
        label="Magnetite"
        value="magnetite"
      >
        <ThemedComponent
          defaultChecked={true}
          disabled={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            defaultChecked={true}
            disabled={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  disabled={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Choice
                    disabled={true}
                    labelPosition="end"
                  >
                    <label
                      className="css-20"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        disabled={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          className="css-1"
                          defaultChecked={true}
                          disabled={true}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-19"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-22"
                        >
                          Magnetite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples form-field 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
}

.css-24 *,
[data-css-24] *,
.css-24 *::before,
[data-css-24] *::before,
.css-24 *::after,
[data-css-24] *::after {
  box-sizing: inherit;
}

.css-24 > *:not(:last-child),
[data-css-24] > *:not(:last-child) {
  margin-bottom: 1em;
}

.css-25,
[data-css-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-25 *,
[data-css-25] *,
.css-25 *::before,
[data-css-25] *::before,
.css-25 *::after,
[data-css-25] *::after {
  box-sizing: inherit;
}

.css-26,
[data-css-26] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-26 > *,
[data-css-26] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-27,
[data-css-27] {
  color: #db2929;
  font-size: 0.6875em;
}

.css-28,
[data-css-28] {
  color: #06783f;
  font-size: 0.6875em;
  margin-top: 0.7272727272727273em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <FormField
        caption="Hint: All of the above"
        data={
          Array [
            Object {
              "label": "Naturally occurring",
              "value": "natural",
            },
            Object {
              "label": "Inorganic",
              "value": "inorganic",
            },
            Object {
              "label": "Solid",
              "value": "solid",
            },
            Object {
              "label": "Definite chemical composition",
              "value": "composition",
            },
            Object {
              "label": "Crystalline structure",
              "value": "crystalline",
            },
          ]
        }
        input={[Function]}
        label="What are the primary characteristics of a mineral?"
        name="contact"
        required={true}
        requiredText="Required"
        variant="success"
      >
        <FormField>
          <div
            className="css-25"
          >
            <div>
              <glamorous(div)
                key="formField-69-textWrapper"
              >
                <div
                  className="css-26"
                >
                  <span
                    id="formField-69-labelText"
                  >
                    What are the primary characteristics of a mineral?
                  </span>
                  <glamorous(span)>
                    <span
                      className="css-27"
                    >
                      Required
                    </span>
                  </glamorous(span)>
                </div>
              </glamorous(div)>
              <CheckboxGroup
                aria-describedby="formField-69-caption"
                data={
                  Array [
                    Object {
                      "label": "Naturally occurring",
                      "value": "natural",
                    },
                    Object {
                      "label": "Inorganic",
                      "value": "inorganic",
                    },
                    Object {
                      "label": "Solid",
                      "value": "solid",
                    },
                    Object {
                      "label": "Definite chemical composition",
                      "value": "composition",
                    },
                    Object {
                      "label": "Crystalline structure",
                      "value": "crystalline",
                    },
                  ]
                }
                key="formField-69-control"
                name="contact"
                required={true}
                rootProps={
                  Object {
                    "aria-describedby": "formField-69-caption",
                    "aria-labelledby": "formField-69-labelText",
                  }
                }
                variant="success"
              >
                <ThemedComponent
                  aria-describedby="formField-69-caption"
                  data={
                    Array [
                      Object {
                        "label": "Naturally occurring",
                        "value": "natural",
                      },
                      Object {
                        "label": "Inorganic",
                        "value": "inorganic",
                      },
                      Object {
                        "label": "Solid",
                        "value": "solid",
                      },
                      Object {
                        "label": "Definite chemical composition",
                        "value": "composition",
                      },
                      Object {
                        "label": "Crystalline structure",
                        "value": "crystalline",
                      },
                    ]
                  }
                  input={[Function]}
                  name="contact"
                  required={true}
                  rootProps={
                    Object {
                      "aria-describedby": "formField-69-caption",
                      "aria-labelledby": "formField-69-labelText",
                    }
                  }
                  type="checkbox"
                  variant="success"
                >
                  <Themed(ChoiceGroup)
                    aria-describedby="formField-69-caption"
                    data={
                      Array [
                        Object {
                          "label": "Naturally occurring",
                          "value": "natural",
                        },
                        Object {
                          "label": "Inorganic",
                          "value": "inorganic",
                        },
                        Object {
                          "label": "Solid",
                          "value": "solid",
                        },
                        Object {
                          "label": "Definite chemical composition",
                          "value": "composition",
                        },
                        Object {
                          "label": "Crystalline structure",
                          "value": "crystalline",
                        },
                      ]
                    }
                    input={[Function]}
                    name="contact"
                    required={true}
                    rootProps={
                      Object {
                        "aria-describedby": "formField-69-caption",
                        "aria-labelledby": "formField-69-labelText",
                      }
                    }
                    type="checkbox"
                    variant="success"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <ChoiceGroup
                          aria-describedby="formField-69-caption"
                          data={
                            Array [
                              Object {
                                "label": "Naturally occurring",
                                "value": "natural",
                              },
                              Object {
                                "label": "Inorganic",
                                "value": "inorganic",
                              },
                              Object {
                                "label": "Solid",
                                "value": "solid",
                              },
                              Object {
                                "label": "Definite chemical composition",
                                "value": "composition",
                              },
                              Object {
                                "label": "Crystalline structure",
                                "value": "crystalline",
                              },
                            ]
                          }
                          input={[Function]}
                          name="contact"
                          required={true}
                          rootProps={
                            Object {
                              "aria-describedby": "formField-69-caption",
                              "aria-labelledby": "formField-69-labelText",
                            }
                          }
                          type="checkbox"
                          variant="success"
                        >
                          <ChoiceGroup
                            aria-describedby="formField-69-caption"
                            aria-labelledby="formField-69-labelText"
                            role="group"
                            size="large"
                          >
                            <div
                              aria-describedby="formField-69-caption"
                              aria-labelledby="formField-69-labelText"
                              className="css-24"
                              role="group"
                            >
                              <Checkbox
                                aria-describedby="formField-69-caption"
                                key="0"
                                label="Naturally occurring"
                                name="contact"
                                size="large"
                                value="natural"
                                variant="success"
                              >
                                <ThemedComponent
                                  aria-describedby="formField-69-caption"
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Naturally occurring"
                                  labelPosition="end"
                                  name="contact"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="natural"
                                  variant="success"
                                >
                                  <Themed(Choice)
                                    aria-describedby="formField-69-caption"
                                    iconChecked={<IconCheckBoxCheck />}
                                    inputRef={[Function]}
                                    label="Naturally occurring"
                                    labelPosition="end"
                                    name="contact"
                                    rootProps={
                                      Object {
                                        "className": undefined,
                                      }
                                    }
                                    size="large"
                                    type="checkbox"
                                    value="natural"
                                    variant="success"
                                  >
                                    <ThemeProvider>
                                      <ThemeProvider>
                                        <Choice
                                          aria-describedby="formField-69-caption"
                                          iconChecked={<IconCheckBoxCheck />}
                                          inputRef={[Function]}
                                          label="Naturally occurring"
                                          labelPosition="end"
                                          name="contact"
                                          rootProps={
                                            Object {
                                              "className": undefined,
                                            }
                                          }
                                          size="large"
                                          type="checkbox"
                                          value="natural"
                                          variant="success"
                                        >
                                          <Choice
                                            labelPosition="end"
                                          >
                                            <label
                                              className="css-1"
                                            >
                                              <glamorous(input)
                                                aria-describedby="formField-69-caption"
                                                innerRef={[Function]}
                                                name="contact"
                                                size="large"
                                                type="checkbox"
                                                value="natural"
                                                variant="success"
                                              >
                                                <input
                                                  aria-describedby="formField-69-caption"
                                                  className="css-3"
                                                  name="contact"
                                                  size="large"
                                                  type="checkbox"
                                                  value="natural"
                                                />
                                              </glamorous(input)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-21"
                                                >
                                                  <IconCheckBoxCheck>
                                                    <Icon
                                                      rtl={false}
                                                      size="medium"
                                                    >
                                                      <glamorous(svg)
                                                        aria-hidden={true}
                                                        role="img"
                                                        rtl={false}
                                                        size="medium"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="css-22"
                                                          role="img"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <g>
                                                            <path
                                                              d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                            />
                                                          </g>
                                                        </svg>
                                                      </glamorous(svg)>
                                                    </Icon>
                                                  </IconCheckBoxCheck>
                                                </span>
                                              </glamorous(span)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-23"
                                                >
                                                  Naturally occurring
                                                </span>
                                              </glamorous(span)>
                                            </label>
                                          </Choice>
                                        </Choice>
                                      </ThemeProvider>
                                    </ThemeProvider>
                                  </Themed(Choice)>
                                </ThemedComponent>
                              </Checkbox>
                              <Checkbox
                                aria-describedby="formField-69-caption"
                                key="1"
                                label="Inorganic"
                                name="contact"
                                size="large"
                                value="inorganic"
                                variant="success"
                              >
                                <ThemedComponent
                                  aria-describedby="formField-69-caption"
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Inorganic"
                                  labelPosition="end"
                                  name="contact"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="inorganic"
                                  variant="success"
                                >
                                  <Themed(Choice)
                                    aria-describedby="formField-69-caption"
                                    iconChecked={<IconCheckBoxCheck />}
                                    inputRef={[Function]}
                                    label="Inorganic"
                                    labelPosition="end"
                                    name="contact"
                                    rootProps={
                                      Object {
                                        "className": undefined,
                                      }
                                    }
                                    size="large"
                                    type="checkbox"
                                    value="inorganic"
                                    variant="success"
                                  >
                                    <ThemeProvider>
                                      <ThemeProvider>
                                        <Choice
                                          aria-describedby="formField-69-caption"
                                          iconChecked={<IconCheckBoxCheck />}
                                          inputRef={[Function]}
                                          label="Inorganic"
                                          labelPosition="end"
                                          name="contact"
                                          rootProps={
                                            Object {
                                              "className": undefined,
                                            }
                                          }
                                          size="large"
                                          type="checkbox"
                                          value="inorganic"
                                          variant="success"
                                        >
                                          <Choice
                                            labelPosition="end"
                                          >
                                            <label
                                              className="css-1"
                                            >
                                              <glamorous(input)
                                                aria-describedby="formField-69-caption"
                                                innerRef={[Function]}
                                                name="contact"
                                                size="large"
                                                type="checkbox"
                                                value="inorganic"
                                                variant="success"
                                              >
                                                <input
                                                  aria-describedby="formField-69-caption"
                                                  className="css-3"
                                                  name="contact"
                                                  size="large"
                                                  type="checkbox"
                                                  value="inorganic"
                                                />
                                              </glamorous(input)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-21"
                                                >
                                                  <IconCheckBoxCheck>
                                                    <Icon
                                                      rtl={false}
                                                      size="medium"
                                                    >
                                                      <glamorous(svg)
                                                        aria-hidden={true}
                                                        role="img"
                                                        rtl={false}
                                                        size="medium"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="css-22"
                                                          role="img"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <g>
                                                            <path
                                                              d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                            />
                                                          </g>
                                                        </svg>
                                                      </glamorous(svg)>
                                                    </Icon>
                                                  </IconCheckBoxCheck>
                                                </span>
                                              </glamorous(span)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-23"
                                                >
                                                  Inorganic
                                                </span>
                                              </glamorous(span)>
                                            </label>
                                          </Choice>
                                        </Choice>
                                      </ThemeProvider>
                                    </ThemeProvider>
                                  </Themed(Choice)>
                                </ThemedComponent>
                              </Checkbox>
                              <Checkbox
                                aria-describedby="formField-69-caption"
                                key="2"
                                label="Solid"
                                name="contact"
                                size="large"
                                value="solid"
                                variant="success"
                              >
                                <ThemedComponent
                                  aria-describedby="formField-69-caption"
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Solid"
                                  labelPosition="end"
                                  name="contact"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="solid"
                                  variant="success"
                                >
                                  <Themed(Choice)
                                    aria-describedby="formField-69-caption"
                                    iconChecked={<IconCheckBoxCheck />}
                                    inputRef={[Function]}
                                    label="Solid"
                                    labelPosition="end"
                                    name="contact"
                                    rootProps={
                                      Object {
                                        "className": undefined,
                                      }
                                    }
                                    size="large"
                                    type="checkbox"
                                    value="solid"
                                    variant="success"
                                  >
                                    <ThemeProvider>
                                      <ThemeProvider>
                                        <Choice
                                          aria-describedby="formField-69-caption"
                                          iconChecked={<IconCheckBoxCheck />}
                                          inputRef={[Function]}
                                          label="Solid"
                                          labelPosition="end"
                                          name="contact"
                                          rootProps={
                                            Object {
                                              "className": undefined,
                                            }
                                          }
                                          size="large"
                                          type="checkbox"
                                          value="solid"
                                          variant="success"
                                        >
                                          <Choice
                                            labelPosition="end"
                                          >
                                            <label
                                              className="css-1"
                                            >
                                              <glamorous(input)
                                                aria-describedby="formField-69-caption"
                                                innerRef={[Function]}
                                                name="contact"
                                                size="large"
                                                type="checkbox"
                                                value="solid"
                                                variant="success"
                                              >
                                                <input
                                                  aria-describedby="formField-69-caption"
                                                  className="css-3"
                                                  name="contact"
                                                  size="large"
                                                  type="checkbox"
                                                  value="solid"
                                                />
                                              </glamorous(input)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-21"
                                                >
                                                  <IconCheckBoxCheck>
                                                    <Icon
                                                      rtl={false}
                                                      size="medium"
                                                    >
                                                      <glamorous(svg)
                                                        aria-hidden={true}
                                                        role="img"
                                                        rtl={false}
                                                        size="medium"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="css-22"
                                                          role="img"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <g>
                                                            <path
                                                              d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                            />
                                                          </g>
                                                        </svg>
                                                      </glamorous(svg)>
                                                    </Icon>
                                                  </IconCheckBoxCheck>
                                                </span>
                                              </glamorous(span)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-23"
                                                >
                                                  Solid
                                                </span>
                                              </glamorous(span)>
                                            </label>
                                          </Choice>
                                        </Choice>
                                      </ThemeProvider>
                                    </ThemeProvider>
                                  </Themed(Choice)>
                                </ThemedComponent>
                              </Checkbox>
                              <Checkbox
                                aria-describedby="formField-69-caption"
                                key="3"
                                label="Definite chemical composition"
                                name="contact"
                                size="large"
                                value="composition"
                                variant="success"
                              >
                                <ThemedComponent
                                  aria-describedby="formField-69-caption"
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Definite chemical composition"
                                  labelPosition="end"
                                  name="contact"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="composition"
                                  variant="success"
                                >
                                  <Themed(Choice)
                                    aria-describedby="formField-69-caption"
                                    iconChecked={<IconCheckBoxCheck />}
                                    inputRef={[Function]}
                                    label="Definite chemical composition"
                                    labelPosition="end"
                                    name="contact"
                                    rootProps={
                                      Object {
                                        "className": undefined,
                                      }
                                    }
                                    size="large"
                                    type="checkbox"
                                    value="composition"
                                    variant="success"
                                  >
                                    <ThemeProvider>
                                      <ThemeProvider>
                                        <Choice
                                          aria-describedby="formField-69-caption"
                                          iconChecked={<IconCheckBoxCheck />}
                                          inputRef={[Function]}
                                          label="Definite chemical composition"
                                          labelPosition="end"
                                          name="contact"
                                          rootProps={
                                            Object {
                                              "className": undefined,
                                            }
                                          }
                                          size="large"
                                          type="checkbox"
                                          value="composition"
                                          variant="success"
                                        >
                                          <Choice
                                            labelPosition="end"
                                          >
                                            <label
                                              className="css-1"
                                            >
                                              <glamorous(input)
                                                aria-describedby="formField-69-caption"
                                                innerRef={[Function]}
                                                name="contact"
                                                size="large"
                                                type="checkbox"
                                                value="composition"
                                                variant="success"
                                              >
                                                <input
                                                  aria-describedby="formField-69-caption"
                                                  className="css-3"
                                                  name="contact"
                                                  size="large"
                                                  type="checkbox"
                                                  value="composition"
                                                />
                                              </glamorous(input)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-21"
                                                >
                                                  <IconCheckBoxCheck>
                                                    <Icon
                                                      rtl={false}
                                                      size="medium"
                                                    >
                                                      <glamorous(svg)
                                                        aria-hidden={true}
                                                        role="img"
                                                        rtl={false}
                                                        size="medium"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="css-22"
                                                          role="img"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <g>
                                                            <path
                                                              d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                            />
                                                          </g>
                                                        </svg>
                                                      </glamorous(svg)>
                                                    </Icon>
                                                  </IconCheckBoxCheck>
                                                </span>
                                              </glamorous(span)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-23"
                                                >
                                                  Definite chemical composition
                                                </span>
                                              </glamorous(span)>
                                            </label>
                                          </Choice>
                                        </Choice>
                                      </ThemeProvider>
                                    </ThemeProvider>
                                  </Themed(Choice)>
                                </ThemedComponent>
                              </Checkbox>
                              <Checkbox
                                aria-describedby="formField-69-caption"
                                key="4"
                                label="Crystalline structure"
                                name="contact"
                                size="large"
                                value="crystalline"
                                variant="success"
                              >
                                <ThemedComponent
                                  aria-describedby="formField-69-caption"
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Crystalline structure"
                                  labelPosition="end"
                                  name="contact"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="crystalline"
                                  variant="success"
                                >
                                  <Themed(Choice)
                                    aria-describedby="formField-69-caption"
                                    iconChecked={<IconCheckBoxCheck />}
                                    inputRef={[Function]}
                                    label="Crystalline structure"
                                    labelPosition="end"
                                    name="contact"
                                    rootProps={
                                      Object {
                                        "className": undefined,
                                      }
                                    }
                                    size="large"
                                    type="checkbox"
                                    value="crystalline"
                                    variant="success"
                                  >
                                    <ThemeProvider>
                                      <ThemeProvider>
                                        <Choice
                                          aria-describedby="formField-69-caption"
                                          iconChecked={<IconCheckBoxCheck />}
                                          inputRef={[Function]}
                                          label="Crystalline structure"
                                          labelPosition="end"
                                          name="contact"
                                          rootProps={
                                            Object {
                                              "className": undefined,
                                            }
                                          }
                                          size="large"
                                          type="checkbox"
                                          value="crystalline"
                                          variant="success"
                                        >
                                          <Choice
                                            labelPosition="end"
                                          >
                                            <label
                                              className="css-1"
                                            >
                                              <glamorous(input)
                                                aria-describedby="formField-69-caption"
                                                innerRef={[Function]}
                                                name="contact"
                                                size="large"
                                                type="checkbox"
                                                value="crystalline"
                                                variant="success"
                                              >
                                                <input
                                                  aria-describedby="formField-69-caption"
                                                  className="css-3"
                                                  name="contact"
                                                  size="large"
                                                  type="checkbox"
                                                  value="crystalline"
                                                />
                                              </glamorous(input)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-21"
                                                >
                                                  <IconCheckBoxCheck>
                                                    <Icon
                                                      rtl={false}
                                                      size="medium"
                                                    >
                                                      <glamorous(svg)
                                                        aria-hidden={true}
                                                        role="img"
                                                        rtl={false}
                                                        size="medium"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="css-22"
                                                          role="img"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <g>
                                                            <path
                                                              d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                            />
                                                          </g>
                                                        </svg>
                                                      </glamorous(svg)>
                                                    </Icon>
                                                  </IconCheckBoxCheck>
                                                </span>
                                              </glamorous(span)>
                                              <glamorous(span)
                                                labelPosition="end"
                                                size="large"
                                              >
                                                <span
                                                  className="css-23"
                                                >
                                                  Crystalline structure
                                                </span>
                                              </glamorous(span)>
                                            </label>
                                          </Choice>
                                        </Choice>
                                      </ThemeProvider>
                                    </ThemeProvider>
                                  </Themed(Choice)>
                                </ThemedComponent>
                              </Checkbox>
                            </div>
                          </ChoiceGroup>
                        </ChoiceGroup>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(ChoiceGroup)>
                </ThemedComponent>
              </CheckboxGroup>
            </div>
            <glamorous(div)
              caption="Hint: All of the above"
              id="formField-69-caption"
              isGroup={true}
              variant="success"
            >
              <div
                className="css-28"
                id="formField-69-caption"
              >
                Hint: All of the above
              </div>
            </glamorous(div)>
          </div>
        </FormField>
      </FormField>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples inline 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: row;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
}

.css-24 *,
[data-css-24] *,
.css-24 *::before,
[data-css-24] *::before,
.css-24 *::after,
[data-css-24] *::after {
  box-sizing: inherit;
}

.css-24 > *:not(:last-child),
[data-css-24] > *:not(:last-child) {
  margin-bottom: 0;
  margin-right: 2em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <CheckboxGroup
        data={
          Array [
            Object {
              "label": "Fluorite",
              "value": "fluorite",
            },
            Object {
              "label": "Magnetite",
              "value": "magnetite",
            },
            Object {
              "label": "Quartz",
              "value": "quartz",
            },
          ]
        }
        defaultChecked={
          Array [
            "magnetite",
            "quartz",
          ]
        }
        inline={true}
        name="minerals"
      >
        <ThemedComponent
          data={
            Array [
              Object {
                "label": "Fluorite",
                "value": "fluorite",
              },
              Object {
                "label": "Magnetite",
                "value": "magnetite",
              },
              Object {
                "label": "Quartz",
                "value": "quartz",
              },
            ]
          }
          defaultChecked={
            Array [
              "magnetite",
              "quartz",
            ]
          }
          inline={true}
          input={[Function]}
          name="minerals"
          rootProps={Object {}}
          type="checkbox"
        >
          <Themed(ChoiceGroup)
            data={
              Array [
                Object {
                  "label": "Fluorite",
                  "value": "fluorite",
                },
                Object {
                  "label": "Magnetite",
                  "value": "magnetite",
                },
                Object {
                  "label": "Quartz",
                  "value": "quartz",
                },
              ]
            }
            defaultChecked={
              Array [
                "magnetite",
                "quartz",
              ]
            }
            inline={true}
            input={[Function]}
            name="minerals"
            rootProps={Object {}}
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <ChoiceGroup
                  data={
                    Array [
                      Object {
                        "label": "Fluorite",
                        "value": "fluorite",
                      },
                      Object {
                        "label": "Magnetite",
                        "value": "magnetite",
                      },
                      Object {
                        "label": "Quartz",
                        "value": "quartz",
                      },
                    ]
                  }
                  defaultChecked={
                    Array [
                      "magnetite",
                      "quartz",
                    ]
                  }
                  inline={true}
                  input={[Function]}
                  name="minerals"
                  rootProps={Object {}}
                  type="checkbox"
                >
                  <ChoiceGroup
                    inline={true}
                    role="group"
                    size="large"
                  >
                    <div
                      className="css-24"
                      role="group"
                    >
                      <Checkbox
                        defaultChecked={false}
                        key="0"
                        label="Fluorite"
                        name="minerals"
                        size="large"
                        value="fluorite"
                      >
                        <ThemedComponent
                          defaultChecked={false}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Fluorite"
                          labelPosition="end"
                          name="minerals"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="fluorite"
                        >
                          <Themed(Choice)
                            defaultChecked={false}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Fluorite"
                            labelPosition="end"
                            name="minerals"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="fluorite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={false}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Fluorite"
                                  labelPosition="end"
                                  name="minerals"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="fluorite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={false}
                                        innerRef={[Function]}
                                        name="minerals"
                                        size="large"
                                        type="checkbox"
                                        value="fluorite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={false}
                                          name="minerals"
                                          size="large"
                                          type="checkbox"
                                          value="fluorite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Fluorite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="1"
                        label="Magnetite"
                        name="minerals"
                        size="large"
                        value="magnetite"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Magnetite"
                          labelPosition="end"
                          name="minerals"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Magnetite"
                            labelPosition="end"
                            name="minerals"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="magnetite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Magnetite"
                                  labelPosition="end"
                                  name="minerals"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="magnetite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals"
                                        size="large"
                                        type="checkbox"
                                        value="magnetite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals"
                                          size="large"
                                          type="checkbox"
                                          value="magnetite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Magnetite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="2"
                        label="Quartz"
                        name="minerals"
                        size="large"
                        value="quartz"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Quartz"
                          labelPosition="end"
                          name="minerals"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="quartz"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Quartz"
                            labelPosition="end"
                            name="minerals"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="quartz"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Quartz"
                                  labelPosition="end"
                                  name="minerals"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="quartz"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals"
                                        size="large"
                                        type="checkbox"
                                        value="quartz"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals"
                                          size="large"
                                          type="checkbox"
                                          value="quartz"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Quartz
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                    </div>
                  </ChoiceGroup>
                </ChoiceGroup>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(ChoiceGroup)>
        </ThemedComponent>
      </CheckboxGroup>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples input-ref 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-0:hover span:first-of-type,
[data-css-0]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-2,
[data-css-2] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-2:hover:not(:disabled) + span,
[data-css-2]:hover:not(:disabled) + span,
.css-2[data-simulate-hover]:not(:disabled) + span,
[data-css-2][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-2:focus + span,
[data-css-2]:focus + span,
.css-2[data-simulate-focus] + span,
[data-css-2][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-2:checked + span,
[data-css-2]:checked + span,
.css-2[type="checkbox"]:indeterminate + span,
[data-css-2][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-2:checked:hover + span,
[data-css-2]:checked:hover + span,
.css-2[type="checkbox"]:indeterminate:hover + span,
[data-css-2][type="checkbox"]:indeterminate:hover + span,
.css-2:checked[data-simulate-hover] + span,
[data-css-2]:checked[data-simulate-hover] + span,
.css-2[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-2][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-2:checked:disabled + span,
[data-css-2]:checked:disabled + span,
.css-2[type="checkbox"]:indeterminate:disabled + span,
[data-css-2][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-20,
[data-css-20] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-20 svg,
[data-css-20] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-21,
[data-css-21] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-22,
[data-css-22] {
  font-size: 0.875em;
}

.css-23,
[data-css-23] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-23 *,
[data-css-23] *,
.css-23 *::before,
[data-css-23] *::before,
.css-23 *::after,
[data-css-23] *::after {
  box-sizing: inherit;
}

.css-23:focus,
[data-css-23]:focus,
.css-23[data-simulate-focus],
[data-css-23][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.css-23:hover,
[data-css-23]:hover,
.css-23[data-simulate-hover],
[data-css-23][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-23:active,
[data-css-23]:active,
.css-23[data-simulate-active],
[data-css-23][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-23::-moz-focus-inner,
[data-css-23]::-moz-focus-inner,
.css-23[data-simulate-mozfocusinner],
[data-css-23][data-simulate-mozfocusinner] {
  border: 0;
}

.css-23 [role="img"],
[data-css-23] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.css-23 [role="img"]:first-child,
[data-css-23] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-23 [role="img"]:last-child,
[data-css-23] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-23 [role="img"]:only-child,
[data-css-23] [role="img"]:only-child {
  margin: 0;
}

.css-37,
[data-css-37] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-38,
[data-css-38] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-38:first-child,
[data-css-38]:first-child,
.css-38[data-simulate-firstchild],
[data-css-38][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-38:last-child,
[data-css-38]:last-child,
.css-38[data-simulate-lastchild],
[data-css-38][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <glamorous(div)>
      <div
        className="css-1p1xtzc"
      >
        <Checkbox
          inputRef={[Function]}
          label="Option 1"
          value="1"
        >
          <ThemedComponent
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Option 1"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="1"
          >
            <Themed(Choice)
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Option 1"
              labelPosition="end"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="1"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <Choice
                    iconChecked={<IconCheckBoxCheck />}
                    inputRef={[Function]}
                    label="Option 1"
                    labelPosition="end"
                    rootProps={
                      Object {
                        "className": undefined,
                      }
                    }
                    size="large"
                    type="checkbox"
                    value="1"
                  >
                    <Choice
                      labelPosition="end"
                    >
                      <label
                        className="css-0"
                      >
                        <glamorous(input)
                          innerRef={[Function]}
                          size="large"
                          type="checkbox"
                          value="1"
                        >
                          <input
                            className="css-2"
                            size="large"
                            type="checkbox"
                            value="1"
                          />
                        </glamorous(input)>
                        <glamorous(span)
                          labelPosition="end"
                          size="large"
                        >
                          <span
                            className="css-20"
                          >
                            <IconCheckBoxCheck>
                              <Icon
                                rtl={false}
                                size="medium"
                              >
                                <glamorous(svg)
                                  aria-hidden={true}
                                  role="img"
                                  rtl={false}
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="css-21"
                                    role="img"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                      />
                                    </g>
                                  </svg>
                                </glamorous(svg)>
                              </Icon>
                            </IconCheckBoxCheck>
                          </span>
                        </glamorous(span)>
                        <glamorous(span)
                          labelPosition="end"
                          size="large"
                        >
                          <span
                            className="css-22"
                          >
                            Option 1
                          </span>
                        </glamorous(span)>
                      </label>
                    </Choice>
                  </Choice>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(Choice)>
          </ThemedComponent>
        </Checkbox>
        <Button
          element="button"
          onClick={[Function]}
          size="large"
          type="button"
          variant="regular"
        >
          <glamorous(button)
            element="button"
            onClick={[Function]}
            size="large"
            text="Focus the input"
            type="button"
            variant="regular"
          >
            <button
              className="css-23"
              onClick={[Function]}
              type="button"
            >
              <glamorous(span)>
                <span
                  className="css-37"
                >
                  <glamorous(span)
                    size="large"
                  >
                    <span
                      className="css-38"
                    >
                      Focus the input
                    </span>
                  </glamorous(span)>
                </span>
              </glamorous(span)>
            </button>
          </glamorous(button)>
        </Button>
      </div>
    </glamorous(div)>
  </MyForm>
</Component>
`;

exports[`Checkbox demo examples invalid 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        invalid={true}
        label="Quartz"
        name="minerals"
        value="quartz"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          invalid={true}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            invalid={true}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  invalid={true}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        aria-invalid={true}
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          aria-invalid={true}
                          className="css-3"
                          defaultChecked={true}
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Quartz
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        invalid={true}
        label="Magnetite"
        name="minerals"
        value="magnetite"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          invalid={true}
          label="Magnetite"
          labelPosition="end"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            invalid={true}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  invalid={true}
                  label="Magnetite"
                  labelPosition="end"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        aria-invalid={true}
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          aria-invalid={true}
                          className="css-3"
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Magnetite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples label-position-and-justification 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5em 0;
}

.css-25,
[data-css-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  flex-direction: row-reverse;
  justify-content: flex-end;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
}

.css-25 *,
[data-css-25] *,
.css-25 *::before,
[data-css-25] *::before,
.css-25 *::after,
[data-css-25] *::after {
  box-sizing: inherit;
}

.css-25:hover span:first-of-type,
[data-css-25]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-27,
[data-css-27] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 1em;
  margin-right: 0;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-27 svg,
[data-css-27] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-28,
[data-css-28] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-28 *,
[data-css-28] *,
.css-28 *::before,
[data-css-28] *::before,
.css-28 *::after,
[data-css-28] *::after {
  box-sizing: inherit;
}

.css-28:hover span:first-of-type,
[data-css-28]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-30,
[data-css-30] {
  font-size: 0.875em;
  margin-left: auto;
  margin-right: 0;
}

.css-31,
[data-css-31] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  flex-direction: row-reverse;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
}

.css-31 *,
[data-css-31] *,
.css-31 *::before,
[data-css-31] *::before,
.css-31 *::after,
[data-css-31] *::after {
  box-sizing: inherit;
}

.css-31:hover span:first-of-type,
[data-css-31]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-33,
[data-css-33] {
  font-size: 0.875em;
  margin-left: 0;
  margin-right: auto;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        label="Quartz"
        name="minerals"
        value="quartz"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          className="css-3"
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Quartz
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="css-24"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <Checkbox
        label="Magnetite"
        labelPosition="start"
        name="minerals"
        value="magnetite"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="start"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="start"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="start"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Choice
                    labelPosition="start"
                  >
                    <label
                      className="css-25"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          className="css-3"
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="start"
                        size="large"
                      >
                        <span
                          className="css-27"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="start"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Magnetite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="css-24"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <Checkbox
        justify={true}
        label="Azurite"
        name="minerals"
        value="azurite"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          justify={true}
          label="Azurite"
          labelPosition="end"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="azurite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            justify={true}
            label="Azurite"
            labelPosition="end"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="azurite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="Azurite"
                  labelPosition="end"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="azurite"
                >
                  <Choice
                    justify={true}
                    labelPosition="end"
                  >
                    <label
                      className="css-28"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="azurite"
                      >
                        <input
                          className="css-3"
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="azurite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        justify={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-30"
                        >
                          Azurite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="css-24"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <Checkbox
        justify={true}
        label="Hematite"
        labelPosition="start"
        name="minerals"
        value="hematite"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          justify={true}
          label="Hematite"
          labelPosition="start"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="hematite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            justify={true}
            label="Hematite"
            labelPosition="start"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="hematite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="Hematite"
                  labelPosition="start"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="hematite"
                >
                  <Choice
                    justify={true}
                    labelPosition="start"
                  >
                    <label
                      className="css-31"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="hematite"
                      >
                        <input
                          className="css-3"
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="hematite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="start"
                        size="large"
                      >
                        <span
                          className="css-27"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        justify={true}
                        labelPosition="start"
                        size="large"
                      >
                        <span
                          className="css-33"
                        >
                          Hematite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples label-wrapping 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
        name="example"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
          labelPosition="end"
          name="example"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
            labelPosition="end"
            name="example"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
                  labelPosition="end"
                  name="example"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="example"
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          name="example"
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis.
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples next-to-other-inputs 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-0:hover span:first-of-type,
[data-css-0]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-2,
[data-css-2] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-2:hover:not(:disabled) + span,
[data-css-2]:hover:not(:disabled) + span,
.css-2[data-simulate-hover]:not(:disabled) + span,
[data-css-2][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-2:focus + span,
[data-css-2]:focus + span,
.css-2[data-simulate-focus] + span,
[data-css-2][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-2:checked + span,
[data-css-2]:checked + span,
.css-2[type="checkbox"]:indeterminate + span,
[data-css-2][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-2:checked:hover + span,
[data-css-2]:checked:hover + span,
.css-2[type="checkbox"]:indeterminate:hover + span,
[data-css-2][type="checkbox"]:indeterminate:hover + span,
.css-2:checked[data-simulate-hover] + span,
[data-css-2]:checked[data-simulate-hover] + span,
.css-2[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-2][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-2:checked:disabled + span,
[data-css-2]:checked:disabled + span,
.css-2[type="checkbox"]:indeterminate:disabled + span,
[data-css-2][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-20,
[data-css-20] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-20 svg,
[data-css-20] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-21,
[data-css-21] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-22,
[data-css-22] {
  font-size: 0.875em;
}

.css-23,
[data-css-23] {
  font-size: 0.75em;
}

.css-24,
[data-css-24] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1.5em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1.5em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-24 svg,
[data-css-24] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-25,
[data-css-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-25 *,
[data-css-25] *,
.css-25 *::before,
[data-css-25] *::before,
.css-25 *::after,
[data-css-25] *::after {
  box-sizing: inherit;
}

.css-25:focus,
[data-css-25]:focus,
.css-25[data-simulate-focus],
[data-css-25][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.css-25:hover,
[data-css-25]:hover,
.css-25[data-simulate-hover],
[data-css-25][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-25:active,
[data-css-25]:active,
.css-25[data-simulate-active],
[data-css-25][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-25::-moz-focus-inner,
[data-css-25]::-moz-focus-inner,
.css-25[data-simulate-mozfocusinner],
[data-css-25][data-simulate-mozfocusinner] {
  border: 0;
}

.css-25 [role="img"],
[data-css-25] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.css-25 [role="img"]:first-child,
[data-css-25] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-25 [role="img"]:last-child,
[data-css-25] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-25 [role="img"]:only-child,
[data-css-25] [role="img"]:only-child {
  margin: 0;
}

.css-39,
[data-css-39] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-40,
[data-css-40] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-40:first-child,
[data-css-40]:first-child,
.css-40[data-simulate-firstchild],
[data-css-40][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-40:last-child,
[data-css-40]:last-child,
.css-40[data-simulate-lastchild],
[data-css-40][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

.css-47 > *,
[data-css-47] > * {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-47 > * > *,
[data-css-47] > * > * {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.css-48 > *:not(:last-child),
[data-css-48] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-48 > *,
[data-css-48] > * {
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-48 > * > *,
[data-css-48] > * > * {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.css-49,
[data-css-49] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-49 [role="img"],
[data-css-49] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-49 [role="img"]:last-of-type,
[data-css-49] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-51,
[data-css-51] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-51 *,
[data-css-51] *,
.css-51 *::before,
[data-css-51] *::before,
.css-51 *::after,
[data-css-51] *::after {
  box-sizing: inherit;
}

.css-51:hover > div:last-child,
[data-css-51]:hover > div:last-child,
.css-51[data-simulate-hover] > div:last-child,
[data-css-51][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-51:focus > div:last-child,
[data-css-51]:focus > div:last-child,
.css-51[data-simulate-focus] > div:last-child,
[data-css-51][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-51:active > div:last-child,
[data-css-51]:active > div:last-child,
.css-51[data-simulate-active] > div:last-child,
[data-css-51][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-51 [role="img"],
[data-css-51] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-51 [role="img"]:last-of-type,
[data-css-51] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-62,
[data-css-62] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.75em;
  height: 2em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-62::placeholder,
[data-css-62]::placeholder,
.css-62[data-simulate-placeholder],
[data-css-62][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-62::-ms-input-placeholder,
[data-css-62]::-ms-input-placeholder,
.css-62[data-simulate-msinputplaceholder],
[data-css-62][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-62:-ms-input-placeholder,
[data-css-62]:-ms-input-placeholder,
.css-62[data-simulate-msinputplaceholder],
[data-css-62][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-62::-ms-clear,
[data-css-62]::-ms-clear,
.css-62[data-simulate-msclear],
[data-css-62][data-simulate-msclear] {
  display: none;
}

.css-62:focus ~ div:last-child,
[data-css-62]:focus ~ div:last-child,
.css-62[data-simulate-focus] ~ div:last-child,
[data-css-62][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-76,
[data-css-76] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-77,
[data-css-77] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-77 *,
[data-css-77] *,
.css-77 *::before,
[data-css-77] *::before,
.css-77 *::after,
[data-css-77] *::after {
  box-sizing: inherit;
}

.css-77:focus,
[data-css-77]:focus,
.css-77[data-simulate-focus],
[data-css-77][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.css-77:hover,
[data-css-77]:hover,
.css-77[data-simulate-hover],
[data-css-77][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-77:active,
[data-css-77]:active,
.css-77[data-simulate-active],
[data-css-77][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-77::-moz-focus-inner,
[data-css-77]::-moz-focus-inner,
.css-77[data-simulate-mozfocusinner],
[data-css-77][data-simulate-mozfocusinner] {
  border: 0;
}

.css-77 [role="img"],
[data-css-77] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.css-77 [role="img"]:first-child,
[data-css-77] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-77 [role="img"]:last-child,
[data-css-77] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-77 [role="img"]:only-child,
[data-css-77] [role="img"]:only-child {
  margin: 0;
}

.css-91,
[data-css-91] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.css-92,
[data-css-92] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.2857142857142856em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-92::placeholder,
[data-css-92]::placeholder,
.css-92[data-simulate-placeholder],
[data-css-92][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-92::-ms-input-placeholder,
[data-css-92]::-ms-input-placeholder,
.css-92[data-simulate-msinputplaceholder],
[data-css-92][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-92:-ms-input-placeholder,
[data-css-92]:-ms-input-placeholder,
.css-92[data-simulate-msinputplaceholder],
[data-css-92][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-92::-ms-clear,
[data-css-92]::-ms-clear,
.css-92[data-simulate-msclear],
[data-css-92][data-simulate-msclear] {
  display: none;
}

.css-92:focus ~ div:last-child,
[data-css-92]:focus ~ div:last-child,
.css-92[data-simulate-focus] ~ div:last-child,
[data-css-92][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-106,
[data-css-106] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  min-width: 2em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-106 *,
[data-css-106] *,
.css-106 *::before,
[data-css-106] *::before,
.css-106 *::after,
[data-css-106] *::after {
  box-sizing: inherit;
}

.css-106:focus,
[data-css-106]:focus,
.css-106[data-simulate-focus],
[data-css-106][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.css-106:hover,
[data-css-106]:hover,
.css-106[data-simulate-hover],
[data-css-106][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-106:active,
[data-css-106]:active,
.css-106[data-simulate-active],
[data-css-106][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-106::-moz-focus-inner,
[data-css-106]::-moz-focus-inner,
.css-106[data-simulate-mozfocusinner],
[data-css-106][data-simulate-mozfocusinner] {
  border: 0;
}

.css-106 [role="img"],
[data-css-106] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.css-106 [role="img"]:first-child,
[data-css-106] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-106 [role="img"]:last-child,
[data-css-106] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-106 [role="img"]:only-child,
[data-css-106] [role="img"]:only-child {
  margin: 0;
}

.css-120,
[data-css-120] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.css-121,
[data-css-121] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 2.857142857142857em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-121::placeholder,
[data-css-121]::placeholder,
.css-121[data-simulate-placeholder],
[data-css-121][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-121::-ms-input-placeholder,
[data-css-121]::-ms-input-placeholder,
.css-121[data-simulate-msinputplaceholder],
[data-css-121][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-121:-ms-input-placeholder,
[data-css-121]:-ms-input-placeholder,
.css-121[data-simulate-msinputplaceholder],
[data-css-121][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-121::-ms-clear,
[data-css-121]::-ms-clear,
.css-121[data-simulate-msclear],
[data-css-121][data-simulate-msclear] {
  display: none;
}

.css-121:focus ~ div:last-child,
[data-css-121]:focus ~ div:last-child,
.css-121[data-simulate-focus] ~ div:last-child,
[data-css-121][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-135,
[data-css-135] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  min-width: 0;
  width: 100%;
  color: #58606e;
  font-size: 0.875em;
  height: 3.7142857142857144em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-135::placeholder,
[data-css-135]::placeholder,
.css-135[data-simulate-placeholder],
[data-css-135][data-simulate-placeholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-135::-ms-input-placeholder,
[data-css-135]::-ms-input-placeholder,
.css-135[data-simulate-msinputplaceholder],
[data-css-135][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-135:-ms-input-placeholder,
[data-css-135]:-ms-input-placeholder,
.css-135[data-simulate-msinputplaceholder],
[data-css-135][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  font-style: italic;
}

.css-135::-ms-clear,
[data-css-135]::-ms-clear,
.css-135[data-simulate-msclear],
[data-css-135][data-simulate-msclear] {
  display: none;
}

.css-135:focus ~ div:last-child,
[data-css-135]:focus ~ div:last-child,
.css-135[data-simulate-focus] ~ div:last-child,
[data-css-135][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-149,
[data-css-149] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  min-width: 3.25em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-149 *,
[data-css-149] *,
.css-149 *::before,
[data-css-149] *::before,
.css-149 *::after,
[data-css-149] *::after {
  box-sizing: inherit;
}

.css-149:focus,
[data-css-149]:focus,
.css-149[data-simulate-focus],
[data-css-149][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.css-149:hover,
[data-css-149]:hover,
.css-149[data-simulate-hover],
[data-css-149][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-149:active,
[data-css-149]:active,
.css-149[data-simulate-active],
[data-css-149][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-149::-moz-focus-inner,
[data-css-149]::-moz-focus-inner,
.css-149[data-simulate-mozfocusinner],
[data-css-149][data-simulate-mozfocusinner] {
  border: 0;
}

.css-149 [role="img"],
[data-css-149] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.css-149 [role="img"]:first-child,
[data-css-149] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-149 [role="img"]:last-child,
[data-css-149] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-149 [role="img"]:only-child,
[data-css-149] [role="img"]:only-child {
  margin: 0;
}

.css-163,
[data-css-163] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.css-163:first-child,
[data-css-163]:first-child,
.css-163[data-simulate-firstchild],
[data-css-163][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-163:last-child,
[data-css-163]:last-child,
.css-163[data-simulate-lastchild],
[data-css-163][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<glamorous(DemoForm)>
  <DemoForm
    className="css-47"
  >
    <glamorous(form)
      className="css-47"
      onSubmit={[Function]}
    >
      <form
        className="css-48"
        onSubmit={[Function]}
      >
        <div>
          <Checkbox
            label="Small"
            name="size"
            size="small"
          >
            <ThemedComponent
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Small"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="small"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Small"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="small"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Small"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="small"
                      type="checkbox"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-0"
                        >
                          <glamorous(input)
                            innerRef={[Function]}
                            name="size"
                            size="small"
                            type="checkbox"
                          >
                            <input
                              className="css-2"
                              name="size"
                              size="small"
                              type="checkbox"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="small"
                          >
                            <span
                              className="css-20"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-21"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="small"
                          >
                            <span
                              className="css-23"
                            >
                              Small
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
          <TextInput
            defaultValue="Small"
            size="small"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <FauxControl
                className="css-49"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <FauxControl
                  className="css-49"
                  control={[Function]}
                >
                  <div
                    className="css-51"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Small"
                      key="control"
                      size="small"
                      type="text"
                    >
                      <input
                        className="css-62"
                        defaultValue="Small"
                        size="small"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-76"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="small"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="small"
              text="Small"
              type="button"
              variant="regular"
            >
              <button
                className="css-77"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-39"
                  >
                    <glamorous(span)
                      size="small"
                    >
                      <span
                        className="css-91"
                      >
                        Small
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
        <div>
          <Checkbox
            label="Medium"
            name="size"
            size="medium"
          >
            <ThemedComponent
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Medium"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="medium"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Medium"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="medium"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Medium"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="medium"
                      type="checkbox"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-0"
                        >
                          <glamorous(input)
                            innerRef={[Function]}
                            name="size"
                            size="medium"
                            type="checkbox"
                          >
                            <input
                              className="css-2"
                              name="size"
                              size="medium"
                              type="checkbox"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="medium"
                          >
                            <span
                              className="css-20"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-21"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="medium"
                          >
                            <span
                              className="css-22"
                            >
                              Medium
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
          <TextInput
            defaultValue="Medium"
            size="medium"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <FauxControl
                className="css-49"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <FauxControl
                  className="css-49"
                  control={[Function]}
                >
                  <div
                    className="css-51"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Medium"
                      key="control"
                      size="medium"
                      type="text"
                    >
                      <input
                        className="css-92"
                        defaultValue="Medium"
                        size="medium"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-76"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="medium"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="medium"
              text="Medium"
              type="button"
              variant="regular"
            >
              <button
                className="css-106"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-39"
                  >
                    <glamorous(span)
                      size="medium"
                    >
                      <span
                        className="css-120"
                      >
                        Medium
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
        <div>
          <Checkbox
            label="Large"
            name="size"
          >
            <ThemedComponent
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Large"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Large"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Large"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-0"
                        >
                          <glamorous(input)
                            innerRef={[Function]}
                            name="size"
                            size="large"
                            type="checkbox"
                          >
                            <input
                              className="css-2"
                              name="size"
                              size="large"
                              type="checkbox"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-20"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-21"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="css-22"
                            >
                              Large
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
          <TextInput
            defaultValue="Large"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <FauxControl
                className="css-49"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-49"
                  control={[Function]}
                >
                  <div
                    className="css-51"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Large"
                      key="control"
                      size="large"
                      type="text"
                    >
                      <input
                        className="css-121"
                        defaultValue="Large"
                        size="large"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-76"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="large"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="large"
              text="Large"
              type="button"
              variant="regular"
            >
              <button
                className="css-25"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-39"
                  >
                    <glamorous(span)
                      size="large"
                    >
                      <span
                        className="css-40"
                      >
                        Large
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
        <div>
          <Checkbox
            label="Jumbo"
            name="size"
            size="jumbo"
          >
            <ThemedComponent
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Jumbo"
              labelPosition="end"
              name="size"
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="jumbo"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Jumbo"
                labelPosition="end"
                name="size"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="jumbo"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Jumbo"
                      labelPosition="end"
                      name="size"
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="jumbo"
                      type="checkbox"
                    >
                      <Choice
                        labelPosition="end"
                      >
                        <label
                          className="css-0"
                        >
                          <glamorous(input)
                            innerRef={[Function]}
                            name="size"
                            size="jumbo"
                            type="checkbox"
                          >
                            <input
                              className="css-2"
                              name="size"
                              size="jumbo"
                              type="checkbox"
                            />
                          </glamorous(input)>
                          <glamorous(span)
                            labelPosition="end"
                            size="jumbo"
                          >
                            <span
                              className="css-24"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <glamorous(svg)
                                    aria-hidden={true}
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="css-21"
                                      role="img"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </glamorous(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </glamorous(span)>
                          <glamorous(span)
                            labelPosition="end"
                            size="jumbo"
                          >
                            <span
                              className="css-22"
                            >
                              Jumbo
                            </span>
                          </glamorous(span)>
                        </label>
                      </Choice>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </ThemedComponent>
          </Checkbox>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <FauxControl
                className="css-49"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <FauxControl
                  className="css-49"
                  control={[Function]}
                >
                  <div
                    className="css-51"
                  >
                    <glamorous(glamorous(input))
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Jumbo"
                      key="control"
                      size="jumbo"
                      type="text"
                    >
                      <input
                        className="css-135"
                        defaultValue="Jumbo"
                        size="jumbo"
                        type="text"
                      />
                    </glamorous(glamorous(input))>
                    <Underlay>
                      <div
                        className="css-76"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </FauxControl>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="jumbo"
            type="button"
            variant="regular"
          >
            <glamorous(button)
              element="button"
              size="jumbo"
              text="Jumbo"
              type="button"
              variant="regular"
            >
              <button
                className="css-149"
                type="button"
              >
                <glamorous(span)>
                  <span
                    className="css-39"
                  >
                    <glamorous(span)
                      size="jumbo"
                    >
                      <span
                        className="css-163"
                      >
                        Jumbo
                      </span>
                    </glamorous(span)>
                  </span>
                </glamorous(span)>
              </button>
            </glamorous(button)>
          </Button>
        </div>
      </form>
    </glamorous(form)>
  </DemoForm>
</glamorous(DemoForm)>
`;

exports[`Checkbox demo examples required 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        label="Quartz"
        name="minerals"
        required={true}
        value="quartz"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          required={true}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            required={true}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  required={true}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        aria-required={true}
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="minerals"
                        required={true}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          aria-required={true}
                          className="css-3"
                          defaultChecked={true}
                          name="minerals"
                          required={true}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Quartz
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        label="Magnetite"
        name="minerals"
        required={true}
        value="magnetite"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          name="minerals"
          required={true}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            required={true}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="end"
                  name="minerals"
                  required={true}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        aria-required={true}
                        innerRef={[Function]}
                        name="minerals"
                        required={true}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          aria-required={true}
                          className="css-3"
                          name="minerals"
                          required={true}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Magnetite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples rtl 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5em 0;
}

.css-25,
[data-css-25] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  flex-direction: row-reverse;
  justify-content: flex-end;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
}

.css-25 *,
[data-css-25] *,
.css-25 *::before,
[data-css-25] *::before,
.css-25 *::after,
[data-css-25] *::after {
  box-sizing: inherit;
}

.css-25:hover span:first-of-type,
[data-css-25]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-27,
[data-css-27] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 1em;
  margin-right: 0;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-27 svg,
[data-css-27] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-28,
[data-css-28] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-28 *,
[data-css-28] *,
.css-28 *::before,
[data-css-28] *::before,
.css-28 *::after,
[data-css-28] *::after {
  box-sizing: inherit;
}

.css-28:hover span:first-of-type,
[data-css-28]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-30,
[data-css-30] {
  font-size: 0.875em;
  margin-left: auto;
  margin-right: 0;
}

.css-31,
[data-css-31] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  flex-direction: row-reverse;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
}

.css-31 *,
[data-css-31] *,
.css-31 *::before,
[data-css-31] *::before,
.css-31 *::after,
[data-css-31] *::after {
  box-sizing: inherit;
}

.css-31:hover span:first-of-type,
[data-css-31]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-33,
[data-css-33] {
  font-size: 0.875em;
  margin-left: 0;
  margin-right: auto;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <DemoForm>
        <glamorous(form)
          onSubmit={[Function]}
        >
          <form
            className="css-0"
            onSubmit={[Function]}
          >
            <Checkbox
              label="مرحبا بالعالم"
              name="example"
            >
              <ThemedComponent
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="مرحبا بالعالم"
                labelPosition="end"
                name="example"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="مرحبا بالعالم"
                  labelPosition="end"
                  name="example"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        label="مرحبا بالعالم"
                        labelPosition="end"
                        name="example"
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Choice
                          labelPosition="end"
                        >
                          <label
                            className="css-1"
                          >
                            <glamorous(input)
                              innerRef={[Function]}
                              name="example"
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="css-3"
                                name="example"
                                size="large"
                                type="checkbox"
                              />
                            </glamorous(input)>
                            <glamorous(span)
                              labelPosition="end"
                              size="large"
                            >
                              <span
                                className="css-27"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="css-22"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </glamorous(span)>
                            <glamorous(span)
                              labelPosition="end"
                              size="large"
                            >
                              <span
                                className="css-23"
                              >
                                مرحبا بالعالم
                              </span>
                            </glamorous(span)>
                          </label>
                        </Choice>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </ThemedComponent>
            </Checkbox>
            <Checkbox
              label="مرحبا بالعالم"
              labelPosition="start"
              name="example"
            >
              <ThemedComponent
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="مرحبا بالعالم"
                labelPosition="start"
                name="example"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="مرحبا بالعالم"
                  labelPosition="start"
                  name="example"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        label="مرحبا بالعالم"
                        labelPosition="start"
                        name="example"
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Choice
                          labelPosition="start"
                        >
                          <label
                            className="css-25"
                          >
                            <glamorous(input)
                              innerRef={[Function]}
                              name="example"
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="css-3"
                                name="example"
                                size="large"
                                type="checkbox"
                              />
                            </glamorous(input)>
                            <glamorous(span)
                              labelPosition="start"
                              size="large"
                            >
                              <span
                                className="css-21"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="css-22"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </glamorous(span)>
                            <glamorous(span)
                              labelPosition="start"
                              size="large"
                            >
                              <span
                                className="css-23"
                              >
                                مرحبا بالعالم
                              </span>
                            </glamorous(span)>
                          </label>
                        </Choice>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </ThemedComponent>
            </Checkbox>
            <FormFieldDivider>
              <FormFieldDivider
                role="separator"
              >
                <div
                  className="css-24"
                  role="separator"
                />
              </FormFieldDivider>
            </FormFieldDivider>
            <Checkbox
              justify={true}
              label="مرحبا بالعالم"
              name="example"
            >
              <ThemedComponent
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                justify={true}
                label="مرحبا بالعالم"
                labelPosition="end"
                name="example"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="مرحبا بالعالم"
                  labelPosition="end"
                  name="example"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        justify={true}
                        label="مرحبا بالعالم"
                        labelPosition="end"
                        name="example"
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Choice
                          justify={true}
                          labelPosition="end"
                        >
                          <label
                            className="css-28"
                          >
                            <glamorous(input)
                              innerRef={[Function]}
                              name="example"
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="css-3"
                                name="example"
                                size="large"
                                type="checkbox"
                              />
                            </glamorous(input)>
                            <glamorous(span)
                              labelPosition="end"
                              size="large"
                            >
                              <span
                                className="css-27"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="css-22"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </glamorous(span)>
                            <glamorous(span)
                              justify={true}
                              labelPosition="end"
                              size="large"
                            >
                              <span
                                className="css-33"
                              >
                                مرحبا بالعالم
                              </span>
                            </glamorous(span)>
                          </label>
                        </Choice>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </ThemedComponent>
            </Checkbox>
            <Checkbox
              justify={true}
              label="مرحبا بالعالم"
              labelPosition="start"
              name="example"
            >
              <ThemedComponent
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                justify={true}
                label="مرحبا بالعالم"
                labelPosition="start"
                name="example"
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="مرحبا بالعالم"
                  labelPosition="start"
                  name="example"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        justify={true}
                        label="مرحبا بالعالم"
                        labelPosition="start"
                        name="example"
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Choice
                          justify={true}
                          labelPosition="start"
                        >
                          <label
                            className="css-31"
                          >
                            <glamorous(input)
                              innerRef={[Function]}
                              name="example"
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="css-3"
                                name="example"
                                size="large"
                                type="checkbox"
                              />
                            </glamorous(input)>
                            <glamorous(span)
                              labelPosition="start"
                              size="large"
                            >
                              <span
                                className="css-21"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <glamorous(svg)
                                      aria-hidden={true}
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="css-22"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </glamorous(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </glamorous(span)>
                            <glamorous(span)
                              justify={true}
                              labelPosition="start"
                              size="large"
                            >
                              <span
                                className="css-30"
                              >
                                مرحبا بالعالم
                              </span>
                            </glamorous(span)>
                          </label>
                        </Choice>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </ThemedComponent>
            </Checkbox>
          </form>
        </glamorous(form)>
      </DemoForm>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`Checkbox demo examples sizes 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  font-size: 0.75em;
}

.css-25,
[data-css-25] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1.5em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1.5em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-25 svg,
[data-css-25] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        label="Small"
        name="size"
        size="small"
        value="small"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Small"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="small"
          type="checkbox"
          value="small"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Small"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="small"
            type="checkbox"
            value="small"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Small"
                  labelPosition="end"
                  name="size"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="small"
                  type="checkbox"
                  value="small"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="size"
                        size="small"
                        type="checkbox"
                        value="small"
                      >
                        <input
                          className="css-3"
                          name="size"
                          size="small"
                          type="checkbox"
                          value="small"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="small"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="small"
                      >
                        <span
                          className="css-24"
                        >
                          Small
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        label="Medium"
        name="size"
        size="medium"
        value="medium"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Medium"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="medium"
          type="checkbox"
          value="medium"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Medium"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="medium"
            type="checkbox"
            value="medium"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Medium"
                  labelPosition="end"
                  name="size"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="medium"
                  type="checkbox"
                  value="medium"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="size"
                        size="medium"
                        type="checkbox"
                        value="medium"
                      >
                        <input
                          className="css-3"
                          name="size"
                          size="medium"
                          type="checkbox"
                          value="medium"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="medium"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="medium"
                      >
                        <span
                          className="css-23"
                        >
                          Medium
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        label="Large"
        name="size"
        value="large"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Large"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="large"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Large"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="large"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Large"
                  labelPosition="end"
                  name="size"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="large"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="size"
                        size="large"
                        type="checkbox"
                        value="large"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          name="size"
                          size="large"
                          type="checkbox"
                          value="large"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Large
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        label="Jumbo"
        name="size"
        size="jumbo"
        value="jumbo"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Jumbo"
          labelPosition="end"
          name="size"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="jumbo"
          type="checkbox"
          value="jumbo"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Jumbo"
            labelPosition="end"
            name="size"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="jumbo"
            type="checkbox"
            value="jumbo"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Jumbo"
                  labelPosition="end"
                  name="size"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="jumbo"
                  type="checkbox"
                  value="jumbo"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="size"
                        size="jumbo"
                        type="checkbox"
                        value="jumbo"
                      >
                        <input
                          className="css-3"
                          name="size"
                          size="jumbo"
                          type="checkbox"
                          value="jumbo"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="jumbo"
                      >
                        <span
                          className="css-25"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="jumbo"
                      >
                        <span
                          className="css-23"
                        >
                          Jumbo
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples states 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-24 *,
[data-css-24] *,
.css-24 *::before,
[data-css-24] *::before,
.css-24 *::after,
[data-css-24] *::after {
  box-sizing: inherit;
}

.css-25,
[data-css-25] {
  align-items: center;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ebeff5;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-25 svg,
[data-css-25] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-26,
[data-css-26] {
  color: #afbacc;
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        label="Regular"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Regular"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Regular"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Regular"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Regular
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-hover=""
        label="Hover"
      >
        <ThemedComponent
          data-simulate-hover=""
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Hover"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-hover=""
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Hover"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-hover=""
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Hover"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-hover=""
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-hover=""
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Hover
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-focus=""
        label="Focus"
      >
        <ThemedComponent
          data-simulate-focus=""
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Focus"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-focus=""
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Focus"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-focus=""
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Focus"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-focus=""
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-focus=""
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-focus=""
        data-simulate-hover=""
        label="Focus & Hover"
      >
        <ThemedComponent
          data-simulate-focus=""
          data-simulate-hover=""
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Focus & Hover"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-focus=""
            data-simulate-hover=""
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Focus & Hover"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-focus=""
                  data-simulate-hover=""
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Focus & Hover"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-focus=""
                        data-simulate-hover=""
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-focus=""
                          data-simulate-hover=""
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus & Hover
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-active=""
        data-simulate-focus=""
        label="Focus & Active"
      >
        <ThemedComponent
          data-simulate-active=""
          data-simulate-focus=""
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Focus & Active"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-active=""
            data-simulate-focus=""
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Focus & Active"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-active=""
                  data-simulate-focus=""
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Focus & Active"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-active=""
                        data-simulate-focus=""
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-active=""
                          data-simulate-focus=""
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus & Active
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-active=""
        label="Active"
      >
        <ThemedComponent
          data-simulate-active=""
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Active"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-active=""
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Active"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-active=""
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Active"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-active=""
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-active=""
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Active
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        disabled={true}
        label="Disabled"
      >
        <ThemedComponent
          disabled={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Disabled"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            disabled={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Disabled"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  disabled={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Disabled"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    disabled={true}
                    labelPosition="end"
                  >
                    <label
                      className="css-24"
                    >
                      <glamorous(input)
                        disabled={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          disabled={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-25"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-26"
                        >
                          Disabled
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        label="Regular (checked)"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Regular (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Regular (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Regular (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Regular (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-hover=""
        defaultChecked={true}
        label="Hover (checked)"
      >
        <ThemedComponent
          data-simulate-hover=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Hover (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-hover=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Hover (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-hover=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Hover (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-hover=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-hover=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Hover (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-focus=""
        defaultChecked={true}
        label="Focus (checked)"
      >
        <ThemedComponent
          data-simulate-focus=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Focus (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-focus=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Focus (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-focus=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Focus (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-focus=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-focus=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-focus=""
        data-simulate-hover=""
        defaultChecked={true}
        label="Focus & Hover (checked)"
      >
        <ThemedComponent
          data-simulate-focus=""
          data-simulate-hover=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Focus & Hover (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-focus=""
            data-simulate-hover=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Focus & Hover (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-focus=""
                  data-simulate-hover=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Focus & Hover (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-focus=""
                        data-simulate-hover=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-focus=""
                          data-simulate-hover=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus & Hover (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-active=""
        data-simulate-focus=""
        defaultChecked={true}
        label="Focus & Active (checked)"
      >
        <ThemedComponent
          data-simulate-active=""
          data-simulate-focus=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Focus & Active (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-active=""
            data-simulate-focus=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Focus & Active (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-active=""
                  data-simulate-focus=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Focus & Active (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-active=""
                        data-simulate-focus=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-active=""
                          data-simulate-focus=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus & Active (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-active=""
        defaultChecked={true}
        label="Active (checked)"
      >
        <ThemedComponent
          data-simulate-active=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Active (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-active=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Active (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-active=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Active (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-active=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-active=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Active (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        disabled={true}
        label="Disabled (checked)"
      >
        <ThemedComponent
          defaultChecked={true}
          disabled={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Disabled (checked)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            defaultChecked={true}
            disabled={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Disabled (checked)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  disabled={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Disabled (checked)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    disabled={true}
                    labelPosition="end"
                  >
                    <label
                      className="css-24"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        disabled={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          disabled={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-25"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-26"
                        >
                          Disabled (checked)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        indeterminate={true}
        label="Regular (indeterminate)"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Regular (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Regular (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Regular (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Regular (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-hover=""
        defaultChecked={true}
        indeterminate={true}
        label="Hover (indeterminate)"
      >
        <ThemedComponent
          data-simulate-hover=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Hover (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-hover=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Hover (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-hover=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Hover (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-hover=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-hover=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Hover (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-focus=""
        defaultChecked={true}
        indeterminate={true}
        label="Focus (indeterminate)"
      >
        <ThemedComponent
          data-simulate-focus=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Focus (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-focus=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Focus (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-focus=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Focus (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-focus=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-focus=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-focus=""
        data-simulate-hover=""
        defaultChecked={true}
        indeterminate={true}
        label="Focus & Hover (indeterminate)"
      >
        <ThemedComponent
          data-simulate-focus=""
          data-simulate-hover=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Focus & Hover (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-focus=""
            data-simulate-hover=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Focus & Hover (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-focus=""
                  data-simulate-hover=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Focus & Hover (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-focus=""
                        data-simulate-hover=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-focus=""
                          data-simulate-hover=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus & Hover (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-active=""
        data-simulate-focus=""
        defaultChecked={true}
        indeterminate={true}
        label="Focus & Active (indeterminate)"
      >
        <ThemedComponent
          data-simulate-active=""
          data-simulate-focus=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Focus & Active (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-active=""
            data-simulate-focus=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Focus & Active (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-active=""
                  data-simulate-focus=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Focus & Active (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-active=""
                        data-simulate-focus=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-active=""
                          data-simulate-focus=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Focus & Active (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        data-simulate-active=""
        defaultChecked={true}
        indeterminate={true}
        label="Active (indeterminate)"
      >
        <ThemedComponent
          data-simulate-active=""
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Active (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            data-simulate-active=""
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Active (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  data-simulate-active=""
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Active (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        data-simulate-active=""
                        defaultChecked={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          data-simulate-active=""
                          defaultChecked={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Active (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        disabled={true}
        indeterminate={true}
        label="Disabled (indeterminate)"
      >
        <ThemedComponent
          defaultChecked={true}
          disabled={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Disabled (indeterminate)"
          labelPosition="end"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            defaultChecked={true}
            disabled={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Disabled (indeterminate)"
            labelPosition="end"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  disabled={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Disabled (indeterminate)"
                  labelPosition="end"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Choice
                    disabled={true}
                    labelPosition="end"
                  >
                    <label
                      className="css-24"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        disabled={true}
                        innerRef={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          disabled={true}
                          size="large"
                          type="checkbox"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-25"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-26"
                        >
                          Disabled (indeterminate)
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples tri-state 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        label="Unchecked"
        name="states"
        value="unchecked"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Unchecked"
          labelPosition="end"
          name="states"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="unchecked"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Unchecked"
            labelPosition="end"
            name="states"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="unchecked"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Unchecked"
                  labelPosition="end"
                  name="states"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="unchecked"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="states"
                        size="large"
                        type="checkbox"
                        value="unchecked"
                      >
                        <input
                          className="css-3"
                          name="states"
                          size="large"
                          type="checkbox"
                          value="unchecked"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Unchecked
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        label="Checked"
        name="states"
        value="checked"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Checked"
          labelPosition="end"
          name="states"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="checked"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Checked"
            labelPosition="end"
            name="states"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="checked"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Checked"
                  labelPosition="end"
                  name="states"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="checked"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="states"
                        size="large"
                        type="checkbox"
                        value="checked"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          name="states"
                          size="large"
                          type="checkbox"
                          value="checked"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Checked
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        indeterminate={true}
        label="Indeterminate"
        name="states"
        value="indeterminate"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxIndeterminate />}
          inputRef={[Function]}
          label="Indeterminate"
          labelPosition="end"
          name="states"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="indeterminate"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxIndeterminate />}
            inputRef={[Function]}
            label="Indeterminate"
            labelPosition="end"
            name="states"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="indeterminate"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxIndeterminate />}
                  inputRef={[Function]}
                  label="Indeterminate"
                  labelPosition="end"
                  name="states"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="indeterminate"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="states"
                        size="large"
                        type="checkbox"
                        value="indeterminate"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          name="states"
                          size="large"
                          type="checkbox"
                          value="indeterminate"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxIndeterminate>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M4 10h16v4H4z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxIndeterminate>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Indeterminate
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples uncontrolled 1`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        label="Quartz"
        name="minerals"
        value="quartz"
      >
        <ThemedComponent
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        defaultChecked={true}
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          className="css-3"
                          defaultChecked={true}
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Quartz
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
      <Checkbox
        label="Magnetite"
        name="minerals"
        value="magnetite"
      >
        <ThemedComponent
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          name="minerals"
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="end"
                  name="minerals"
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Choice
                    labelPosition="end"
                  >
                    <label
                      className="css-1"
                    >
                      <glamorous(input)
                        innerRef={[Function]}
                        name="minerals"
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          className="css-3"
                          name="minerals"
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </glamorous(input)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-21"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <glamorous(svg)
                                aria-hidden={true}
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="css-22"
                                  role="img"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </glamorous(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </glamorous(span)>
                      <glamorous(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="css-23"
                        >
                          Magnetite
                        </span>
                      </glamorous(span)>
                    </label>
                  </Choice>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </ThemedComponent>
      </Checkbox>
    </form>
  </glamorous(form)>
</DemoForm>
`;

exports[`Checkbox demo examples uncontrolled 2`] = `
.css-0 > *:not(:last-child),
[data-css-0] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  position: relative;
  justify-content: flex-start;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover span:first-of-type,
[data-css-1]:hover span:first-of-type {
  border-color: #1f5dc2;
}

.css-3,
[data-css-3] {
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-clip-path: inset(50%);
}

.css-3:hover:not(:disabled) + span,
[data-css-3]:hover:not(:disabled) + span,
.css-3[data-simulate-hover]:not(:disabled) + span,
[data-css-3][data-simulate-hover]:not(:disabled) + span {
  border-color: #1f5dc2;
}

.css-3:focus + span,
[data-css-3]:focus + span,
.css-3[data-simulate-focus] + span,
[data-css-3][data-simulate-focus] + span {
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-3:checked + span,
[data-css-3]:checked + span,
.css-3[type="checkbox"]:indeterminate + span,
[data-css-3][type="checkbox"]:indeterminate + span {
  background-color: #2e6fd9;
  border-color: #2e6fd9;
}

.css-3:checked:hover + span,
[data-css-3]:checked:hover + span,
.css-3[type="checkbox"]:indeterminate:hover + span,
[data-css-3][type="checkbox"]:indeterminate:hover + span,
.css-3:checked[data-simulate-hover] + span,
[data-css-3]:checked[data-simulate-hover] + span,
.css-3[type="checkbox"]:indeterminate[data-simulate-hover] + span,
[data-css-3][type="checkbox"]:indeterminate[data-simulate-hover] + span {
  background-color: #1f5dc2;
  border-color: #1f5dc2;
}

.css-3:checked:disabled + span,
[data-css-3]:checked:disabled + span,
.css-3[type="checkbox"]:indeterminate:disabled + span,
[data-css-3][type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #fff;
}

.css-21,
[data-css-21] {
  align-items: center;
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #fff;
  content: "";
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex: none;
  height: 1em;
  justify-content: center;
  margin-left: 0;
  margin-right: 1em;
  width: 1em;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-flex: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-21 svg,
[data-css-21] svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.css-22,
[data-css-22] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.css-23,
[data-css-23] {
  font-size: 0.875em;
}

.css-24,
[data-css-24] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
}

.css-24 *,
[data-css-24] *,
.css-24 *::before,
[data-css-24] *::before,
.css-24 *::after,
[data-css-24] *::after {
  box-sizing: inherit;
}

.css-24 > *:not(:last-child),
[data-css-24] > *:not(:last-child) {
  margin-bottom: 1em;
}

<DemoForm>
  <glamorous(form)
    onSubmit={[Function]}
  >
    <form
      className="css-0"
      onSubmit={[Function]}
    >
      <CheckboxGroup
        data={
          Array [
            Object {
              "label": "Fluorite",
              "value": "fluorite",
            },
            Object {
              "label": "Magnetite",
              "value": "magnetite",
            },
            Object {
              "label": "Quartz",
              "value": "quartz",
            },
          ]
        }
        defaultChecked={
          Array [
            "magnetite",
            "quartz",
          ]
        }
        name="minerals"
      >
        <ThemedComponent
          data={
            Array [
              Object {
                "label": "Fluorite",
                "value": "fluorite",
              },
              Object {
                "label": "Magnetite",
                "value": "magnetite",
              },
              Object {
                "label": "Quartz",
                "value": "quartz",
              },
            ]
          }
          defaultChecked={
            Array [
              "magnetite",
              "quartz",
            ]
          }
          input={[Function]}
          name="minerals"
          rootProps={Object {}}
          type="checkbox"
        >
          <Themed(ChoiceGroup)
            data={
              Array [
                Object {
                  "label": "Fluorite",
                  "value": "fluorite",
                },
                Object {
                  "label": "Magnetite",
                  "value": "magnetite",
                },
                Object {
                  "label": "Quartz",
                  "value": "quartz",
                },
              ]
            }
            defaultChecked={
              Array [
                "magnetite",
                "quartz",
              ]
            }
            input={[Function]}
            name="minerals"
            rootProps={Object {}}
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <ChoiceGroup
                  data={
                    Array [
                      Object {
                        "label": "Fluorite",
                        "value": "fluorite",
                      },
                      Object {
                        "label": "Magnetite",
                        "value": "magnetite",
                      },
                      Object {
                        "label": "Quartz",
                        "value": "quartz",
                      },
                    ]
                  }
                  defaultChecked={
                    Array [
                      "magnetite",
                      "quartz",
                    ]
                  }
                  input={[Function]}
                  name="minerals"
                  rootProps={Object {}}
                  type="checkbox"
                >
                  <ChoiceGroup
                    role="group"
                    size="large"
                  >
                    <div
                      className="css-24"
                      role="group"
                    >
                      <Checkbox
                        defaultChecked={false}
                        key="0"
                        label="Fluorite"
                        name="minerals"
                        size="large"
                        value="fluorite"
                      >
                        <ThemedComponent
                          defaultChecked={false}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Fluorite"
                          labelPosition="end"
                          name="minerals"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="fluorite"
                        >
                          <Themed(Choice)
                            defaultChecked={false}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Fluorite"
                            labelPosition="end"
                            name="minerals"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="fluorite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={false}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Fluorite"
                                  labelPosition="end"
                                  name="minerals"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="fluorite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={false}
                                        innerRef={[Function]}
                                        name="minerals"
                                        size="large"
                                        type="checkbox"
                                        value="fluorite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={false}
                                          name="minerals"
                                          size="large"
                                          type="checkbox"
                                          value="fluorite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Fluorite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="1"
                        label="Magnetite"
                        name="minerals"
                        size="large"
                        value="magnetite"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Magnetite"
                          labelPosition="end"
                          name="minerals"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Magnetite"
                            labelPosition="end"
                            name="minerals"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="magnetite"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Magnetite"
                                  labelPosition="end"
                                  name="minerals"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="magnetite"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals"
                                        size="large"
                                        type="checkbox"
                                        value="magnetite"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals"
                                          size="large"
                                          type="checkbox"
                                          value="magnetite"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Magnetite
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                      <Checkbox
                        defaultChecked={true}
                        key="2"
                        label="Quartz"
                        name="minerals"
                        size="large"
                        value="quartz"
                      >
                        <ThemedComponent
                          defaultChecked={true}
                          iconChecked={<IconCheckBoxCheck />}
                          inputRef={[Function]}
                          label="Quartz"
                          labelPosition="end"
                          name="minerals"
                          rootProps={
                            Object {
                              "className": undefined,
                            }
                          }
                          size="large"
                          type="checkbox"
                          value="quartz"
                        >
                          <Themed(Choice)
                            defaultChecked={true}
                            iconChecked={<IconCheckBoxCheck />}
                            inputRef={[Function]}
                            label="Quartz"
                            labelPosition="end"
                            name="minerals"
                            rootProps={
                              Object {
                                "className": undefined,
                              }
                            }
                            size="large"
                            type="checkbox"
                            value="quartz"
                          >
                            <ThemeProvider>
                              <ThemeProvider>
                                <Choice
                                  defaultChecked={true}
                                  iconChecked={<IconCheckBoxCheck />}
                                  inputRef={[Function]}
                                  label="Quartz"
                                  labelPosition="end"
                                  name="minerals"
                                  rootProps={
                                    Object {
                                      "className": undefined,
                                    }
                                  }
                                  size="large"
                                  type="checkbox"
                                  value="quartz"
                                >
                                  <Choice
                                    labelPosition="end"
                                  >
                                    <label
                                      className="css-1"
                                    >
                                      <glamorous(input)
                                        defaultChecked={true}
                                        innerRef={[Function]}
                                        name="minerals"
                                        size="large"
                                        type="checkbox"
                                        value="quartz"
                                      >
                                        <input
                                          className="css-3"
                                          defaultChecked={true}
                                          name="minerals"
                                          size="large"
                                          type="checkbox"
                                          value="quartz"
                                        />
                                      </glamorous(input)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-21"
                                        >
                                          <IconCheckBoxCheck>
                                            <Icon
                                              rtl={false}
                                              size="medium"
                                            >
                                              <glamorous(svg)
                                                aria-hidden={true}
                                                role="img"
                                                rtl={false}
                                                size="medium"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="css-22"
                                                  role="img"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <g>
                                                    <path
                                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                                    />
                                                  </g>
                                                </svg>
                                              </glamorous(svg)>
                                            </Icon>
                                          </IconCheckBoxCheck>
                                        </span>
                                      </glamorous(span)>
                                      <glamorous(span)
                                        labelPosition="end"
                                        size="large"
                                      >
                                        <span
                                          className="css-23"
                                        >
                                          Quartz
                                        </span>
                                      </glamorous(span)>
                                    </label>
                                  </Choice>
                                </Choice>
                              </ThemeProvider>
                            </ThemeProvider>
                          </Themed(Choice)>
                        </ThemedComponent>
                      </Checkbox>
                    </div>
                  </ChoiceGroup>
                </ChoiceGroup>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(ChoiceGroup)>
        </ThemedComponent>
      </CheckboxGroup>
    </form>
  </glamorous(form)>
</DemoForm>
`;
