// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StartEnd demo examples Snapshots: align-items 1`] = `
.emotion-4 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-right: 1rem;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-80::after {
  clear: both;
  content: "";
  display: table;
}

.emotion-80 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-15 {
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-13 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-33 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-32 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-32 *,
.emotion-32 *::before,
.emotion-32 *::after {
  box-sizing: inherit;
}

.emotion-53 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-52 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-52 *,
.emotion-52 *::before,
.emotion-52 *::after {
  box-sizing: inherit;
}

.emotion-73 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-72 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
  height: 5rem;
}

.emotion-72 *,
.emotion-72 *::before,
.emotion-72 *::after {
  box-sizing: inherit;
}

<Component>
  <Styled(div)>
    <div
      className="emotion-80"
    >
      <Styled(StartEnd)
        alignItems="stretch"
        key="0"
      >
        <StartEnd
          alignItems="stretch"
          className="emotion-15"
        >
          <Flex
            alignItems="stretch"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <WithTheme(Component)
              alignItems="stretch"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Component
                alignItems="stretch"
                className="emotion-15"
                direction="row"
                gutterWidth="md"
                justifyContent="between"
              >
                <Flex
                  alignItems="stretch"
                  className="emotion-15"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <FlexItem
                    alignItems="stretch"
                    className="emotion-13"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <Styled(div)
                      alignItems="stretch"
                      className="emotion-13"
                      direction="row"
                      element="div"
                      gutterWidth="md"
                      justifyContent="between"
                    >
                      <div
                        className="emotion-12"
                      >
                        <FlexItem
                          grow={0}
                          key=".$.0"
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                marginEnd="1rem"
                                shrink={1}
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          Start
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                        <FlexItem
                          grow={0}
                          key=".$.1"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                shrink={1}
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          End
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                      </div>
                    </Styled(div)>
                  </FlexItem>
                </Flex>
              </Component>
            </WithTheme(Component)>
          </Flex>
        </StartEnd>
      </Styled(StartEnd)>
      <Styled(StartEnd)
        alignItems="start"
        key="1"
      >
        <StartEnd
          alignItems="start"
          className="emotion-15"
        >
          <Flex
            alignItems="start"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <WithTheme(Component)
              alignItems="start"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Component
                alignItems="start"
                className="emotion-15"
                direction="row"
                gutterWidth="md"
                justifyContent="between"
              >
                <Flex
                  alignItems="start"
                  className="emotion-15"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <FlexItem
                    alignItems="start"
                    className="emotion-33"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <Styled(div)
                      alignItems="start"
                      className="emotion-33"
                      direction="row"
                      element="div"
                      gutterWidth="md"
                      justifyContent="between"
                    >
                      <div
                        className="emotion-32"
                      >
                        <FlexItem
                          grow={0}
                          key=".$.0"
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                marginEnd="1rem"
                                shrink={1}
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          Start
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                        <FlexItem
                          grow={0}
                          key=".$.1"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                shrink={1}
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          End
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                      </div>
                    </Styled(div)>
                  </FlexItem>
                </Flex>
              </Component>
            </WithTheme(Component)>
          </Flex>
        </StartEnd>
      </Styled(StartEnd)>
      <Styled(StartEnd)
        alignItems="center"
        key="2"
      >
        <StartEnd
          alignItems="center"
          className="emotion-15"
        >
          <Flex
            alignItems="center"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <WithTheme(Component)
              alignItems="center"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Component
                alignItems="center"
                className="emotion-15"
                direction="row"
                gutterWidth="md"
                justifyContent="between"
              >
                <Flex
                  alignItems="center"
                  className="emotion-15"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <FlexItem
                    alignItems="center"
                    className="emotion-53"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <Styled(div)
                      alignItems="center"
                      className="emotion-53"
                      direction="row"
                      element="div"
                      gutterWidth="md"
                      justifyContent="between"
                    >
                      <div
                        className="emotion-52"
                      >
                        <FlexItem
                          grow={0}
                          key=".$.0"
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                marginEnd="1rem"
                                shrink={1}
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          Start
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                        <FlexItem
                          grow={0}
                          key=".$.1"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                shrink={1}
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          End
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                      </div>
                    </Styled(div)>
                  </FlexItem>
                </Flex>
              </Component>
            </WithTheme(Component)>
          </Flex>
        </StartEnd>
      </Styled(StartEnd)>
      <Styled(StartEnd)
        alignItems="end"
        key="3"
      >
        <StartEnd
          alignItems="end"
          className="emotion-15"
        >
          <Flex
            alignItems="end"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <WithTheme(Component)
              alignItems="end"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Component
                alignItems="end"
                className="emotion-15"
                direction="row"
                gutterWidth="md"
                justifyContent="between"
              >
                <Flex
                  alignItems="end"
                  className="emotion-15"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <FlexItem
                    alignItems="end"
                    className="emotion-73"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <Styled(div)
                      alignItems="end"
                      className="emotion-73"
                      direction="row"
                      element="div"
                      gutterWidth="md"
                      justifyContent="between"
                    >
                      <div
                        className="emotion-72"
                      >
                        <FlexItem
                          grow={0}
                          key=".$.0"
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                marginEnd="1rem"
                                shrink={1}
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          Start
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                        <FlexItem
                          grow={0}
                          key=".$.1"
                          shrink={1}
                        >
                          <FlexItem
                            element="div"
                            grow={0}
                            shrink={1}
                          >
                            <FlexItem
                              className="emotion-4"
                              element="div"
                              grow={0}
                              shrink={1}
                            >
                              <Styled(div)
                                className="emotion-4"
                                element="div"
                                grow={0}
                                shrink={1}
                              >
                                <div
                                  className="emotion-9"
                                >
                                  <Styled(Flex)
                                    element="div"
                                  >
                                    <FlexItem
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <Styled(div)
                                        className="emotion-1"
                                        element="div"
                                      >
                                        <div
                                          className="emotion-0"
                                        >
                                          End
                                        </div>
                                      </Styled(div)>
                                    </FlexItem>
                                  </Styled(Flex)>
                                </div>
                              </Styled(div)>
                            </FlexItem>
                          </FlexItem>
                        </FlexItem>
                      </div>
                    </Styled(div)>
                  </FlexItem>
                </Flex>
              </Component>
            </WithTheme(Component)>
          </Flex>
        </StartEnd>
      </Styled(StartEnd)>
    </div>
  </Styled(div)>
</Component>
`;

exports[`StartEnd demo examples Snapshots: basic 1`] = `
.emotion-15 {
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-13 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-4 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-right: 1rem;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

<Styled(StartEnd)>
  <StartEnd
    className="emotion-15"
  >
    <Flex
      alignItems="stretch"
      className="emotion-15"
      direction="row"
      gutterWidth="md"
      justifyContent="between"
    >
      <WithTheme(Component)
        alignItems="stretch"
        className="emotion-15"
        direction="row"
        gutterWidth="md"
        justifyContent="between"
      >
        <Component
          alignItems="stretch"
          className="emotion-15"
          direction="row"
          gutterWidth="md"
          justifyContent="between"
        >
          <Flex
            alignItems="stretch"
            className="emotion-15"
            direction="row"
            element="div"
            gutterWidth="md"
            justifyContent="between"
          >
            <FlexItem
              alignItems="stretch"
              className="emotion-13"
              direction="row"
              element="div"
              gutterWidth="md"
              justifyContent="between"
            >
              <Styled(div)
                alignItems="stretch"
                className="emotion-13"
                direction="row"
                element="div"
                gutterWidth="md"
                justifyContent="between"
              >
                <div
                  className="emotion-12"
                >
                  <FlexItem
                    grow={0}
                    key=".$.0"
                    marginEnd="1rem"
                    shrink={1}
                  >
                    <FlexItem
                      element="div"
                      grow={0}
                      marginEnd="1rem"
                      shrink={1}
                    >
                      <FlexItem
                        className="emotion-4"
                        element="div"
                        grow={0}
                        marginEnd="1rem"
                        shrink={1}
                      >
                        <Styled(div)
                          className="emotion-4"
                          element="div"
                          grow={0}
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(Flex)
                              element="div"
                            >
                              <FlexItem
                                className="emotion-1"
                                element="div"
                              >
                                <Styled(div)
                                  className="emotion-1"
                                  element="div"
                                >
                                  <div
                                    className="emotion-0"
                                  >
                                    Start
                                  </div>
                                </Styled(div)>
                              </FlexItem>
                            </Styled(Flex)>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </FlexItem>
                  </FlexItem>
                  <FlexItem
                    grow={0}
                    key=".$.1"
                    shrink={1}
                  >
                    <FlexItem
                      element="div"
                      grow={0}
                      shrink={1}
                    >
                      <FlexItem
                        className="emotion-4"
                        element="div"
                        grow={0}
                        shrink={1}
                      >
                        <Styled(div)
                          className="emotion-4"
                          element="div"
                          grow={0}
                          shrink={1}
                        >
                          <div
                            className="emotion-9"
                          >
                            <Styled(Flex)
                              element="div"
                            >
                              <FlexItem
                                className="emotion-1"
                                element="div"
                              >
                                <Styled(div)
                                  className="emotion-1"
                                  element="div"
                                >
                                  <div
                                    className="emotion-0"
                                  >
                                    End
                                  </div>
                                </Styled(div)>
                              </FlexItem>
                            </Styled(Flex)>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </FlexItem>
                  </FlexItem>
                </div>
              </Styled(div)>
            </FlexItem>
          </Flex>
        </Component>
      </WithTheme(Component)>
    </Flex>
  </StartEnd>
</Styled(StartEnd)>
`;

exports[`StartEnd demo examples Snapshots: direction 1`] = `
.emotion-15 {
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-4 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-13 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

<Styled(StartEnd)
  direction="column"
>
  <StartEnd
    className="emotion-15"
    direction="column"
  >
    <Flex
      alignItems="stretch"
      className="emotion-15"
      direction="column"
      gutterWidth="md"
      justifyContent="between"
    >
      <WithTheme(Component)
        alignItems="stretch"
        className="emotion-15"
        direction="column"
        gutterWidth="md"
        justifyContent="between"
      >
        <Component
          alignItems="stretch"
          className="emotion-15"
          direction="column"
          gutterWidth="md"
          justifyContent="between"
        >
          <Flex
            alignItems="stretch"
            className="emotion-15"
            direction="column"
            element="div"
            gutterWidth="md"
            justifyContent="between"
          >
            <FlexItem
              alignItems="stretch"
              className="emotion-13"
              direction="column"
              element="div"
              gutterWidth="md"
              justifyContent="between"
            >
              <Styled(div)
                alignItems="stretch"
                className="emotion-13"
                direction="column"
                element="div"
                gutterWidth="md"
                justifyContent="between"
              >
                <div
                  className="emotion-12"
                >
                  <FlexItem
                    grow={0}
                    key=".$.0"
                    shrink={1}
                  >
                    <FlexItem
                      element="div"
                      grow={0}
                      shrink={1}
                    >
                      <FlexItem
                        className="emotion-4"
                        element="div"
                        grow={0}
                        shrink={1}
                      >
                        <Styled(div)
                          className="emotion-4"
                          element="div"
                          grow={0}
                          shrink={1}
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(Flex)
                              element="div"
                            >
                              <FlexItem
                                className="emotion-1"
                                element="div"
                              >
                                <Styled(div)
                                  className="emotion-1"
                                  element="div"
                                >
                                  <div
                                    className="emotion-0"
                                  >
                                    Start
                                  </div>
                                </Styled(div)>
                              </FlexItem>
                            </Styled(Flex)>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </FlexItem>
                  </FlexItem>
                  <FlexItem
                    grow={0}
                    key=".$.1"
                    shrink={1}
                  >
                    <FlexItem
                      element="div"
                      grow={0}
                      shrink={1}
                    >
                      <FlexItem
                        className="emotion-4"
                        element="div"
                        grow={0}
                        shrink={1}
                      >
                        <Styled(div)
                          className="emotion-4"
                          element="div"
                          grow={0}
                          shrink={1}
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(Flex)
                              element="div"
                            >
                              <FlexItem
                                className="emotion-1"
                                element="div"
                              >
                                <Styled(div)
                                  className="emotion-1"
                                  element="div"
                                >
                                  <div
                                    className="emotion-0"
                                  >
                                    End
                                  </div>
                                </Styled(div)>
                              </FlexItem>
                            </Styled(Flex)>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </FlexItem>
                  </FlexItem>
                </div>
              </Styled(div)>
            </FlexItem>
          </Flex>
        </Component>
      </WithTheme(Component)>
    </Flex>
  </StartEnd>
</Styled(StartEnd)>
`;

exports[`StartEnd demo examples Snapshots: priority 1`] = `
.emotion-15 {
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-13 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-10 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-23 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-right: 1rem;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-23 *,
.emotion-23 *::before,
.emotion-23 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-60::after {
  clear: both;
  content: "";
  display: table;
}

.emotion-60 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-right: 1rem;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-29 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

<Styled(div)>
  <div
    className="emotion-60"
  >
    <Styled(StartEnd)
      priority="start"
    >
      <StartEnd
        className="emotion-15"
        priority="start"
      >
        <Flex
          alignItems="stretch"
          className="emotion-15"
          direction="row"
          gutterWidth="md"
          justifyContent="between"
        >
          <WithTheme(Component)
            alignItems="stretch"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <Component
              alignItems="stretch"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Flex
                alignItems="stretch"
                className="emotion-15"
                direction="row"
                element="div"
                gutterWidth="md"
                justifyContent="between"
              >
                <FlexItem
                  alignItems="stretch"
                  className="emotion-13"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <Styled(div)
                    alignItems="stretch"
                    className="emotion-13"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <div
                      className="emotion-12"
                    >
                      <FlexItem
                        grow={1}
                        key=".$.0"
                        marginEnd="1rem"
                        shrink={1}
                      >
                        <FlexItem
                          element="div"
                          grow={1}
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            className="emotion-4"
                            element="div"
                            grow={1}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <Styled(div)
                              className="emotion-4"
                              element="div"
                              grow={1}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <div
                                className="emotion-3"
                              >
                                <Styled(Flex)
                                  element="div"
                                >
                                  <FlexItem
                                    className="emotion-1"
                                    element="div"
                                  >
                                    <Styled(div)
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <div
                                        className="emotion-0"
                                      >
                                        Start
                                      </div>
                                    </Styled(div)>
                                  </FlexItem>
                                </Styled(Flex)>
                              </div>
                            </Styled(div)>
                          </FlexItem>
                        </FlexItem>
                      </FlexItem>
                      <FlexItem
                        grow={0}
                        key=".$.1"
                        shrink={1}
                      >
                        <FlexItem
                          element="div"
                          grow={0}
                          shrink={1}
                        >
                          <FlexItem
                            className="emotion-10"
                            element="div"
                            grow={0}
                            shrink={1}
                          >
                            <Styled(div)
                              className="emotion-10"
                              element="div"
                              grow={0}
                              shrink={1}
                            >
                              <div
                                className="emotion-9"
                              >
                                <Styled(Flex)
                                  element="div"
                                >
                                  <FlexItem
                                    className="emotion-1"
                                    element="div"
                                  >
                                    <Styled(div)
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <div
                                        className="emotion-0"
                                      >
                                        End
                                      </div>
                                    </Styled(div)>
                                  </FlexItem>
                                </Styled(Flex)>
                              </div>
                            </Styled(div)>
                          </FlexItem>
                        </FlexItem>
                      </FlexItem>
                    </div>
                  </Styled(div)>
                </FlexItem>
              </Flex>
            </Component>
          </WithTheme(Component)>
        </Flex>
      </StartEnd>
    </Styled(StartEnd)>
    <Styled(StartEnd)
      priority="end"
    >
      <StartEnd
        className="emotion-15"
        priority="end"
      >
        <Flex
          alignItems="stretch"
          className="emotion-15"
          direction="row"
          gutterWidth="md"
          justifyContent="between"
        >
          <WithTheme(Component)
            alignItems="stretch"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <Component
              alignItems="stretch"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Flex
                alignItems="stretch"
                className="emotion-15"
                direction="row"
                element="div"
                gutterWidth="md"
                justifyContent="between"
              >
                <FlexItem
                  alignItems="stretch"
                  className="emotion-13"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <Styled(div)
                    alignItems="stretch"
                    className="emotion-13"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <div
                      className="emotion-12"
                    >
                      <FlexItem
                        grow={0}
                        key=".$.0"
                        marginEnd="1rem"
                        shrink={1}
                      >
                        <FlexItem
                          element="div"
                          grow={0}
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            className="emotion-10"
                            element="div"
                            grow={0}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <Styled(div)
                              className="emotion-10"
                              element="div"
                              grow={0}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <div
                                className="emotion-23"
                              >
                                <Styled(Flex)
                                  element="div"
                                >
                                  <FlexItem
                                    className="emotion-1"
                                    element="div"
                                  >
                                    <Styled(div)
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <div
                                        className="emotion-0"
                                      >
                                        Start
                                      </div>
                                    </Styled(div)>
                                  </FlexItem>
                                </Styled(Flex)>
                              </div>
                            </Styled(div)>
                          </FlexItem>
                        </FlexItem>
                      </FlexItem>
                      <FlexItem
                        grow={1}
                        key=".$.1"
                        shrink={1}
                      >
                        <FlexItem
                          element="div"
                          grow={1}
                          shrink={1}
                        >
                          <FlexItem
                            className="emotion-4"
                            element="div"
                            grow={1}
                            shrink={1}
                          >
                            <Styled(div)
                              className="emotion-4"
                              element="div"
                              grow={1}
                              shrink={1}
                            >
                              <div
                                className="emotion-29"
                              >
                                <Styled(Flex)
                                  element="div"
                                >
                                  <FlexItem
                                    className="emotion-1"
                                    element="div"
                                  >
                                    <Styled(div)
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <div
                                        className="emotion-0"
                                      >
                                        End
                                      </div>
                                    </Styled(div)>
                                  </FlexItem>
                                </Styled(Flex)>
                              </div>
                            </Styled(div)>
                          </FlexItem>
                        </FlexItem>
                      </FlexItem>
                    </div>
                  </Styled(div)>
                </FlexItem>
              </Flex>
            </Component>
          </WithTheme(Component)>
        </Flex>
      </StartEnd>
    </Styled(StartEnd)>
    <Styled(StartEnd)
      priority="both"
    >
      <StartEnd
        className="emotion-15"
        priority="both"
      >
        <Flex
          alignItems="stretch"
          className="emotion-15"
          direction="row"
          gutterWidth="md"
          justifyContent="between"
        >
          <WithTheme(Component)
            alignItems="stretch"
            className="emotion-15"
            direction="row"
            gutterWidth="md"
            justifyContent="between"
          >
            <Component
              alignItems="stretch"
              className="emotion-15"
              direction="row"
              gutterWidth="md"
              justifyContent="between"
            >
              <Flex
                alignItems="stretch"
                className="emotion-15"
                direction="row"
                element="div"
                gutterWidth="md"
                justifyContent="between"
              >
                <FlexItem
                  alignItems="stretch"
                  className="emotion-13"
                  direction="row"
                  element="div"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <Styled(div)
                    alignItems="stretch"
                    className="emotion-13"
                    direction="row"
                    element="div"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <div
                      className="emotion-12"
                    >
                      <FlexItem
                        grow={1}
                        key=".$.0"
                        marginEnd="1rem"
                        shrink={1}
                      >
                        <FlexItem
                          element="div"
                          grow={1}
                          marginEnd="1rem"
                          shrink={1}
                        >
                          <FlexItem
                            className="emotion-4"
                            element="div"
                            grow={1}
                            marginEnd="1rem"
                            shrink={1}
                          >
                            <Styled(div)
                              className="emotion-4"
                              element="div"
                              grow={1}
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <div
                                className="emotion-3"
                              >
                                <Styled(Flex)
                                  element="div"
                                >
                                  <FlexItem
                                    className="emotion-1"
                                    element="div"
                                  >
                                    <Styled(div)
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <div
                                        className="emotion-0"
                                      >
                                        Start
                                      </div>
                                    </Styled(div)>
                                  </FlexItem>
                                </Styled(Flex)>
                              </div>
                            </Styled(div)>
                          </FlexItem>
                        </FlexItem>
                      </FlexItem>
                      <FlexItem
                        grow={1}
                        key=".$.1"
                        shrink={1}
                      >
                        <FlexItem
                          element="div"
                          grow={1}
                          shrink={1}
                        >
                          <FlexItem
                            className="emotion-4"
                            element="div"
                            grow={1}
                            shrink={1}
                          >
                            <Styled(div)
                              className="emotion-4"
                              element="div"
                              grow={1}
                              shrink={1}
                            >
                              <div
                                className="emotion-29"
                              >
                                <Styled(Flex)
                                  element="div"
                                >
                                  <FlexItem
                                    className="emotion-1"
                                    element="div"
                                  >
                                    <Styled(div)
                                      className="emotion-1"
                                      element="div"
                                    >
                                      <div
                                        className="emotion-0"
                                      >
                                        End
                                      </div>
                                    </Styled(div)>
                                  </FlexItem>
                                </Styled(Flex)>
                              </div>
                            </Styled(div)>
                          </FlexItem>
                        </FlexItem>
                      </FlexItem>
                    </div>
                  </Styled(div)>
                </FlexItem>
              </Flex>
            </Component>
          </WithTheme(Component)>
        </Flex>
      </StartEnd>
    </Styled(StartEnd)>
  </div>
</Styled(div)>
`;

exports[`StartEnd demo examples Snapshots: responsive 1`] = `
.emotion-15 {
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-13 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

@media (min-width:800px) {
  .emotion-13 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

@media (min-width:800px) {

}

@media (min-width:800px) {
  .emotion-12 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.emotion-4 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

@media (min-width:800px) {

}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-left: 0;
  margin-right: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

@media (min-width:800px) {
  .emotion-3 {
    margin-left: 0;
    margin-right: 1rem;
  }
}

@media (min-width:800px) {

}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

@media (min-width:800px) {

}

@media (min-width:800px) {

}

<Styled(StartEnd)
  breakpoints={
    Array [
      800,
    ]
  }
  direction={
    Array [
      "column",
      "row",
    ]
  }
>
  <StartEnd
    breakpoints={
      Array [
        800,
      ]
    }
    className="emotion-15"
    direction={
      Array [
        "column",
        "row",
      ]
    }
  >
    <Flex
      alignItems="stretch"
      breakpoints={
        Array [
          800,
        ]
      }
      className="emotion-15"
      direction={
        Array [
          "column",
          "row",
        ]
      }
      gutterWidth="md"
      justifyContent="between"
    >
      <WithTheme(Component)
        alignItems="stretch"
        breakpoints={
          Array [
            800,
          ]
        }
        className="emotion-15"
        direction={
          Array [
            "column",
            "row",
          ]
        }
        gutterWidth="md"
        justifyContent="between"
      >
        <Component
          alignItems="stretch"
          breakpoints={
            Array [
              800,
            ]
          }
          className="emotion-15"
          direction={
            Array [
              "column",
              "row",
            ]
          }
          gutterWidth="md"
          justifyContent="between"
        >
          <Flex
            alignItems="stretch"
            breakpoints={
              Array [
                800,
              ]
            }
            className="emotion-15"
            direction={
              Array [
                "column",
                "row",
              ]
            }
            element="div"
            gutterWidth="md"
            justifyContent="between"
          >
            <FlexItem
              alignItems="stretch"
              breakpoints={
                Array [
                  800,
                ]
              }
              className="emotion-13"
              direction={
                Array [
                  "column",
                  "row",
                ]
              }
              element="div"
              gutterWidth="md"
              justifyContent="between"
            >
              <Styled(div)
                alignItems="stretch"
                breakpoints={
                  Array [
                    800,
                  ]
                }
                className="emotion-13"
                direction={
                  Array [
                    "column",
                    "row",
                  ]
                }
                element="div"
                gutterWidth="md"
                justifyContent="between"
              >
                <div
                  className="emotion-12"
                >
                  <FlexItem
                    breakpoints={
                      Array [
                        800,
                      ]
                    }
                    grow={0}
                    key=".$.0"
                    marginEnd={
                      Array [
                        0,
                        "1rem",
                      ]
                    }
                    marginStart={
                      Array [
                        0,
                        0,
                      ]
                    }
                    shrink={1}
                  >
                    <FlexItem
                      breakpoints={
                        Array [
                          800,
                        ]
                      }
                      element="div"
                      grow={0}
                      marginEnd={
                        Array [
                          0,
                          "1rem",
                        ]
                      }
                      marginStart={
                        Array [
                          0,
                          0,
                        ]
                      }
                      shrink={1}
                    >
                      <FlexItem
                        breakpoints={
                          Array [
                            800,
                          ]
                        }
                        className="emotion-4"
                        element="div"
                        grow={0}
                        marginEnd={
                          Array [
                            0,
                            "1rem",
                          ]
                        }
                        marginStart={
                          Array [
                            0,
                            0,
                          ]
                        }
                        shrink={1}
                      >
                        <Styled(div)
                          breakpoints={
                            Array [
                              800,
                            ]
                          }
                          className="emotion-4"
                          element="div"
                          grow={0}
                          marginEnd={
                            Array [
                              0,
                              "1rem",
                            ]
                          }
                          marginStart={
                            Array [
                              0,
                              0,
                            ]
                          }
                          shrink={1}
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(Flex)
                              element="div"
                            >
                              <FlexItem
                                className="emotion-1"
                                element="div"
                              >
                                <Styled(div)
                                  className="emotion-1"
                                  element="div"
                                >
                                  <div
                                    className="emotion-0"
                                  >
                                    Start
                                  </div>
                                </Styled(div)>
                              </FlexItem>
                            </Styled(Flex)>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </FlexItem>
                  </FlexItem>
                  <FlexItem
                    breakpoints={
                      Array [
                        800,
                      ]
                    }
                    grow={0}
                    key=".$.1"
                    shrink={1}
                  >
                    <FlexItem
                      breakpoints={
                        Array [
                          800,
                        ]
                      }
                      element="div"
                      grow={0}
                      shrink={1}
                    >
                      <FlexItem
                        breakpoints={
                          Array [
                            800,
                          ]
                        }
                        className="emotion-4"
                        element="div"
                        grow={0}
                        shrink={1}
                      >
                        <Styled(div)
                          breakpoints={
                            Array [
                              800,
                            ]
                          }
                          className="emotion-4"
                          element="div"
                          grow={0}
                          shrink={1}
                        >
                          <div
                            className="emotion-9"
                          >
                            <Styled(Flex)
                              element="div"
                            >
                              <FlexItem
                                className="emotion-1"
                                element="div"
                              >
                                <Styled(div)
                                  className="emotion-1"
                                  element="div"
                                >
                                  <div
                                    className="emotion-0"
                                  >
                                    End
                                  </div>
                                </Styled(div)>
                              </FlexItem>
                            </Styled(Flex)>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </FlexItem>
                  </FlexItem>
                </div>
              </Styled(div)>
            </FlexItem>
          </Flex>
        </Component>
      </WithTheme(Component)>
    </Flex>
  </StartEnd>
</Styled(StartEnd)>
`;

exports[`StartEnd demo examples Snapshots: rtl 1`] = `
.emotion-15 {
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-13 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  outline: 1px dotted #accbfc;
  outline-offset: 4px;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-4 {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f0f5fc;
  color: #1d5bbf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: 1px solid #cfe0fc;
  padding: 0.5rem;
}

.emotion-0 *,
.emotion-0 *::before,
.emotion-0 *::after {
  box-sizing: inherit;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  display: block;
  margin-left: 1rem;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <Fragment>
      <DocumentFontSizeProvider>
        <ThemeProvider>
          <Styled(StartEnd)>
            <StartEnd
              className="emotion-15"
            >
              <Flex
                alignItems="stretch"
                className="emotion-15"
                direction="row"
                gutterWidth="md"
                justifyContent="between"
              >
                <WithTheme(Component)
                  alignItems="stretch"
                  className="emotion-15"
                  direction="row"
                  gutterWidth="md"
                  justifyContent="between"
                >
                  <Component
                    alignItems="stretch"
                    className="emotion-15"
                    direction="row"
                    gutterWidth="md"
                    justifyContent="between"
                  >
                    <Flex
                      alignItems="stretch"
                      className="emotion-15"
                      direction="row"
                      element="div"
                      gutterWidth="md"
                      justifyContent="between"
                    >
                      <FlexItem
                        alignItems="stretch"
                        className="emotion-13"
                        direction="row"
                        element="div"
                        gutterWidth="md"
                        justifyContent="between"
                      >
                        <Styled(div)
                          alignItems="stretch"
                          className="emotion-13"
                          direction="row"
                          element="div"
                          gutterWidth="md"
                          justifyContent="between"
                        >
                          <div
                            className="emotion-12"
                          >
                            <FlexItem
                              grow={0}
                              key=".$.0"
                              marginEnd="1rem"
                              shrink={1}
                            >
                              <FlexItem
                                element="div"
                                grow={0}
                                marginEnd="1rem"
                                shrink={1}
                              >
                                <FlexItem
                                  className="emotion-4"
                                  element="div"
                                  grow={0}
                                  marginEnd="1rem"
                                  shrink={1}
                                >
                                  <Styled(div)
                                    className="emotion-4"
                                    element="div"
                                    grow={0}
                                    marginEnd="1rem"
                                    shrink={1}
                                  >
                                    <div
                                      className="emotion-3"
                                    >
                                      <Styled(Flex)
                                        element="div"
                                      >
                                        <FlexItem
                                          className="emotion-1"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-1"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-0"
                                            >
                                              بداية
                                            </div>
                                          </Styled(div)>
                                        </FlexItem>
                                      </Styled(Flex)>
                                    </div>
                                  </Styled(div)>
                                </FlexItem>
                              </FlexItem>
                            </FlexItem>
                            <FlexItem
                              grow={0}
                              key=".$.1"
                              shrink={1}
                            >
                              <FlexItem
                                element="div"
                                grow={0}
                                shrink={1}
                              >
                                <FlexItem
                                  className="emotion-4"
                                  element="div"
                                  grow={0}
                                  shrink={1}
                                >
                                  <Styled(div)
                                    className="emotion-4"
                                    element="div"
                                    grow={0}
                                    shrink={1}
                                  >
                                    <div
                                      className="emotion-9"
                                    >
                                      <Styled(Flex)
                                        element="div"
                                      >
                                        <FlexItem
                                          className="emotion-1"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-1"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-0"
                                            >
                                              النهاية
                                            </div>
                                          </Styled(div)>
                                        </FlexItem>
                                      </Styled(Flex)>
                                    </div>
                                  </Styled(div)>
                                </FlexItem>
                              </FlexItem>
                            </FlexItem>
                          </div>
                        </Styled(div)>
                      </FlexItem>
                    </Flex>
                  </Component>
                </WithTheme(Component)>
              </Flex>
            </StartEnd>
          </Styled(StartEnd)>
        </ThemeProvider>
      </DocumentFontSizeProvider>
      <EventListener
        listeners={
          Array [
            Object {
              "event": "DOMContentLoaded",
              "handler": [Function],
              "target": "document",
            },
          ]
        }
      />
    </Fragment>
  </ThemeProvider>
</div>
`;
