// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea demo examples Snapshots: autosize 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-15[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-10 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-15"
    >
      <TextArea
        autoSize={true}
        defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
        spellCheck={false}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 8,
              "size": "large",
              "spellCheck": false,
            }
          }
          iconEnd={null}
          size="large"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 8,
                "size": "large",
                "spellCheck": false,
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 8,
                      "size": "large",
                      "spellCheck": false,
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={8}
                  size="large"
                  spellCheck={false}
                >
                  <textarea
                    className="emotion-0"
                    defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                    onInput={[Function]}
                    rows={8}
                    spellCheck={false}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Hello World"
        rows={1}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Hello World",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Hello World"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="large"
                >
                  <textarea
                    className="emotion-0"
                    defaultValue="Hello World"
                    onInput={[Function]}
                    rows={1}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Hello World"
        rows={1}
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Hello World",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Hello World"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="small"
                >
                  <textarea
                    className="emotion-10"
                    defaultValue="Hello World"
                    onInput={[Function]}
                    rows={1}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: controlled 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <MyForm>
    <TextArea
      onChange={[Function]}
      value="Hello World"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onChange": [Function],
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
            "value": "Hello World",
          }
        }
        iconEnd={null}
        size="large"
      >
        <TextInput
          className="emotion-3"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "disabled": undefined,
              "onChange": [Function],
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
              "value": "Hello World",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="emotion-3"
            control={[Function]}
          >
            <div
              className="emotion-2"
            >
              <Control
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onChange": [Function],
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                    "value": "Hello World",
                  }
                }
                controlRef={[Function]}
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onChange={[Function]}
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
                value="Hello World"
              >
                <textarea
                  className="emotion-0"
                  onChange={[Function]}
                  onInput={[Function]}
                  rows={8}
                  value="Hello World"
                />
              </Control>
              <Underlay>
                <div
                  className="emotion-1"
                />
              </Underlay>
            </div>
          </FauxControl>
        </TextInput>
      </TextArea>
    </TextArea>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples Snapshots: disabled 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
  disabled={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": true,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    disabled={true}
    iconEnd={null}
    size="large"
  >
    <TextInput
      className="emotion-3"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": true,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      disabled={true}
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="emotion-3"
        control={[Function]}
        disabled={true}
      >
        <div
          className="emotion-2"
        >
          <Control
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": true,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            disabled={true}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="emotion-0"
              defaultValue="Hello World"
              disabled={true}
              onInput={[Function]}
              rows={8}
            />
          </Control>
          <Underlay
            disabled={true}
          >
            <div
              className="emotion-1"
            />
          </Underlay>
        </div>
      </FauxControl>
    </TextInput>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: form-field 1`] = `
.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-9[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-2 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-0 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-7 {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-9"
    >
      <FormField
        autoSize={true}
        caption="Please keep comments brief and descriptive"
        input={[Function]}
        label="Comments"
        required={true}
        requiredText="Required"
        rows={2}
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-1-textWrapper"
              >
                <div
                  className="emotion-1"
                >
                  <span
                    id="formField-1-labelText"
                  >
                    Comments
                  </span>
                  <Styled(span)>
                    <span
                      className="emotion-0"
                    >
                      Required
                    </span>
                  </Styled(span)>
                </div>
              </Styled(div)>
              <TextArea
                aria-describedby="formField-1-caption"
                autoSize={true}
                key="formField-1-control"
                required={true}
                rows={2}
              >
                <TextArea
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-1-caption",
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "autoSize": true,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": true,
                      "resizeable": false,
                      "rows": 2,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <TextInput
                    className="emotion-5"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": "formField-1-caption",
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "autoSize": true,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": true,
                        "resizeable": false,
                        "rows": 2,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <FauxControl
                      className="emotion-5"
                      control={[Function]}
                    >
                      <div
                        className="emotion-4"
                      >
                        <Control
                          aria-describedby="formField-1-caption"
                          aria-required={true}
                          autoSize={true}
                          controlPropsIn={
                            Object {
                              "aria-describedby": "formField-1-caption",
                              "aria-invalid": undefined,
                              "aria-required": true,
                              "autoSize": true,
                              "controlRef": [Function],
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": true,
                              "resizeable": false,
                              "rows": 2,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          iconEnd={null}
                          innerRef={[Function]}
                          key="control"
                          onInput={[Function]}
                          required={true}
                          resizeable={false}
                          rows={2}
                          size="large"
                        >
                          <textarea
                            aria-describedby="formField-1-caption"
                            aria-required={true}
                            className="emotion-2"
                            onInput={[Function]}
                            required={true}
                            rows={2}
                          />
                        </Control>
                        <Underlay>
                          <div
                            className="emotion-3"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </TextInput>
                </TextArea>
              </TextArea>
            </label>
            <Styled(div)
              caption="Please keep comments brief and descriptive"
              id="formField-1-caption"
            >
              <div
                className="emotion-7"
                id="formField-1-caption"
              >
                Please keep comments brief and descriptive
              </div>
            </Styled(div)>
          </div>
        </FormField>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: input-ref 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-8[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-7 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-7::-moz-focus-inner {
  border: 0;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-7 [role="img"]:only-child {
  margin: 0;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-5 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-5:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-5:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-8"
        >
          <TextArea
            inputRef={[Function]}
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        className="emotion-0"
                        onInput={[Function]}
                        rows={8}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <Button
            element="button"
            onClick={[Function]}
            size="large"
            type="button"
            variant="regular"
          >
            <Button
              element="button"
              onClick={[Function]}
              size="large"
              text="Focus the input"
              type="button"
              variant="regular"
            >
              <button
                className="emotion-7"
                onClick={[Function]}
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-6"
                  >
                    <Styled(span)
                      size="large"
                    >
                      <span
                        className="emotion-5"
                      >
                        Focus the input
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
      </Styled(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples Snapshots: invalid 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  invalid={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": true,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <TextInput
      className="emotion-3"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": true,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="emotion-3"
        control={[Function]}
      >
        <div
          className="emotion-2"
        >
          <Control
            aria-invalid={true}
            controlPropsIn={
              Object {
                "aria-invalid": true,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              aria-invalid={true}
              className="emotion-0"
              onInput={[Function]}
              rows={8}
            />
          </Control>
          <Underlay>
            <div
              className="emotion-1"
            />
          </Underlay>
        </div>
      </FauxControl>
    </TextInput>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: next-to-other-inputs 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-36 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-36::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-36::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-36:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-36::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-36::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-36:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-36::-ms-clear {
  display: none;
}

.emotion-36:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-18 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-18::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-clear {
  display: none;
}

.emotion-18:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-54 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-54::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::-ms-clear {
  display: none;
}

.emotion-54:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-41 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-41::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-41::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-41:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-41::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-41::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-41:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-41::-ms-clear {
  display: none;
}

.emotion-41:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-53 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-53 *,
.emotion-53 *::before,
.emotion-53 *::after {
  box-sizing: inherit;
}

.emotion-53:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-53:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-53:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-53::-moz-focus-inner {
  border: 0;
}

.emotion-53 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-53 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-53 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-53 [role="img"]:only-child {
  margin: 0;
}

.emotion-16 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  width: 100%;
}

.emotion-51 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-51:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-51:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-73 > * {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-73 > * > div {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-72[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-72 > * {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-72 > * > div {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-13 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-13 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-12:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-12:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-12:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-12 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-12 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-10 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-10[type="search"] {
  -webkit-appearance: none;
}

.emotion-10[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-17 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-17 *,
.emotion-17 *::before,
.emotion-17 *::after {
  box-sizing: inherit;
}

.emotion-17:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-17:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-17:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-17::-moz-focus-inner {
  border: 0;
}

.emotion-17 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-17 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-17 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-17 [role="img"]:only-child {
  margin: 0;
}

.emotion-15 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.emotion-23 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-23::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-ms-clear {
  display: none;
}

.emotion-23:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-28 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-28[type="search"] {
  -webkit-appearance: none;
}

.emotion-28[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-28::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-ms-clear {
  display: none;
}

.emotion-28:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-35 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-35 *,
.emotion-35 *::before,
.emotion-35 *::after {
  box-sizing: inherit;
}

.emotion-35:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-35:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-35:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-35::-moz-focus-inner {
  border: 0;
}

.emotion-35 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-35 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-35 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-35 [role="img"]:only-child {
  margin: 0;
}

.emotion-33 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-46 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-46[type="search"] {
  -webkit-appearance: none;
}

.emotion-46[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-46::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-46::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-46:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-46::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-46::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-46:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-46::-ms-clear {
  display: none;
}

.emotion-46:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-59 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-59::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-59::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-59:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-59::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-59::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-59:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-59::-ms-clear {
  display: none;
}

.emotion-59:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-64 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-64[type="search"] {
  -webkit-appearance: none;
}

.emotion-64[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-64::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-64::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-64:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-64::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-64::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-64:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-64::-ms-clear {
  display: none;
}

.emotion-64:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-71 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  min-width: 3.25em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-71 *,
.emotion-71 *::before,
.emotion-71 *::after {
  box-sizing: inherit;
}

.emotion-71:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-71:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-71:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-71::-moz-focus-inner {
  border: 0;
}

.emotion-71 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-71 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-71 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-71 [role="img"]:only-child {
  margin: 0;
}

.emotion-69 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.emotion-69:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-69:last-child {
  padding-right: 0.5714285714285714em;
}

<Styled(DemoLayout)>
  <DemoLayout
    className="emotion-73"
  >
    <Styled(div)
      className="emotion-73"
      marginBottom="1rem"
    >
      <div
        className="emotion-72"
      >
        <div>
          <TextArea
            defaultValue="Small"
            rows={1}
            size="small"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "small",
                  }
                }
                iconEnd={null}
                size="small"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "small",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Small"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="small"
                    >
                      <textarea
                        className="emotion-0"
                        defaultValue="Small"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Small"
            rows={1}
            size="small"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "small",
                  }
                }
                iconEnd={null}
                size="small"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "small",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Small"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="small"
                    >
                      <textarea
                        className="emotion-5"
                        defaultValue="Small"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Small"
            size="small"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <TextInput
                className="emotion-13"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <FauxControl
                  className="emotion-13"
                  control={[Function]}
                >
                  <div
                    className="emotion-12"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Small",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Small"
                      key="control"
                      size="small"
                      type="text"
                    >
                      <input
                        className="emotion-10"
                        defaultValue="Small"
                        size="small"
                        type="text"
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="small"
            type="button"
            variant="regular"
          >
            <Button
              element="button"
              size="small"
              text="Small"
              type="button"
              variant="regular"
            >
              <button
                className="emotion-17"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-16"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-15"
                      >
                        Small
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
        <div>
          <TextArea
            defaultValue="Medium"
            rows={1}
            size="medium"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                iconEnd={null}
                size="medium"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "medium",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Medium"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="medium"
                    >
                      <textarea
                        className="emotion-18"
                        defaultValue="Medium"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Medium"
            rows={1}
            size="medium"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                iconEnd={null}
                size="medium"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "medium",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Medium"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="medium"
                    >
                      <textarea
                        className="emotion-23"
                        defaultValue="Medium"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Medium"
            size="medium"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <TextInput
                className="emotion-13"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <FauxControl
                  className="emotion-13"
                  control={[Function]}
                >
                  <div
                    className="emotion-12"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Medium",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Medium"
                      key="control"
                      size="medium"
                      type="text"
                    >
                      <input
                        className="emotion-28"
                        defaultValue="Medium"
                        size="medium"
                        type="text"
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="medium"
            type="button"
            variant="regular"
          >
            <Button
              element="button"
              size="medium"
              text="Medium"
              type="button"
              variant="regular"
            >
              <button
                className="emotion-35"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-16"
                  >
                    <Styled(span)
                      size="medium"
                    >
                      <span
                        className="emotion-33"
                      >
                        Medium
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
        <div>
          <TextArea
            defaultValue="Large"
            rows={1}
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Large"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="large"
                    >
                      <textarea
                        className="emotion-36"
                        defaultValue="Large"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Large"
            rows={1}
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Large"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="large"
                    >
                      <textarea
                        className="emotion-41"
                        defaultValue="Large"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Large"
            size="large"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <TextInput
                className="emotion-13"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="emotion-13"
                  control={[Function]}
                >
                  <div
                    className="emotion-12"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Large",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Large"
                      key="control"
                      size="large"
                      type="text"
                    >
                      <input
                        className="emotion-46"
                        defaultValue="Large"
                        size="large"
                        type="text"
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="large"
            type="button"
            variant="regular"
          >
            <Button
              element="button"
              size="large"
              text="Large"
              type="button"
              variant="regular"
            >
              <button
                className="emotion-53"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-16"
                  >
                    <Styled(span)
                      size="large"
                    >
                      <span
                        className="emotion-51"
                      >
                        Large
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
        <div>
          <TextArea
            defaultValue="Jumbo"
            rows={1}
            size="jumbo"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                iconEnd={null}
                size="jumbo"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 1,
                          "size": "jumbo",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Jumbo"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={true}
                      rows={1}
                      size="jumbo"
                    >
                      <textarea
                        className="emotion-54"
                        defaultValue="Jumbo"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Jumbo"
            rows={1}
            size="jumbo"
          >
            <TextArea
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <TextInput
                className="emotion-3"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                iconEnd={null}
                size="jumbo"
              >
                <FauxControl
                  className="emotion-3"
                  control={[Function]}
                >
                  <div
                    className="emotion-2"
                  >
                    <Control
                      autoSize={true}
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": true,
                          "controlRef": [Function],
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": false,
                          "rows": 1,
                          "size": "jumbo",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Jumbo"
                      iconEnd={null}
                      innerRef={[Function]}
                      key="control"
                      onInput={[Function]}
                      resizeable={false}
                      rows={1}
                      size="jumbo"
                    >
                      <textarea
                        className="emotion-59"
                        defaultValue="Jumbo"
                        onInput={[Function]}
                        rows={1}
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextArea>
          </TextArea>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
            type="text"
          >
            <TextInput
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <TextInput
                className="emotion-13"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <FauxControl
                  className="emotion-13"
                  control={[Function]}
                >
                  <div
                    className="emotion-12"
                  >
                    <Control
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Jumbo",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Jumbo"
                      key="control"
                      size="jumbo"
                      type="text"
                    >
                      <input
                        className="emotion-64"
                        defaultValue="Jumbo"
                        size="jumbo"
                        type="text"
                      />
                    </Control>
                    <Underlay>
                      <div
                        className="emotion-1"
                      />
                    </Underlay>
                  </div>
                </FauxControl>
              </TextInput>
            </TextInput>
          </TextInput>
          <Button
            element="button"
            size="jumbo"
            type="button"
            variant="regular"
          >
            <Button
              element="button"
              size="jumbo"
              text="Jumbo"
              type="button"
              variant="regular"
            >
              <button
                className="emotion-71"
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-16"
                  >
                    <Styled(span)
                      size="jumbo"
                    >
                      <span
                        className="emotion-69"
                      >
                        Jumbo
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
      </div>
    </Styled(div)>
  </DemoLayout>
</Styled(DemoLayout)>
`;

exports[`TextArea demo examples Snapshots: placeholder 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  placeholder="Leave a comment"
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "placeholder": "Leave a comment",
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <TextInput
      className="emotion-3"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "placeholder": "Leave a comment",
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="emotion-3"
        control={[Function]}
      >
        <div
          className="emotion-2"
        >
          <Control
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "placeholder": "Leave a comment",
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            placeholder="Leave a comment"
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="emotion-0"
              onInput={[Function]}
              placeholder="Leave a comment"
              rows={8}
            />
          </Control>
          <Underlay>
            <div
              className="emotion-1"
            />
          </Underlay>
        </div>
      </FauxControl>
    </TextInput>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: read-only 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<TextArea
  defaultValue="Hello World"
  readOnly={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": true,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    readOnly={true}
    size="large"
  >
    <TextInput
      className="emotion-3"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": true,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      readOnly={true}
      size="large"
    >
      <FauxControl
        className="emotion-3"
        control={[Function]}
      >
        <div
          className="emotion-2"
        >
          <Control
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": true,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            readOnly={true}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="emotion-0"
              defaultValue="Hello World"
              onInput={[Function]}
              readOnly={true}
              rows={8}
            />
          </Control>
          <Underlay
            readOnly={true}
          >
            <div
              className="emotion-1"
              readOnly={true}
            />
          </Underlay>
        </div>
      </FauxControl>
    </TextInput>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: required 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  required={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": true,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": true,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <TextInput
      className="emotion-3"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": true,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": true,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="emotion-3"
        control={[Function]}
      >
        <div
          className="emotion-2"
        >
          <Control
            aria-required={true}
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": true,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": true,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            required={true}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              aria-required={true}
              className="emotion-0"
              onInput={[Function]}
              required={true}
              rows={8}
            />
          </Control>
          <Underlay>
            <div
              className="emotion-1"
            />
          </Underlay>
        </div>
      </FauxControl>
    </TextInput>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: rows 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-10 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-20[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-15 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-15::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::-ms-clear {
  display: none;
}

.emotion-15:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-20"
    >
      <TextArea
        defaultValue="Small"
        rows={1}
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Small"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="small"
                >
                  <textarea
                    className="emotion-0"
                    defaultValue="Small"
                    onInput={[Function]}
                    rows={1}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Medium"
        rows={1}
        size="medium"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "medium",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Medium"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="medium"
                >
                  <textarea
                    className="emotion-5"
                    defaultValue="Medium"
                    onInput={[Function]}
                    rows={1}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Large"
        rows={1}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Large"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="large"
                >
                  <textarea
                    className="emotion-10"
                    defaultValue="Large"
                    onInput={[Function]}
                    rows={1}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Jumbo"
        rows={1}
        size="jumbo"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "jumbo",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Jumbo"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="jumbo"
                >
                  <textarea
                    className="emotion-15"
                    defaultValue="Jumbo"
                    onInput={[Function]}
                    rows={1}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: rtl 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <TextArea
        defaultValue="مرحبا بالعالم"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "مرحبا بالعالم",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "مرحبا بالعالم",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="مرحبا بالعالم"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                >
                  <textarea
                    className="emotion-0"
                    defaultValue="مرحبا بالعالم"
                    onInput={[Function]}
                    rows={8}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`TextArea demo examples Snapshots: size 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-10 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-20[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-15 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-15::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-15::-ms-clear {
  display: none;
}

.emotion-15:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-20"
    >
      <TextArea
        defaultValue="Small"
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 2,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 2,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 2,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Small"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={2}
                  size="small"
                >
                  <textarea
                    className="emotion-0"
                    defaultValue="Small"
                    onInput={[Function]}
                    rows={2}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Medium"
        size="medium"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 6,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 6,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 6,
                      "size": "medium",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Medium"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={6}
                  size="medium"
                >
                  <textarea
                    className="emotion-5"
                    defaultValue="Medium"
                    onInput={[Function]}
                    rows={6}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Large"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Large"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                >
                  <textarea
                    className="emotion-10"
                    defaultValue="Large"
                    onInput={[Function]}
                    rows={8}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Jumbo"
        size="jumbo"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 12,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 12,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 12,
                      "size": "jumbo",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Jumbo"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={12}
                  size="jumbo"
                >
                  <textarea
                    className="emotion-15"
                    defaultValue="Jumbo"
                    onInput={[Function]}
                    rows={12}
                  />
                </Control>
                <Underlay>
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: uncontrolled 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <TextInput
      className="emotion-3"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="emotion-3"
        control={[Function]}
      >
        <div
          className="emotion-2"
        >
          <Control
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="emotion-0"
              defaultValue="Hello World"
              onInput={[Function]}
              rows={8}
            />
          </Control>
          <Underlay>
            <div
              className="emotion-1"
            />
          </Underlay>
        </div>
      </FauxControl>
    </TextInput>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: variants 1`] = `
.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-15[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-2 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover > div:last-child {
  border-color: #3ba164;
}

.emotion-2:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-2:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-1 {
  background-color: #ffffff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-7 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7:hover > div:last-child {
  border-color: #cf7911;
}

.emotion-7:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-7:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-6 {
  background-color: #ffffff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-12:hover > div:last-child {
  border-color: #f55353;
}

.emotion-12:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-12:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-10 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-11 {
  background-color: #ffffff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-15"
    >
      <TextArea
        defaultValue="Success"
        variant="success"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Success",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="success"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Success",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="success"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
              variant="success"
            >
              <div
                className="emotion-2"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Success",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Success"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                  variant="success"
                >
                  <textarea
                    className="emotion-0"
                    defaultValue="Success"
                    onInput={[Function]}
                    rows={8}
                  />
                </Control>
                <Underlay
                  variant="success"
                >
                  <div
                    className="emotion-1"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Warning"
        variant="warning"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Warning",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="warning"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Warning",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="warning"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
              variant="warning"
            >
              <div
                className="emotion-7"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Warning",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Warning"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                  variant="warning"
                >
                  <textarea
                    className="emotion-5"
                    defaultValue="Warning"
                    onInput={[Function]}
                    rows={8}
                  />
                </Control>
                <Underlay
                  variant="warning"
                >
                  <div
                    className="emotion-6"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
      <TextArea
        defaultValue="Danger"
        variant="danger"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Danger",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="danger"
        >
          <TextInput
            className="emotion-3"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Danger",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="danger"
          >
            <FauxControl
              className="emotion-3"
              control={[Function]}
              variant="danger"
            >
              <div
                className="emotion-12"
              >
                <Control
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Danger",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Danger"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                  variant="danger"
                >
                  <textarea
                    className="emotion-10"
                    defaultValue="Danger"
                    onInput={[Function]}
                    rows={8}
                  />
                </Control>
                <Underlay
                  variant="danger"
                >
                  <div
                    className="emotion-11"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </TextInput>
        </TextArea>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;
