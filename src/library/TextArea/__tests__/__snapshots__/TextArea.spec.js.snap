// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea demo examples autosize 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-12 > *:not(:last-child),
[data-css-12] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-27::placeholder,
[data-css-27]::placeholder,
.css-27[data-simulate-placeholder],
[data-css-27][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27::-ms-input-placeholder,
[data-css-27]::-ms-input-placeholder,
.css-27[data-simulate-msinputplaceholder],
[data-css-27][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27:-ms-input-placeholder,
[data-css-27]:-ms-input-placeholder,
.css-27[data-simulate-msinputplaceholder],
[data-css-27][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27::-ms-clear,
[data-css-27]::-ms-clear,
.css-27[data-simulate-msclear],
[data-css-27][data-simulate-msclear] {
  display: none;
}

.css-27:focus ~ div:last-child,
[data-css-27]:focus ~ div:last-child,
.css-27[data-simulate-focus] ~ div:last-child,
[data-css-27][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<glamorous(div)>
  <div
    className="css-12"
  >
    <TextArea
      autoSize={true}
      defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
      spellCheck={false}
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": true,
            "controlRef": [Function],
            "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": false,
            "rows": 8,
            "size": "large",
            "spellCheck": false,
          }
        }
        iconEnd={null}
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 8,
              "size": "large",
              "spellCheck": false,
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                autoSize={true}
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 8,
                    "size": "large",
                    "spellCheck": false,
                  }
                }
                controlRef={[Function]}
                defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={false}
                rows={8}
                size="large"
                spellCheck={false}
              >
                <textarea
                  className="css-13"
                  defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                  onInput={[Function]}
                  rows={8}
                  spellCheck={false}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-11"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      autoSize={true}
      defaultValue="Hello World"
      rows={1}
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": true,
            "controlRef": [Function],
            "defaultValue": "Hello World",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": false,
            "rows": 1,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                autoSize={true}
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Hello World",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "large",
                  }
                }
                controlRef={[Function]}
                defaultValue="Hello World"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={false}
                rows={1}
                size="large"
              >
                <textarea
                  className="css-13"
                  defaultValue="Hello World"
                  onInput={[Function]}
                  rows={1}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-11"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      autoSize={true}
      defaultValue="Hello World"
      rows={1}
      size="small"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": true,
            "controlRef": [Function],
            "defaultValue": "Hello World",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": false,
            "rows": 1,
            "size": "small",
          }
        }
        iconEnd={null}
        size="small"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                autoSize={true}
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Hello World",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "small",
                  }
                }
                controlRef={[Function]}
                defaultValue="Hello World"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={false}
                rows={1}
                size="small"
              >
                <textarea
                  className="css-27"
                  defaultValue="Hello World"
                  onInput={[Function]}
                  rows={1}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-11"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
  </div>
</glamorous(div)>
`;

exports[`TextArea demo examples controlled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <MyForm>
    <TextArea
      onChange={[Function]}
      value="Hello World"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onChange": [Function],
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
            "value": "Hello World",
          }
        }
        iconEnd={null}
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "disabled": undefined,
              "onChange": [Function],
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
              "value": "Hello World",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onChange": [Function],
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                    "value": "Hello World",
                  }
                }
                controlRef={[Function]}
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onChange={[Function]}
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
                value="Hello World"
              >
                <textarea
                  className="css-11"
                  onChange={[Function]}
                  onInput={[Function]}
                  rows={8}
                  value="Hello World"
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples disabled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.css-5,
[data-css-5] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-5::placeholder,
[data-css-5]::placeholder,
.css-5[data-simulate-placeholder],
[data-css-5][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-5::-ms-input-placeholder,
[data-css-5]::-ms-input-placeholder,
.css-5[data-simulate-msinputplaceholder],
[data-css-5][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-5:-ms-input-placeholder,
[data-css-5]:-ms-input-placeholder,
.css-5[data-simulate-msinputplaceholder],
[data-css-5][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-5::-ms-clear,
[data-css-5]::-ms-clear,
.css-5[data-simulate-msclear],
[data-css-5][data-simulate-msclear] {
  display: none;
}

.css-5:focus ~ div:last-child,
[data-css-5]:focus ~ div:last-child,
.css-5[data-simulate-focus] ~ div:last-child,
[data-css-5][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-19,
[data-css-19] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
  disabled={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": true,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    disabled={true}
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": true,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      disabled={true}
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
        disabled={true}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": true,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            disabled={true}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-5"
              defaultValue="Hello World"
              disabled={true}
              onInput={[Function]}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay
            disabled={true}
          >
            <div
              className="css-19"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples form-field 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-12 > *:not(:last-child),
[data-css-12] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-13,
[data-css-13] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-13::placeholder,
[data-css-13]::placeholder,
.css-13[data-simulate-placeholder],
[data-css-13][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-input-placeholder,
[data-css-13]::-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13:-ms-input-placeholder,
[data-css-13]:-ms-input-placeholder,
.css-13[data-simulate-msinputplaceholder],
[data-css-13][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-13::-ms-clear,
[data-css-13]::-ms-clear,
.css-13[data-simulate-msclear],
[data-css-13][data-simulate-msclear] {
  display: none;
}

.css-13:focus ~ div:last-child,
[data-css-13]:focus ~ div:last-child,
.css-13[data-simulate-focus] ~ div:last-child,
[data-css-13][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-27,
[data-css-27] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-27 *,
[data-css-27] *,
.css-27 *::before,
[data-css-27] *::before,
.css-27 *::after,
[data-css-27] *::after {
  box-sizing: inherit;
}

.css-28,
[data-css-28] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-28 > *,
[data-css-28] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-29,
[data-css-29] {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.css-30,
[data-css-30] {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<glamorous(div)>
  <div
    className="css-12"
  >
    <FormField
      autoSize={true}
      caption="Please keep comments brief and descriptive"
      input={[Function]}
      label="Comments"
      required={true}
      requiredText="Required"
      rows={2}
    >
      <FormField>
        <div
          className="css-27"
        >
          <label>
            <glamorous(div)
              key="formField-1-textWrapper"
            >
              <div
                className="css-28"
              >
                <span
                  id="formField-1-labelText"
                >
                  Comments
                </span>
                <glamorous(span)>
                  <span
                    className="css-29"
                  >
                    Required
                  </span>
                </glamorous(span)>
              </div>
            </glamorous(div)>
            <TextArea
              aria-describedby="formField-1-caption"
              autoSize={true}
              key="formField-1-control"
              required={true}
              rows={2}
            >
              <TextArea
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": "formField-1-caption",
                    "aria-invalid": undefined,
                    "aria-required": true,
                    "autoSize": true,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": true,
                    "resizeable": false,
                    "rows": 2,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="css-0"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-1-caption",
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "autoSize": true,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": true,
                      "resizeable": false,
                      "rows": 2,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <FauxControl
                    className="css-0"
                    control={[Function]}
                  >
                    <div
                      className="css-1"
                    >
                      <glamorous(glamorous(textarea))
                        aria-describedby="formField-1-caption"
                        aria-required={true}
                        autoSize={true}
                        controlPropsIn={
                          Object {
                            "aria-describedby": "formField-1-caption",
                            "aria-invalid": undefined,
                            "aria-required": true,
                            "autoSize": true,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": true,
                            "resizeable": false,
                            "rows": 2,
                            "size": "large",
                          }
                        }
                        controlRef={[Function]}
                        iconEnd={null}
                        innerRef={[Function]}
                        key="control"
                        onInput={[Function]}
                        required={true}
                        resizeable={false}
                        rows={2}
                        size="large"
                      >
                        <textarea
                          aria-describedby="formField-1-caption"
                          aria-required={true}
                          className="css-13"
                          onInput={[Function]}
                          required={true}
                          rows={2}
                        />
                      </glamorous(glamorous(textarea))>
                      <Underlay>
                        <div
                          className="css-11"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextArea>
            </TextArea>
          </label>
          <glamorous(div)
            caption="Please keep comments brief and descriptive"
            id="formField-1-caption"
          >
            <div
              className="css-30"
              id="formField-1-caption"
            >
              Please keep comments brief and descriptive
            </div>
          </glamorous(div)>
        </div>
      </FormField>
    </FormField>
  </div>
</glamorous(div)>
`;

exports[`TextArea demo examples input-ref 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26 > *:not(:last-child),
[data-css-26] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-27,
[data-css-27] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-27 *,
[data-css-27] *,
.css-27 *::before,
[data-css-27] *::before,
.css-27 *::after,
[data-css-27] *::after {
  box-sizing: inherit;
}

.css-27:focus,
[data-css-27]:focus,
.css-27[data-simulate-focus],
[data-css-27][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-27:hover,
[data-css-27]:hover,
.css-27[data-simulate-hover],
[data-css-27][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-27:active,
[data-css-27]:active,
.css-27[data-simulate-active],
[data-css-27][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-27::-moz-focus-inner,
[data-css-27]::-moz-focus-inner,
.css-27[data-simulate-mozfocusinner],
[data-css-27][data-simulate-mozfocusinner] {
  border: 0;
}

.css-27 [role="img"],
[data-css-27] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-27 [role="img"]:first-child,
[data-css-27] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-27 [role="img"]:last-child,
[data-css-27] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-27 [role="img"]:only-child,
[data-css-27] [role="img"]:only-child {
  margin: 0;
}

.css-41,
[data-css-41] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-42,
[data-css-42] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-42:first-child,
[data-css-42]:first-child,
.css-42[data-simulate-firstchild],
[data-css-42][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-42:last-child,
[data-css-42]:last-child,
.css-42[data-simulate-lastchild],
[data-css-42][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <glamorous(div)>
      <div
        className="css-26"
      >
        <TextArea
          inputRef={[Function]}
        >
          <TextArea
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <FauxControl
                className="css-0"
                control={[Function]}
              >
                <div
                  className="css-1"
                >
                  <glamorous(glamorous(textarea))
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    iconEnd={null}
                    innerRef={[Function]}
                    key="control"
                    onInput={[Function]}
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <textarea
                      className="css-11"
                      onInput={[Function]}
                      rows={8}
                    />
                  </glamorous(glamorous(textarea))>
                  <Underlay>
                    <div
                      className="css-25"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextArea>
        </TextArea>
        <Button
          element="button"
          onClick={[Function]}
          size="large"
          type="button"
          variant="regular"
        >
          <glamorous(button)
            element="button"
            onClick={[Function]}
            size="large"
            text="Focus the input"
            type="button"
            variant="regular"
          >
            <button
              className="css-27"
              onClick={[Function]}
              type="button"
            >
              <glamorous(span)>
                <span
                  className="css-41"
                >
                  <glamorous(span)
                    size="large"
                  >
                    <span
                      className="css-42"
                    >
                      Focus the input
                    </span>
                  </glamorous(span)>
                </span>
              </glamorous(span)>
            </button>
          </glamorous(button)>
        </Button>
      </div>
    </glamorous(div)>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples invalid 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  invalid={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": true,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": true,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            aria-invalid={true}
            controlPropsIn={
              Object {
                "aria-invalid": true,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              aria-invalid={true}
              className="css-11"
              onInput={[Function]}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples next-to-other-inputs 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26,
[data-css-26] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-26::placeholder,
[data-css-26]::placeholder,
.css-26[data-simulate-placeholder],
[data-css-26][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-input-placeholder,
[data-css-26]::-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26:-ms-input-placeholder,
[data-css-26]:-ms-input-placeholder,
.css-26[data-simulate-msinputplaceholder],
[data-css-26][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-26::-ms-clear,
[data-css-26]::-ms-clear,
.css-26[data-simulate-msclear],
[data-css-26][data-simulate-msclear] {
  display: none;
}

.css-26:focus ~ div:last-child,
[data-css-26]:focus ~ div:last-child,
.css-26[data-simulate-focus] ~ div:last-child,
[data-css-26][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-40,
[data-css-40] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-40::placeholder,
[data-css-40]::placeholder,
.css-40[data-simulate-placeholder],
[data-css-40][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-input-placeholder,
[data-css-40]::-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40:-ms-input-placeholder,
[data-css-40]:-ms-input-placeholder,
.css-40[data-simulate-msinputplaceholder],
[data-css-40][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-40::-ms-clear,
[data-css-40]::-ms-clear,
.css-40[data-simulate-msclear],
[data-css-40][data-simulate-msclear] {
  display: none;
}

.css-40:focus ~ div:last-child,
[data-css-40]:focus ~ div:last-child,
.css-40[data-simulate-focus] ~ div:last-child,
[data-css-40][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-54,
[data-css-54] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-54::placeholder,
[data-css-54]::placeholder,
.css-54[data-simulate-placeholder],
[data-css-54][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-input-placeholder,
[data-css-54]::-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54:-ms-input-placeholder,
[data-css-54]:-ms-input-placeholder,
.css-54[data-simulate-msinputplaceholder],
[data-css-54][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-54::-ms-clear,
[data-css-54]::-ms-clear,
.css-54[data-simulate-msclear],
[data-css-54][data-simulate-msclear] {
  display: none;
}

.css-54:focus ~ div:last-child,
[data-css-54]:focus ~ div:last-child,
.css-54[data-simulate-focus] ~ div:last-child,
[data-css-54][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-68,
[data-css-68] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-68::placeholder,
[data-css-68]::placeholder,
.css-68[data-simulate-placeholder],
[data-css-68][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-68::-ms-input-placeholder,
[data-css-68]::-ms-input-placeholder,
.css-68[data-simulate-msinputplaceholder],
[data-css-68][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-68:-ms-input-placeholder,
[data-css-68]:-ms-input-placeholder,
.css-68[data-simulate-msinputplaceholder],
[data-css-68][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-68::-ms-clear,
[data-css-68]::-ms-clear,
.css-68[data-simulate-msclear],
[data-css-68][data-simulate-msclear] {
  display: none;
}

.css-68:focus ~ div:last-child,
[data-css-68]:focus ~ div:last-child,
.css-68[data-simulate-focus] ~ div:last-child,
[data-css-68][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-82,
[data-css-82] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-82::placeholder,
[data-css-82]::placeholder,
.css-82[data-simulate-placeholder],
[data-css-82][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-82::-ms-input-placeholder,
[data-css-82]::-ms-input-placeholder,
.css-82[data-simulate-msinputplaceholder],
[data-css-82][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-82:-ms-input-placeholder,
[data-css-82]:-ms-input-placeholder,
.css-82[data-simulate-msinputplaceholder],
[data-css-82][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-82::-ms-clear,
[data-css-82]::-ms-clear,
.css-82[data-simulate-msclear],
[data-css-82][data-simulate-msclear] {
  display: none;
}

.css-82:focus ~ div:last-child,
[data-css-82]:focus ~ div:last-child,
.css-82[data-simulate-focus] ~ div:last-child,
[data-css-82][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-96,
[data-css-96] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-96 *,
[data-css-96] *,
.css-96 *::before,
[data-css-96] *::before,
.css-96 *::after,
[data-css-96] *::after {
  box-sizing: inherit;
}

.css-96:focus,
[data-css-96]:focus,
.css-96[data-simulate-focus],
[data-css-96][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-96:hover,
[data-css-96]:hover,
.css-96[data-simulate-hover],
[data-css-96][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-96:active,
[data-css-96]:active,
.css-96[data-simulate-active],
[data-css-96][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-96::-moz-focus-inner,
[data-css-96]::-moz-focus-inner,
.css-96[data-simulate-mozfocusinner],
[data-css-96][data-simulate-mozfocusinner] {
  border: 0;
}

.css-96 [role="img"],
[data-css-96] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-96 [role="img"]:first-child,
[data-css-96] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-96 [role="img"]:last-child,
[data-css-96] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-96 [role="img"]:only-child,
[data-css-96] [role="img"]:only-child {
  margin: 0;
}

.css-110,
[data-css-110] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-111,
[data-css-111] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-111:first-child,
[data-css-111]:first-child,
.css-111[data-simulate-firstchild],
[data-css-111][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-111:last-child,
[data-css-111]:last-child,
.css-111[data-simulate-lastchild],
[data-css-111][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

.css-118 > *:not(:last-child),
[data-css-118] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-118 > *,
[data-css-118] > * {
  align-items: flex-start;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
}

.css-118 > * > div,
[data-css-118] > * > div {
  flex: 0 0 8rem;
  margin-right: 0.5rem;
  -webkit-flex: 0 0 8rem;
}

.css-119,
[data-css-119] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-119 [role="img"],
[data-css-119] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-119 [role="img"]:last-of-type,
[data-css-119] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-121,
[data-css-121] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-121 *,
[data-css-121] *,
.css-121 *::before,
[data-css-121] *::before,
.css-121 *::after,
[data-css-121] *::after {
  box-sizing: inherit;
}

.css-121:hover > div:last-child,
[data-css-121]:hover > div:last-child,
.css-121[data-simulate-hover] > div:last-child,
[data-css-121][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-121:focus > div:last-child,
[data-css-121]:focus > div:last-child,
.css-121[data-simulate-focus] > div:last-child,
[data-css-121][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-121:active > div:last-child,
[data-css-121]:active > div:last-child,
.css-121[data-simulate-active] > div:last-child,
[data-css-121][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-121 [role="img"],
[data-css-121] [role="img"] {
  color: #c8d1e0;
  display: block;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-121 [role="img"]:last-of-type,
[data-css-121] [role="img"]:last-of-type {
  color: #c8d1e0;
}

.css-132,
[data-css-132] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-132::placeholder,
[data-css-132]::placeholder,
.css-132[data-simulate-placeholder],
[data-css-132][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-132::-ms-input-placeholder,
[data-css-132]::-ms-input-placeholder,
.css-132[data-simulate-msinputplaceholder],
[data-css-132][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-132:-ms-input-placeholder,
[data-css-132]:-ms-input-placeholder,
.css-132[data-simulate-msinputplaceholder],
[data-css-132][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-132::-ms-clear,
[data-css-132]::-ms-clear,
.css-132[data-simulate-msclear],
[data-css-132][data-simulate-msclear] {
  display: none;
}

.css-132:focus ~ div:last-child,
[data-css-132]:focus ~ div:last-child,
.css-132[data-simulate-focus] ~ div:last-child,
[data-css-132][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-146,
[data-css-146] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  min-width: 1.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-146 *,
[data-css-146] *,
.css-146 *::before,
[data-css-146] *::before,
.css-146 *::after,
[data-css-146] *::after {
  box-sizing: inherit;
}

.css-146:focus,
[data-css-146]:focus,
.css-146[data-simulate-focus],
[data-css-146][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-146:hover,
[data-css-146]:hover,
.css-146[data-simulate-hover],
[data-css-146][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-146:active,
[data-css-146]:active,
.css-146[data-simulate-active],
[data-css-146][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-146::-moz-focus-inner,
[data-css-146]::-moz-focus-inner,
.css-146[data-simulate-mozfocusinner],
[data-css-146][data-simulate-mozfocusinner] {
  border: 0;
}

.css-146 [role="img"],
[data-css-146] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-146 [role="img"]:first-child,
[data-css-146] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-146 [role="img"]:last-child,
[data-css-146] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-146 [role="img"]:only-child,
[data-css-146] [role="img"]:only-child {
  margin: 0;
}

.css-160,
[data-css-160] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.css-161,
[data-css-161] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-161::placeholder,
[data-css-161]::placeholder,
.css-161[data-simulate-placeholder],
[data-css-161][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-161::-ms-input-placeholder,
[data-css-161]::-ms-input-placeholder,
.css-161[data-simulate-msinputplaceholder],
[data-css-161][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-161:-ms-input-placeholder,
[data-css-161]:-ms-input-placeholder,
.css-161[data-simulate-msinputplaceholder],
[data-css-161][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-161::-ms-clear,
[data-css-161]::-ms-clear,
.css-161[data-simulate-msclear],
[data-css-161][data-simulate-msclear] {
  display: none;
}

.css-161:focus ~ div:last-child,
[data-css-161]:focus ~ div:last-child,
.css-161[data-simulate-focus] ~ div:last-child,
[data-css-161][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-175,
[data-css-175] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-175::placeholder,
[data-css-175]::placeholder,
.css-175[data-simulate-placeholder],
[data-css-175][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-175::-ms-input-placeholder,
[data-css-175]::-ms-input-placeholder,
.css-175[data-simulate-msinputplaceholder],
[data-css-175][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-175:-ms-input-placeholder,
[data-css-175]:-ms-input-placeholder,
.css-175[data-simulate-msinputplaceholder],
[data-css-175][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-175::-ms-clear,
[data-css-175]::-ms-clear,
.css-175[data-simulate-msclear],
[data-css-175][data-simulate-msclear] {
  display: none;
}

.css-175:focus ~ div:last-child,
[data-css-175]:focus ~ div:last-child,
.css-175[data-simulate-focus] ~ div:last-child,
[data-css-175][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-189,
[data-css-189] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  min-width: 2em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-189 *,
[data-css-189] *,
.css-189 *::before,
[data-css-189] *::before,
.css-189 *::after,
[data-css-189] *::after {
  box-sizing: inherit;
}

.css-189:focus,
[data-css-189]:focus,
.css-189[data-simulate-focus],
[data-css-189][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-189:hover,
[data-css-189]:hover,
.css-189[data-simulate-hover],
[data-css-189][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-189:active,
[data-css-189]:active,
.css-189[data-simulate-active],
[data-css-189][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-189::-moz-focus-inner,
[data-css-189]::-moz-focus-inner,
.css-189[data-simulate-mozfocusinner],
[data-css-189][data-simulate-mozfocusinner] {
  border: 0;
}

.css-189 [role="img"],
[data-css-189] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-189 [role="img"]:first-child,
[data-css-189] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-189 [role="img"]:last-child,
[data-css-189] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-189 [role="img"]:only-child,
[data-css-189] [role="img"]:only-child {
  margin: 0;
}

.css-203,
[data-css-203] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.css-204,
[data-css-204] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-204::placeholder,
[data-css-204]::placeholder,
.css-204[data-simulate-placeholder],
[data-css-204][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-204::-ms-input-placeholder,
[data-css-204]::-ms-input-placeholder,
.css-204[data-simulate-msinputplaceholder],
[data-css-204][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-204:-ms-input-placeholder,
[data-css-204]:-ms-input-placeholder,
.css-204[data-simulate-msinputplaceholder],
[data-css-204][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-204::-ms-clear,
[data-css-204]::-ms-clear,
.css-204[data-simulate-msclear],
[data-css-204][data-simulate-msclear] {
  display: none;
}

.css-204:focus ~ div:last-child,
[data-css-204]:focus ~ div:last-child,
.css-204[data-simulate-focus] ~ div:last-child,
[data-css-204][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-218,
[data-css-218] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-218::placeholder,
[data-css-218]::placeholder,
.css-218[data-simulate-placeholder],
[data-css-218][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-218::-ms-input-placeholder,
[data-css-218]::-ms-input-placeholder,
.css-218[data-simulate-msinputplaceholder],
[data-css-218][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-218:-ms-input-placeholder,
[data-css-218]:-ms-input-placeholder,
.css-218[data-simulate-msinputplaceholder],
[data-css-218][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-218::-ms-clear,
[data-css-218]::-ms-clear,
.css-218[data-simulate-msclear],
[data-css-218][data-simulate-msclear] {
  display: none;
}

.css-218:focus ~ div:last-child,
[data-css-218]:focus ~ div:last-child,
.css-218[data-simulate-focus] ~ div:last-child,
[data-css-218][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-232,
[data-css-232] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-232::placeholder,
[data-css-232]::placeholder,
.css-232[data-simulate-placeholder],
[data-css-232][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-232::-ms-input-placeholder,
[data-css-232]::-ms-input-placeholder,
.css-232[data-simulate-msinputplaceholder],
[data-css-232][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-232:-ms-input-placeholder,
[data-css-232]:-ms-input-placeholder,
.css-232[data-simulate-msinputplaceholder],
[data-css-232][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-232::-ms-clear,
[data-css-232]::-ms-clear,
.css-232[data-simulate-msclear],
[data-css-232][data-simulate-msclear] {
  display: none;
}

.css-232:focus ~ div:last-child,
[data-css-232]:focus ~ div:last-child,
.css-232[data-simulate-focus] ~ div:last-child,
[data-css-232][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-246,
[data-css-246] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  min-width: 3.25em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-246 *,
[data-css-246] *,
.css-246 *::before,
[data-css-246] *::before,
.css-246 *::after,
[data-css-246] *::after {
  box-sizing: inherit;
}

.css-246:focus,
[data-css-246]:focus,
.css-246[data-simulate-focus],
[data-css-246][data-simulate-focus] {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
  color: #333840;
  text-decoration: none;
}

.css-246:hover,
[data-css-246]:hover,
.css-246[data-simulate-hover],
[data-css-246][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-246:active,
[data-css-246]:active,
.css-246[data-simulate-active],
[data-css-246][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-246::-moz-focus-inner,
[data-css-246]::-moz-focus-inner,
.css-246[data-simulate-mozfocusinner],
[data-css-246][data-simulate-mozfocusinner] {
  border: 0;
}

.css-246 [role="img"],
[data-css-246] [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.css-246 [role="img"]:first-child,
[data-css-246] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-246 [role="img"]:last-child,
[data-css-246] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-246 [role="img"]:only-child,
[data-css-246] [role="img"]:only-child {
  margin: 0;
}

.css-260,
[data-css-260] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.css-260:first-child,
[data-css-260]:first-child,
.css-260[data-simulate-firstchild],
[data-css-260][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-260:last-child,
[data-css-260]:last-child,
.css-260[data-simulate-lastchild],
[data-css-260][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<glamorous(glamorous(div))>
  <div
    className="css-118"
  >
    <div>
      <TextArea
        defaultValue="Small"
        rows={1}
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Small"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="small"
                >
                  <textarea
                    className="css-26"
                    defaultValue="Small"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Small"
        rows={1}
        size="small"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Small"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="small"
                >
                  <textarea
                    className="css-82"
                    defaultValue="Small"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextInput
        defaultValue="Small"
        size="small"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Small",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="small"
        >
          <FauxControl
            className="css-119"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Small",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="small"
          >
            <FauxControl
              className="css-119"
              control={[Function]}
            >
              <div
                className="css-121"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Small"
                  key="control"
                  size="small"
                  type="text"
                >
                  <input
                    className="css-132"
                    defaultValue="Small"
                    size="small"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="small"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="small"
          text="Small"
          type="button"
          variant="regular"
        >
          <button
            className="css-146"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-110"
              >
                <glamorous(span)
                  size="small"
                >
                  <span
                    className="css-160"
                  >
                    Small
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
    <div>
      <TextArea
        defaultValue="Medium"
        rows={1}
        size="medium"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "medium",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Medium"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="medium"
                >
                  <textarea
                    className="css-40"
                    defaultValue="Medium"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Medium"
        rows={1}
        size="medium"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "medium",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Medium"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="medium"
                >
                  <textarea
                    className="css-161"
                    defaultValue="Medium"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextInput
        defaultValue="Medium"
        size="medium"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Medium",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="medium"
        >
          <FauxControl
            className="css-119"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Medium",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="medium"
          >
            <FauxControl
              className="css-119"
              control={[Function]}
            >
              <div
                className="css-121"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Medium"
                  key="control"
                  size="medium"
                  type="text"
                >
                  <input
                    className="css-175"
                    defaultValue="Medium"
                    size="medium"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="medium"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="medium"
          text="Medium"
          type="button"
          variant="regular"
        >
          <button
            className="css-189"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-110"
              >
                <glamorous(span)
                  size="medium"
                >
                  <span
                    className="css-203"
                  >
                    Medium
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
    <div>
      <TextArea
        defaultValue="Large"
        rows={1}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Large"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="large"
                >
                  <textarea
                    className="css-11"
                    defaultValue="Large"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Large"
        rows={1}
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Large"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="large"
                >
                  <textarea
                    className="css-68"
                    defaultValue="Large"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextInput
        defaultValue="Large"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Large",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
        >
          <FauxControl
            className="css-119"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Large",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <FauxControl
              className="css-119"
              control={[Function]}
            >
              <div
                className="css-121"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Large"
                  key="control"
                  size="large"
                  type="text"
                >
                  <input
                    className="css-204"
                    defaultValue="Large"
                    size="large"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="large"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="large"
          text="Large"
          type="button"
          variant="regular"
        >
          <button
            className="css-96"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-110"
              >
                <glamorous(span)
                  size="large"
                >
                  <span
                    className="css-111"
                  >
                    Large
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
    <div>
      <TextArea
        defaultValue="Jumbo"
        rows={1}
        size="jumbo"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "jumbo",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Jumbo"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={1}
                  size="jumbo"
                >
                  <textarea
                    className="css-54"
                    defaultValue="Jumbo"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Jumbo"
        rows={1}
        size="jumbo"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  autoSize={true}
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "jumbo",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="Jumbo"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={false}
                  rows={1}
                  size="jumbo"
                >
                  <textarea
                    className="css-218"
                    defaultValue="Jumbo"
                    onInput={[Function]}
                    rows={1}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
      <TextInput
        defaultValue="Jumbo"
        size="jumbo"
      >
        <TextInput
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="jumbo"
        >
          <FauxControl
            className="css-119"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="jumbo"
          >
            <FauxControl
              className="css-119"
              control={[Function]}
            >
              <div
                className="css-121"
              >
                <glamorous(glamorous(input))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  defaultValue="Jumbo"
                  key="control"
                  size="jumbo"
                  type="text"
                >
                  <input
                    className="css-232"
                    defaultValue="Jumbo"
                    size="jumbo"
                    type="text"
                  />
                </glamorous(glamorous(input))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextInput>
      </TextInput>
      <Button
        element="button"
        size="jumbo"
        type="button"
        variant="regular"
      >
        <glamorous(button)
          element="button"
          size="jumbo"
          text="Jumbo"
          type="button"
          variant="regular"
        >
          <button
            className="css-246"
            type="button"
          >
            <glamorous(span)>
              <span
                className="css-110"
              >
                <glamorous(span)
                  size="jumbo"
                >
                  <span
                    className="css-260"
                  >
                    Jumbo
                  </span>
                </glamorous(span)>
              </span>
            </glamorous(span)>
          </button>
        </glamorous(button)>
      </Button>
    </div>
  </div>
</glamorous(glamorous(div))>
`;

exports[`TextArea demo examples placeholder 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  placeholder="Leave a comment"
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "placeholder": "Leave a comment",
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "placeholder": "Leave a comment",
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "placeholder": "Leave a comment",
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            placeholder="Leave a comment"
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-11"
              onInput={[Function]}
              placeholder="Leave a comment"
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples read-only 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-12,
[data-css-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-12::placeholder,
[data-css-12]::placeholder,
.css-12[data-simulate-placeholder],
[data-css-12][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-input-placeholder,
[data-css-12]::-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12:-ms-input-placeholder,
[data-css-12]:-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-clear,
[data-css-12]::-ms-clear,
.css-12[data-simulate-msclear],
[data-css-12][data-simulate-msclear] {
  display: none;
}

.css-12:focus ~ div:last-child,
[data-css-12]:focus ~ div:last-child,
.css-12[data-simulate-focus] ~ div:last-child,
[data-css-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<TextArea
  defaultValue="Hello World"
  readOnly={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": true,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    readOnly={true}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": true,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      readOnly={true}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": true,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            readOnly={true}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-12"
              defaultValue="Hello World"
              onInput={[Function]}
              readOnly={true}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay
            readOnly={true}
          >
            <div
              className="css-11"
              readOnly={true}
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples required 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  required={true}
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": true,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": true,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": true,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": true,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            aria-required={true}
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": true,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": true,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            required={true}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              aria-required={true}
              className="css-11"
              onInput={[Function]}
              required={true}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples rows 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26 > *:not(:last-child),
[data-css-26] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-27,
[data-css-27] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-27::placeholder,
[data-css-27]::placeholder,
.css-27[data-simulate-placeholder],
[data-css-27][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27::-ms-input-placeholder,
[data-css-27]::-ms-input-placeholder,
.css-27[data-simulate-msinputplaceholder],
[data-css-27][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27:-ms-input-placeholder,
[data-css-27]:-ms-input-placeholder,
.css-27[data-simulate-msinputplaceholder],
[data-css-27][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27::-ms-clear,
[data-css-27]::-ms-clear,
.css-27[data-simulate-msclear],
[data-css-27][data-simulate-msclear] {
  display: none;
}

.css-27:focus ~ div:last-child,
[data-css-27]:focus ~ div:last-child,
.css-27[data-simulate-focus] ~ div:last-child,
[data-css-27][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-41,
[data-css-41] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-41::placeholder,
[data-css-41]::placeholder,
.css-41[data-simulate-placeholder],
[data-css-41][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41::-ms-input-placeholder,
[data-css-41]::-ms-input-placeholder,
.css-41[data-simulate-msinputplaceholder],
[data-css-41][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41:-ms-input-placeholder,
[data-css-41]:-ms-input-placeholder,
.css-41[data-simulate-msinputplaceholder],
[data-css-41][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41::-ms-clear,
[data-css-41]::-ms-clear,
.css-41[data-simulate-msclear],
[data-css-41][data-simulate-msclear] {
  display: none;
}

.css-41:focus ~ div:last-child,
[data-css-41]:focus ~ div:last-child,
.css-41[data-simulate-focus] ~ div:last-child,
[data-css-41][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-55,
[data-css-55] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-55::placeholder,
[data-css-55]::placeholder,
.css-55[data-simulate-placeholder],
[data-css-55][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-55::-ms-input-placeholder,
[data-css-55]::-ms-input-placeholder,
.css-55[data-simulate-msinputplaceholder],
[data-css-55][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-55:-ms-input-placeholder,
[data-css-55]:-ms-input-placeholder,
.css-55[data-simulate-msinputplaceholder],
[data-css-55][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-55::-ms-clear,
[data-css-55]::-ms-clear,
.css-55[data-simulate-msclear],
[data-css-55][data-simulate-msclear] {
  display: none;
}

.css-55:focus ~ div:last-child,
[data-css-55]:focus ~ div:last-child,
.css-55[data-simulate-focus] ~ div:last-child,
[data-css-55][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<glamorous(div)>
  <div
    className="css-26"
  >
    <TextArea
      defaultValue="Small"
      rows={1}
      size="small"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Small",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 1,
            "size": "small",
          }
        }
        iconEnd={null}
        size="small"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "small",
                  }
                }
                controlRef={[Function]}
                defaultValue="Small"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={1}
                size="small"
              >
                <textarea
                  className="css-27"
                  defaultValue="Small"
                  onInput={[Function]}
                  rows={1}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Medium"
      rows={1}
      size="medium"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Medium",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 1,
            "size": "medium",
          }
        }
        iconEnd={null}
        size="medium"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                controlRef={[Function]}
                defaultValue="Medium"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={1}
                size="medium"
              >
                <textarea
                  className="css-41"
                  defaultValue="Medium"
                  onInput={[Function]}
                  rows={1}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Large"
      rows={1}
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Large",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 1,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "large",
                  }
                }
                controlRef={[Function]}
                defaultValue="Large"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={1}
                size="large"
              >
                <textarea
                  className="css-11"
                  defaultValue="Large"
                  onInput={[Function]}
                  rows={1}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Jumbo"
      rows={1}
      size="jumbo"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Jumbo",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 1,
            "size": "jumbo",
          }
        }
        iconEnd={null}
        size="jumbo"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                controlRef={[Function]}
                defaultValue="Jumbo"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={1}
                size="jumbo"
              >
                <textarea
                  className="css-55"
                  defaultValue="Jumbo"
                  onInput={[Function]}
                  rows={1}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
  </div>
</glamorous(div)>
`;

exports[`TextArea demo examples rtl 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <TextArea
        defaultValue="مرحبا بالعالم"
      >
        <TextArea
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "مرحبا بالعالم",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "مرحبا بالعالم",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <FauxControl
              className="css-0"
              control={[Function]}
            >
              <div
                className="css-1"
              >
                <glamorous(glamorous(textarea))
                  controlPropsIn={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  controlRef={[Function]}
                  defaultValue="مرحبا بالعالم"
                  iconEnd={null}
                  innerRef={[Function]}
                  key="control"
                  onInput={[Function]}
                  resizeable={true}
                  rows={8}
                  size="large"
                >
                  <textarea
                    className="css-11"
                    defaultValue="مرحبا بالعالم"
                    onInput={[Function]}
                    rows={8}
                  />
                </glamorous(glamorous(textarea))>
                <Underlay>
                  <div
                    className="css-25"
                  />
                </Underlay>
              </div>
            </FauxControl>
          </FauxControl>
        </TextArea>
      </TextArea>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`TextArea demo examples size 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-26 > *:not(:last-child),
[data-css-26] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-27,
[data-css-27] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
  -webkit-flex: 1 1 auto;
}

.css-27::placeholder,
[data-css-27]::placeholder,
.css-27[data-simulate-placeholder],
[data-css-27][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27::-ms-input-placeholder,
[data-css-27]::-ms-input-placeholder,
.css-27[data-simulate-msinputplaceholder],
[data-css-27][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27:-ms-input-placeholder,
[data-css-27]:-ms-input-placeholder,
.css-27[data-simulate-msinputplaceholder],
[data-css-27][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-27::-ms-clear,
[data-css-27]::-ms-clear,
.css-27[data-simulate-msclear],
[data-css-27][data-simulate-msclear] {
  display: none;
}

.css-27:focus ~ div:last-child,
[data-css-27]:focus ~ div:last-child,
.css-27[data-simulate-focus] ~ div:last-child,
[data-css-27][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-41,
[data-css-41] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
  -webkit-flex: 1 1 auto;
}

.css-41::placeholder,
[data-css-41]::placeholder,
.css-41[data-simulate-placeholder],
[data-css-41][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41::-ms-input-placeholder,
[data-css-41]::-ms-input-placeholder,
.css-41[data-simulate-msinputplaceholder],
[data-css-41][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41:-ms-input-placeholder,
[data-css-41]:-ms-input-placeholder,
.css-41[data-simulate-msinputplaceholder],
[data-css-41][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41::-ms-clear,
[data-css-41]::-ms-clear,
.css-41[data-simulate-msclear],
[data-css-41][data-simulate-msclear] {
  display: none;
}

.css-41:focus ~ div:last-child,
[data-css-41]:focus ~ div:last-child,
.css-41[data-simulate-focus] ~ div:last-child,
[data-css-41][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-55,
[data-css-55] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-55::placeholder,
[data-css-55]::placeholder,
.css-55[data-simulate-placeholder],
[data-css-55][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-55::-ms-input-placeholder,
[data-css-55]::-ms-input-placeholder,
.css-55[data-simulate-msinputplaceholder],
[data-css-55][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-55:-ms-input-placeholder,
[data-css-55]:-ms-input-placeholder,
.css-55[data-simulate-msinputplaceholder],
[data-css-55][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-55::-ms-clear,
[data-css-55]::-ms-clear,
.css-55[data-simulate-msclear],
[data-css-55][data-simulate-msclear] {
  display: none;
}

.css-55:focus ~ div:last-child,
[data-css-55]:focus ~ div:last-child,
.css-55[data-simulate-focus] ~ div:last-child,
[data-css-55][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

<glamorous(div)>
  <div
    className="css-26"
  >
    <TextArea
      defaultValue="Small"
      size="small"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Small",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 2,
            "size": "small",
          }
        }
        iconEnd={null}
        size="small"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 2,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 2,
                    "size": "small",
                  }
                }
                controlRef={[Function]}
                defaultValue="Small"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={2}
                size="small"
              >
                <textarea
                  className="css-27"
                  defaultValue="Small"
                  onInput={[Function]}
                  rows={2}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Medium"
      size="medium"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Medium",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 6,
            "size": "medium",
          }
        }
        iconEnd={null}
        size="medium"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 6,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 6,
                    "size": "medium",
                  }
                }
                controlRef={[Function]}
                defaultValue="Medium"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={6}
                size="medium"
              >
                <textarea
                  className="css-41"
                  defaultValue="Medium"
                  onInput={[Function]}
                  rows={6}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Large"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Large",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                controlRef={[Function]}
                defaultValue="Large"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
              >
                <textarea
                  className="css-11"
                  defaultValue="Large"
                  onInput={[Function]}
                  rows={8}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Jumbo"
      size="jumbo"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Jumbo",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 12,
            "size": "jumbo",
          }
        }
        iconEnd={null}
        size="jumbo"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 12,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
          >
            <div
              className="css-1"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 12,
                    "size": "jumbo",
                  }
                }
                controlRef={[Function]}
                defaultValue="Jumbo"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={12}
                size="jumbo"
              >
                <textarea
                  className="css-55"
                  defaultValue="Jumbo"
                  onInput={[Function]}
                  rows={12}
                />
              </glamorous(glamorous(textarea))>
              <Underlay>
                <div
                  className="css-25"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
  </div>
</glamorous(div)>
`;

exports[`TextArea demo examples uncontrolled 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1,
[data-css-1] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 *,
[data-css-1] *,
.css-1 *::before,
[data-css-1] *::before,
.css-1 *::after,
[data-css-1] *::after {
  box-sizing: inherit;
}

.css-1:hover > div:last-child,
[data-css-1]:hover > div:last-child,
.css-1[data-simulate-hover] > div:last-child,
[data-css-1][data-simulate-hover] > div:last-child {
  border-color: #5691f0;
}

.css-1:focus > div:last-child,
[data-css-1]:focus > div:last-child,
.css-1[data-simulate-focus] > div:last-child,
[data-css-1][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-1:active > div:last-child,
[data-css-1]:active > div:last-child,
.css-1[data-simulate-active] > div:last-child,
[data-css-1][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-11,
[data-css-11] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-11::placeholder,
[data-css-11]::placeholder,
.css-11[data-simulate-placeholder],
[data-css-11][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-input-placeholder,
[data-css-11]::-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11:-ms-input-placeholder,
[data-css-11]:-ms-input-placeholder,
.css-11[data-simulate-msinputplaceholder],
[data-css-11][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-11::-ms-clear,
[data-css-11]::-ms-clear,
.css-11[data-simulate-msclear],
[data-css-11][data-simulate-msclear] {
  display: none;
}

.css-11:focus ~ div:last-child,
[data-css-11]:focus ~ div:last-child,
.css-11[data-simulate-focus] ~ div:last-child,
[data-css-11][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #1d5bbf;
}

.css-25,
[data-css-25] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
>
  <TextArea
    control={[Function]}
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <FauxControl
      className="css-0"
      control={[Function]}
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <FauxControl
        className="css-0"
        control={[Function]}
      >
        <div
          className="css-1"
        >
          <glamorous(glamorous(textarea))
            controlPropsIn={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            controlRef={[Function]}
            defaultValue="Hello World"
            iconEnd={null}
            innerRef={[Function]}
            key="control"
            onInput={[Function]}
            resizeable={true}
            rows={8}
            size="large"
          >
            <textarea
              className="css-11"
              defaultValue="Hello World"
              onInput={[Function]}
              rows={8}
            />
          </glamorous(glamorous(textarea))>
          <Underlay>
            <div
              className="css-25"
            />
          </Underlay>
        </div>
      </FauxControl>
    </FauxControl>
  </TextArea>
</TextArea>
`;

exports[`TextArea demo examples variants 1`] = `
.css-0,
[data-css-0] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-1 > *:not(:last-child),
[data-css-1] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.css-2,
[data-css-2] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 *,
[data-css-2] *,
.css-2 *::before,
[data-css-2] *::before,
.css-2 *::after,
[data-css-2] *::after {
  box-sizing: inherit;
}

.css-2:hover > div:last-child,
[data-css-2]:hover > div:last-child,
.css-2[data-simulate-hover] > div:last-child,
[data-css-2][data-simulate-hover] > div:last-child {
  border-color: #3ba164;
}

.css-2:focus > div:last-child,
[data-css-2]:focus > div:last-child,
.css-2[data-simulate-focus] > div:last-child,
[data-css-2][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-2:active > div:last-child,
[data-css-2]:active > div:last-child,
.css-2[data-simulate-active] > div:last-child,
[data-css-2][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-12,
[data-css-12] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-12::placeholder,
[data-css-12]::placeholder,
.css-12[data-simulate-placeholder],
[data-css-12][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-input-placeholder,
[data-css-12]::-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12:-ms-input-placeholder,
[data-css-12]:-ms-input-placeholder,
.css-12[data-simulate-msinputplaceholder],
[data-css-12][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-12::-ms-clear,
[data-css-12]::-ms-clear,
.css-12[data-simulate-msclear],
[data-css-12][data-simulate-msclear] {
  display: none;
}

.css-12:focus ~ div:last-child,
[data-css-12]:focus ~ div:last-child,
.css-12[data-simulate-focus] ~ div:last-child,
[data-css-12][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #20693d;
}

.css-26,
[data-css-26] {
  background-color: #fff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-27,
[data-css-27] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-27 *,
[data-css-27] *,
.css-27 *::before,
[data-css-27] *::before,
.css-27 *::after,
[data-css-27] *::after {
  box-sizing: inherit;
}

.css-27:hover > div:last-child,
[data-css-27]:hover > div:last-child,
.css-27[data-simulate-hover] > div:last-child,
[data-css-27][data-simulate-hover] > div:last-child {
  border-color: #cf7911;
}

.css-27:focus > div:last-child,
[data-css-27]:focus > div:last-child,
.css-27[data-simulate-focus] > div:last-child,
[data-css-27][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #8a4d03;
}

.css-27:active > div:last-child,
[data-css-27]:active > div:last-child,
.css-27[data-simulate-active] > div:last-child,
[data-css-27][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #8a4d03;
}

.css-37,
[data-css-37] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-37::placeholder,
[data-css-37]::placeholder,
.css-37[data-simulate-placeholder],
[data-css-37][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-37::-ms-input-placeholder,
[data-css-37]::-ms-input-placeholder,
.css-37[data-simulate-msinputplaceholder],
[data-css-37][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-37:-ms-input-placeholder,
[data-css-37]:-ms-input-placeholder,
.css-37[data-simulate-msinputplaceholder],
[data-css-37][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-37::-ms-clear,
[data-css-37]::-ms-clear,
.css-37[data-simulate-msclear],
[data-css-37][data-simulate-msclear] {
  display: none;
}

.css-37:focus ~ div:last-child,
[data-css-37]:focus ~ div:last-child,
.css-37[data-simulate-focus] ~ div:last-child,
[data-css-37][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #8a4d03;
}

.css-51,
[data-css-51] {
  background-color: #fff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-52,
[data-css-52] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-52 *,
[data-css-52] *,
.css-52 *::before,
[data-css-52] *::before,
.css-52 *::after,
[data-css-52] *::after {
  box-sizing: inherit;
}

.css-52:hover > div:last-child,
[data-css-52]:hover > div:last-child,
.css-52[data-simulate-hover] > div:last-child,
[data-css-52][data-simulate-hover] > div:last-child {
  border-color: #f55353;
}

.css-52:focus > div:last-child,
[data-css-52]:focus > div:last-child,
.css-52[data-simulate-focus] > div:last-child,
[data-css-52][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-52:active > div:last-child,
[data-css-52]:active > div:last-child,
.css-52[data-simulate-active] > div:last-child,
[data-css-52][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-62,
[data-css-62] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-62::placeholder,
[data-css-62]::placeholder,
.css-62[data-simulate-placeholder],
[data-css-62][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-62::-ms-input-placeholder,
[data-css-62]::-ms-input-placeholder,
.css-62[data-simulate-msinputplaceholder],
[data-css-62][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-62:-ms-input-placeholder,
[data-css-62]:-ms-input-placeholder,
.css-62[data-simulate-msinputplaceholder],
[data-css-62][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-62::-ms-clear,
[data-css-62]::-ms-clear,
.css-62[data-simulate-msclear],
[data-css-62][data-simulate-msclear] {
  display: none;
}

.css-62:focus ~ div:last-child,
[data-css-62]:focus ~ div:last-child,
.css-62[data-simulate-focus] ~ div:last-child,
[data-css-62][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #b80d0d;
}

.css-76,
[data-css-76] {
  background-color: #fff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<glamorous(div)>
  <div
    className="css-1"
  >
    <TextArea
      defaultValue="Success"
      variant="success"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Success",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
        variant="success"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Success",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="success"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            variant="success"
          >
            <div
              className="css-2"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Success",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                controlRef={[Function]}
                defaultValue="Success"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
                variant="success"
              >
                <textarea
                  className="css-12"
                  defaultValue="Success"
                  onInput={[Function]}
                  rows={8}
                />
              </glamorous(glamorous(textarea))>
              <Underlay
                variant="success"
              >
                <div
                  className="css-26"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Warning"
      variant="warning"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Warning",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
        variant="warning"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Warning",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="warning"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            variant="warning"
          >
            <div
              className="css-27"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Warning",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                controlRef={[Function]}
                defaultValue="Warning"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
                variant="warning"
              >
                <textarea
                  className="css-37"
                  defaultValue="Warning"
                  onInput={[Function]}
                  rows={8}
                />
              </glamorous(glamorous(textarea))>
              <Underlay
                variant="warning"
              >
                <div
                  className="css-51"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
    <TextArea
      defaultValue="Danger"
      variant="danger"
    >
      <TextArea
        control={[Function]}
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Danger",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
        variant="danger"
      >
        <FauxControl
          className="css-0"
          control={[Function]}
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Danger",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="danger"
        >
          <FauxControl
            className="css-0"
            control={[Function]}
            variant="danger"
          >
            <div
              className="css-52"
            >
              <glamorous(glamorous(textarea))
                controlPropsIn={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Danger",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                controlRef={[Function]}
                defaultValue="Danger"
                iconEnd={null}
                innerRef={[Function]}
                key="control"
                onInput={[Function]}
                resizeable={true}
                rows={8}
                size="large"
                variant="danger"
              >
                <textarea
                  className="css-62"
                  defaultValue="Danger"
                  onInput={[Function]}
                  rows={8}
                />
              </glamorous(glamorous(textarea))>
              <Underlay
                variant="danger"
              >
                <div
                  className="css-76"
                />
              </Underlay>
            </div>
          </FauxControl>
        </FauxControl>
      </TextArea>
    </TextArea>
  </div>
</glamorous(div)>
`;
