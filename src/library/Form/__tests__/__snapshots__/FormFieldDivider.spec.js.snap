// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormFieldDivider demo examples Snapshots: basic 1`] = `
.emotion-9 {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5rem 0;
}

.emotion-28[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875rem;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.5rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 1rem;
  padding-right: 1rem;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-28"
    >
      <FormField
        label="Old Password"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-1-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-1-labelText"
                  >
                    Old Password
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-1-control"
                size="large"
                type="password"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "password",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-4"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "password",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "password",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <FauxControl
                                className="emotion-4"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-describedby": undefined,
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "password",
                                  }
                                }
                                size="large"
                              >
                                <FauxControl
                                  className="emotion-4"
                                  control={[Function]}
                                >
                                  <div
                                    className="emotion-3"
                                  >
                                    <Control
                                      controlPropsIn={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "password",
                                        }
                                      }
                                      key="control"
                                      size="large"
                                      type="password"
                                    >
                                      <input
                                        className="emotion-1"
                                        size="large"
                                        type="password"
                                      />
                                    </Control>
                                    <Underlay>
                                      <div
                                        className="emotion-2"
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
      <FormFieldDivider>
        <FormFieldDivider
          role="separator"
        >
          <div
            className="emotion-9"
            role="separator"
          />
        </FormFieldDivider>
      </FormFieldDivider>
      <FormField
        label="New Password"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-2-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-2-labelText"
                  >
                    New Password
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-2-control"
                size="large"
                type="password"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "password",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-4"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "password",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "password",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <FauxControl
                                className="emotion-4"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-describedby": undefined,
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "password",
                                  }
                                }
                                size="large"
                              >
                                <FauxControl
                                  className="emotion-4"
                                  control={[Function]}
                                >
                                  <div
                                    className="emotion-3"
                                  >
                                    <Control
                                      controlPropsIn={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "password",
                                        }
                                      }
                                      key="control"
                                      size="large"
                                      type="password"
                                    >
                                      <input
                                        className="emotion-1"
                                        size="large"
                                        type="password"
                                      />
                                    </Control>
                                    <Underlay>
                                      <div
                                        className="emotion-2"
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
      <FormField
        label="Repeat New Password"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-3-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-3-labelText"
                  >
                    Repeat New Password
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-3-control"
                size="large"
                type="password"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "password",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-4"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "password",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "password",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <Fragment>
                          <DocumentFontSizeProvider>
                            <ThemeProvider>
                              <FauxControl
                                className="emotion-4"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-describedby": undefined,
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "password",
                                  }
                                }
                                size="large"
                              >
                                <FauxControl
                                  className="emotion-4"
                                  control={[Function]}
                                >
                                  <div
                                    className="emotion-3"
                                  >
                                    <Control
                                      controlPropsIn={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "password",
                                        }
                                      }
                                      key="control"
                                      size="large"
                                      type="password"
                                    >
                                      <input
                                        className="emotion-1"
                                        size="large"
                                        type="password"
                                      />
                                    </Control>
                                    <Underlay>
                                      <div
                                        className="emotion-2"
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </ThemeProvider>
                          </DocumentFontSizeProvider>
                          <EventListener
                            listeners={
                              Array [
                                Object {
                                  "event": "DOMContentLoaded",
                                  "handler": [Function],
                                  "target": "document",
                                },
                              ]
                            }
                          />
                        </Fragment>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;
