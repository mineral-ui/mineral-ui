// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormField demo examples basic 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-31,
[data-css-31] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-31 *,
[data-css-31] *,
.css-31 *::before,
[data-css-31] *::before,
.css-31 *::after,
[data-css-31] *::after {
  box-sizing: inherit;
}

.css-31:hover > div:last-child,
[data-css-31]:hover > div:last-child,
.css-31[data-simulate-hover] > div:last-child,
[data-css-31][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-31:focus > div:last-child,
[data-css-31]:focus > div:last-child,
.css-31[data-simulate-focus] > div:last-child,
[data-css-31][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-31:active > div:last-child,
[data-css-31]:active > div:last-child,
.css-31[data-simulate-active] > div:last-child,
[data-css-31][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-41,
[data-css-41] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-41::placeholder,
[data-css-41]::placeholder,
.css-41[data-simulate-placeholder],
[data-css-41][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41::-ms-input-placeholder,
[data-css-41]::-ms-input-placeholder,
.css-41[data-simulate-msinputplaceholder],
[data-css-41][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41:-ms-input-placeholder,
[data-css-41]:-ms-input-placeholder,
.css-41[data-simulate-msinputplaceholder],
[data-css-41][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-41::-ms-clear,
[data-css-41]::-ms-clear,
.css-41[data-simulate-msclear],
[data-css-41][data-simulate-msclear] {
  display: none;
}

.css-41:focus ~ div:last-child,
[data-css-41]:focus ~ div:last-child,
.css-41[data-simulate-focus] ~ div:last-child,
[data-css-41][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<glamorous(div)>
  <div
    className="css-1p1xtzc"
  >
    <FormField
      input={[Function]}
      label="Name"
      requiredText="Required"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-2-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-2-labelText"
                >
                  Name
                </span>
              </div>
            </glamorous(div)>
            <TextInput
              key="formField-2-control"
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-2"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                  >
                    <div
                      className="css-4"
                    >
                      <glamorous(glamorous(input))
                        controlPropsIn={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        key="control"
                        size="large"
                        type="text"
                      >
                        <input
                          className="css-15"
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay>
                        <div
                          className="css-29"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
        </div>
      </FormField>
    </FormField>
    <FormField
      label="Description"
      requiredText="Required"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-3-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-3-labelText"
                >
                  Description
                </span>
              </div>
            </glamorous(div)>
            <TextArea
              key="formField-3-control"
            >
              <TextArea
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <FauxControl
                  className="css-30"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <FauxControl
                    className="css-30"
                    control={[Function]}
                  >
                    <div
                      className="css-31"
                    >
                      <glamorous(glamorous(textarea))
                        controlPropsIn={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 8,
                            "size": "large",
                          }
                        }
                        controlRef={[Function]}
                        iconEnd={null}
                        innerRef={[Function]}
                        key="control"
                        onInput={[Function]}
                        resizeable={true}
                        rows={8}
                        size="large"
                      >
                        <textarea
                          className="css-41"
                          onInput={[Function]}
                          rows={8}
                        />
                      </glamorous(glamorous(textarea))>
                      <Underlay>
                        <div
                          className="css-29"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextArea>
            </TextArea>
          </label>
        </div>
      </FormField>
    </FormField>
  </div>
</glamorous(div)>
`;

exports[`FormField demo examples caption 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<FormField
  caption="This is help text"
  input={[Function]}
  label="Name"
  requiredText="Required"
>
  <FormField>
    <div
      className="css-0"
    >
      <label>
        <glamorous(div)
          key="formField-7-textWrapper"
        >
          <div
            className="css-1"
          >
            <span
              id="formField-7-labelText"
            >
              Name
            </span>
          </div>
        </glamorous(div)>
        <TextInput
          aria-describedby="formField-7-caption"
          key="formField-7-control"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-describedby": "formField-7-caption",
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <FauxControl
              className="css-2"
              control={[Function]}
              controlProps={
                Object {
                  "aria-describedby": "formField-7-caption",
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <FauxControl
                className="css-2"
                control={[Function]}
              >
                <div
                  className="css-4"
                >
                  <glamorous(glamorous(input))
                    aria-describedby="formField-7-caption"
                    controlPropsIn={
                      Object {
                        "aria-describedby": "formField-7-caption",
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    key="control"
                    size="large"
                    type="text"
                  >
                    <input
                      aria-describedby="formField-7-caption"
                      className="css-15"
                      size="large"
                      type="text"
                    />
                  </glamorous(glamorous(input))>
                  <Underlay>
                    <div
                      className="css-29"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
      </label>
      <glamorous(div)
        caption="This is help text"
        id="formField-7-caption"
      >
        <div
          className="css-30"
          id="formField-7-caption"
        >
          This is help text
        </div>
      </glamorous(div)>
    </div>
  </FormField>
</FormField>
`;

exports[`FormField demo examples hide-label 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  border: 0px;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -webkit-clip-path: inset(50%);
}

.css-30 > *,
[data-css-30] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

<glamorous(div)>
  <div
    className="css-1p1xtzc"
  >
    <FormField
      input={[Function]}
      label="Address"
      placeholder="1234 Main St"
      requiredText="Required"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-14-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-14-labelText"
                >
                  Address
                </span>
              </div>
            </glamorous(div)>
            <TextInput
              key="formField-14-control"
              placeholder="1234 Main St"
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "placeholder": "1234 Main St",
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-2"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "placeholder": "1234 Main St",
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                  >
                    <div
                      className="css-4"
                    >
                      <glamorous(glamorous(input))
                        controlPropsIn={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "placeholder": "1234 Main St",
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        key="control"
                        placeholder="1234 Main St"
                        size="large"
                        type="text"
                      >
                        <input
                          className="css-15"
                          placeholder="1234 Main St"
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay>
                        <div
                          className="css-29"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
        </div>
      </FormField>
    </FormField>
    <FormField
      hideLabel={true}
      input={[Function]}
      label="Address Line 2"
      placeholder="Apt 101"
      requiredText="Required"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              hideLabel={true}
              key="formField-15-textWrapper"
            >
              <div
                className="css-30"
              >
                <span
                  id="formField-15-labelText"
                >
                  Address Line 2
                </span>
              </div>
            </glamorous(div)>
            <TextInput
              key="formField-15-control"
              placeholder="Apt 101"
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "placeholder": "Apt 101",
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-2"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "placeholder": "Apt 101",
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                  >
                    <div
                      className="css-4"
                    >
                      <glamorous(glamorous(input))
                        controlPropsIn={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "placeholder": "Apt 101",
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        key="control"
                        placeholder="Apt 101"
                        size="large"
                        type="text"
                      >
                        <input
                          className="css-15"
                          placeholder="Apt 101"
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay>
                        <div
                          className="css-29"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
        </div>
      </FormField>
    </FormField>
  </div>
</glamorous(div)>
`;

exports[`FormField demo examples required 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  color: #db2929;
  font-size: 0.6875em;
  font-weight: 400;
}

<glamorous(div)>
  <div
    className="css-1p1xtzc"
  >
    <FormField
      input={[Function]}
      label="Name"
      required={true}
      requiredText="Required"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-4-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-4-labelText"
                >
                  Name
                </span>
                <glamorous(span)>
                  <span
                    className="css-30"
                  >
                    Required
                  </span>
                </glamorous(span)>
              </div>
            </glamorous(div)>
            <TextInput
              key="formField-4-control"
              required={true}
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": true,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": true,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-2"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                  >
                    <div
                      className="css-4"
                    >
                      <glamorous(glamorous(input))
                        aria-required={true}
                        controlPropsIn={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": true,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": true,
                            "type": "text",
                          }
                        }
                        key="control"
                        required={true}
                        size="large"
                        type="text"
                      >
                        <input
                          aria-required={true}
                          className="css-15"
                          required={true}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay>
                        <div
                          className="css-29"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
        </div>
      </FormField>
    </FormField>
    <FormField
      input={[Function]}
      label="Nombre"
      required={true}
      requiredText="Necesario"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-5-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-5-labelText"
                >
                  Nombre
                </span>
                <glamorous(span)>
                  <span
                    className="css-30"
                  >
                    Necesario
                  </span>
                </glamorous(span)>
              </div>
            </glamorous(div)>
            <TextInput
              key="formField-5-control"
              required={true}
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": true,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": true,
                    "type": "text",
                  }
                }
                size="large"
              >
                <FauxControl
                  className="css-2"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                  >
                    <div
                      className="css-4"
                    >
                      <glamorous(glamorous(input))
                        aria-required={true}
                        controlPropsIn={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": true,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": true,
                            "type": "text",
                          }
                        }
                        key="control"
                        required={true}
                        size="large"
                        type="text"
                      >
                        <input
                          aria-required={true}
                          className="css-15"
                          required={true}
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <Underlay>
                        <div
                          className="css-29"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
        </div>
      </FormField>
    </FormField>
  </div>
</glamorous(div)>
`;

exports[`FormField demo examples rtl 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-16,
[data-css-16] {
  color: #db2929;
  font-size: 0.6875em;
  font-weight: 400;
}

.css-17,
[data-css-17] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  transform: scaleX(-1);
  width: 1.5em;
  -webkit-transform: scaleX(-1);
}

.css-18,
[data-css-18] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-18::placeholder,
[data-css-18]::placeholder,
.css-18[data-simulate-placeholder],
[data-css-18][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-18::-ms-input-placeholder,
[data-css-18]::-ms-input-placeholder,
.css-18[data-simulate-msinputplaceholder],
[data-css-18][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-18:-ms-input-placeholder,
[data-css-18]:-ms-input-placeholder,
.css-18[data-simulate-msinputplaceholder],
[data-css-18][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-18::-ms-clear,
[data-css-18]::-ms-clear,
.css-18[data-simulate-msclear],
[data-css-18][data-simulate-msclear] {
  display: none;
}

.css-18:focus ~ div:last-child,
[data-css-18]:focus ~ div:last-child,
.css-18[data-simulate-focus] ~ div:last-child,
[data-css-18][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <FormField
        defaultValue="مرحبا بالعالم"
        iconStart={<IconBackspace />}
        input={[Function]}
        label="نموذج"
        required={true}
        requiredText="مطلوب"
      >
        <FormField>
          <div
            className="css-0"
          >
            <label>
              <glamorous(div)
                key="formField-17-textWrapper"
              >
                <div
                  className="css-1"
                >
                  <span
                    id="formField-17-labelText"
                  >
                    نموذج
                  </span>
                  <glamorous(span)>
                    <span
                      className="css-16"
                    >
                      مطلوب
                    </span>
                  </glamorous(span)>
                </div>
              </glamorous(div)>
              <TextInput
                defaultValue="مرحبا بالعالم"
                iconStart={<IconBackspace />}
                key="formField-17-control"
                required={true}
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  iconStart={<IconBackspace />}
                  size="large"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": undefined,
                        "defaultValue": "مرحبا بالعالم",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                      }
                    }
                    iconStart={<IconBackspace />}
                    size="large"
                  >
                    <FauxControl
                      className="css-2"
                      control={[Function]}
                    >
                      <div
                        className="css-4"
                      >
                        <IconBackspace
                          key="iconStart"
                          size="1.5em"
                        >
                          <Icon
                            rtl={true}
                            size="1.5em"
                          >
                            <glamorous(svg)
                              aria-hidden={true}
                              role="img"
                              rtl={true}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="css-17"
                                role="img"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                  />
                                </g>
                              </svg>
                            </glamorous(svg)>
                          </Icon>
                        </IconBackspace>
                        <glamorous(glamorous(input))
                          aria-required={true}
                          controlPropsIn={
                            Object {
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-required": true,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": true,
                              "type": "text",
                            }
                          }
                          defaultValue="مرحبا بالعالم"
                          iconStart={<IconBackspace />}
                          key="control"
                          required={true}
                          size="large"
                          type="text"
                        >
                          <input
                            aria-required={true}
                            className="css-18"
                            defaultValue="مرحبا بالعالم"
                            required={true}
                            size="large"
                            type="text"
                          />
                        </glamorous(glamorous(input))>
                        <Underlay>
                          <div
                            className="css-15"
                          />
                        </Underlay>
                      </div>
                    </FauxControl>
                  </FauxControl>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`FormField demo examples secondaryText 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  color: #58606e;
  font-size: 0.6875em;
  font-weight: 400;
}

<FormField
  input={[Function]}
  label="Name"
  requiredText="Required"
  secondaryText="Optional"
>
  <FormField>
    <div
      className="css-0"
    >
      <label>
        <glamorous(div)
          key="formField-6-textWrapper"
        >
          <div
            className="css-1"
          >
            <span
              id="formField-6-labelText"
            >
              Name
            </span>
            <glamorous(span)
              secondaryText="Optional"
            >
              <span
                className="css-30"
              >
                Optional
              </span>
            </glamorous(span)>
          </div>
        </glamorous(div)>
        <TextInput
          key="formField-6-control"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-describedby": undefined,
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <FauxControl
              className="css-2"
              control={[Function]}
              controlProps={
                Object {
                  "aria-describedby": undefined,
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <FauxControl
                className="css-2"
                control={[Function]}
              >
                <div
                  className="css-4"
                >
                  <glamorous(glamorous(input))
                    controlPropsIn={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    key="control"
                    size="large"
                    type="text"
                  >
                    <input
                      className="css-15"
                      size="large"
                      type="text"
                    />
                  </glamorous(glamorous(input))>
                  <Underlay>
                    <div
                      className="css-29"
                    />
                  </Underlay>
                </div>
              </FauxControl>
            </FauxControl>
          </TextInput>
        </TextInput>
      </label>
    </div>
  </FormField>
</FormField>
`;

exports[`FormField demo examples validation 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #2e6fd9;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #c8d1e0;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #2e6fd9;
}

.css-29,
[data-css-29] {
  background-color: #fff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-30,
[data-css-30] {
  color: #db2929;
  font-size: 0.6875em;
  font-weight: 400;
}

.css-31,
[data-css-31] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  min-width: 2.5em;
  padding: 0 0.5em;
  text-decoration: none;
  vertical-align: middle;
}

.css-31 *,
[data-css-31] *,
.css-31 *::before,
[data-css-31] *::before,
.css-31 *::after,
[data-css-31] *::after {
  box-sizing: inherit;
}

.css-31:focus,
[data-css-31]:focus,
.css-31[data-simulate-focus],
[data-css-31][data-simulate-focus] {
  background-color: #ebeff5;
  border-color: #fff;
  box-shadow: 0 0 0 1px #2e6fd9;
  color: #333840;
  text-decoration: none;
}

.css-31:hover,
[data-css-31]:hover,
.css-31[data-simulate-hover],
[data-css-31][data-simulate-hover] {
  background-color: #f5f7fa;
  color: #333840;
  text-decoration: none;
}

.css-31:active,
[data-css-31]:active,
.css-31[data-simulate-active],
[data-css-31][data-simulate-active] {
  background-color: #dde3ed;
  color: #333840;
}

.css-31::-moz-focus-inner,
[data-css-31]::-moz-focus-inner,
.css-31[data-simulate-mozfocusinner],
[data-css-31][data-simulate-mozfocusinner] {
  border: 0;
}

.css-31 [role="img"],
[data-css-31] [role="img"] {
  box-sizing: content-box;
  fill: #2e6fd9;
  display: block;
}

.css-31 [role="img"]:first-child,
[data-css-31] [role="img"]:first-child {
  margin-right: 0.5em;
}

.css-31 [role="img"]:last-child,
[data-css-31] [role="img"]:last-child {
  margin-left: 0.5em;
}

.css-31 [role="img"]:only-child,
[data-css-31] [role="img"]:only-child {
  margin: 0;
}

.css-45,
[data-css-45] {
  align-items: center;
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
  justify-content: center;
  max-height: 100%;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
}

.css-46,
[data-css-46] {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.css-46:first-child,
[data-css-46]:first-child,
.css-46[data-simulate-firstchild],
[data-css-46][data-simulate-firstchild] {
  padding-left: 0.5714285714285714em;
}

.css-46:last-child,
[data-css-46]:last-child,
.css-46[data-simulate-lastchild],
[data-css-46][data-simulate-lastchild] {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <glamorous(div)>
      <div
        className="css-1p1xtzc"
      >
        <FormField
          input={[Function]}
          inputRef={[Function]}
          label="Example"
          onChange={[Function]}
          required={true}
          requiredText="Required"
          value=""
        >
          <FormField>
            <div
              className="css-0"
            >
              <label>
                <glamorous(div)
                  key="formField-16-textWrapper"
                >
                  <div
                    className="css-1"
                  >
                    <span
                      id="formField-16-labelText"
                    >
                      Example
                    </span>
                    <glamorous(span)>
                      <span
                        className="css-30"
                      >
                        Required
                      </span>
                    </glamorous(span)>
                  </div>
                </glamorous(div)>
                <TextInput
                  inputRef={[Function]}
                  key="formField-16-control"
                  onChange={[Function]}
                  required={true}
                  value=""
                >
                  <TextInput
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onChange": [Function],
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                        "value": "",
                      }
                    }
                    size="large"
                  >
                    <FauxControl
                      className="css-2"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onChange": [Function],
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                          "value": "",
                        }
                      }
                      size="large"
                    >
                      <FauxControl
                        className="css-2"
                        control={[Function]}
                      >
                        <div
                          className="css-4"
                        >
                          <glamorous(glamorous(input))
                            aria-required={true}
                            controlPropsIn={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "controlRef": [Function],
                                "disabled": undefined,
                                "onChange": [Function],
                                "readOnly": undefined,
                                "required": true,
                                "type": "text",
                                "value": "",
                              }
                            }
                            controlRef={[Function]}
                            innerRef={[Function]}
                            key="control"
                            onChange={[Function]}
                            required={true}
                            size="large"
                            type="text"
                            value=""
                          >
                            <input
                              aria-required={true}
                              className="css-15"
                              onChange={[Function]}
                              required={true}
                              size="large"
                              type="text"
                              value=""
                            />
                          </glamorous(glamorous(input))>
                          <Underlay>
                            <div
                              className="css-29"
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </TextInput>
                </TextInput>
              </label>
            </div>
          </FormField>
        </FormField>
        <Button
          element="button"
          onClick={[Function]}
          size="large"
          type="button"
          variant="regular"
        >
          <glamorous(button)
            element="button"
            onClick={[Function]}
            size="large"
            text="Validate"
            type="button"
            variant="regular"
          >
            <button
              className="css-31"
              onClick={[Function]}
              type="button"
            >
              <glamorous(span)>
                <span
                  className="css-45"
                >
                  <glamorous(span)
                    size="large"
                  >
                    <span
                      className="css-46"
                    >
                      Validate
                    </span>
                  </glamorous(span)>
                </span>
              </glamorous(span)>
            </button>
          </glamorous(button)>
        </Button>
      </div>
    </glamorous(div)>
  </MyForm>
</Component>
`;

exports[`FormField demo examples variants 1`] = `
.css-0,
[data-css-0] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.css-0 *,
[data-css-0] *,
.css-0 *::before,
[data-css-0] *::before,
.css-0 *::after,
[data-css-0] *::after {
  box-sizing: inherit;
}

.css-1,
[data-css-1] {
  color: #58606e;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  justify-content: space-between;
  margin-bottom: 0.5em;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
}

.css-1 > *,
[data-css-1] > * {
  align-self: flex-end;
  display: inline-block;
  -webkit-align-self: flex-end;
}

.css-2,
[data-css-2] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-2 [role="img"],
[data-css-2] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-2 [role="img"]:last-of-type,
[data-css-2] [role="img"]:last-of-type {
  fill: #06783f;
}

.css-4,
[data-css-4] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-4 *,
[data-css-4] *,
.css-4 *::before,
[data-css-4] *::before,
.css-4 *::after,
[data-css-4] *::after {
  box-sizing: inherit;
}

.css-4:hover > div:last-child,
[data-css-4]:hover > div:last-child,
.css-4[data-simulate-hover] > div:last-child,
[data-css-4][data-simulate-hover] > div:last-child {
  border-color: #0a8f4c;
}

.css-4:focus > div:last-child,
[data-css-4]:focus > div:last-child,
.css-4[data-simulate-focus] > div:last-child,
[data-css-4][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.css-4:active > div:last-child,
[data-css-4]:active > div:last-child,
.css-4[data-simulate-active] > div:last-child,
[data-css-4][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.css-4 [role="img"],
[data-css-4] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-4 [role="img"]:last-of-type,
[data-css-4] [role="img"]:last-of-type {
  fill: #06783f;
}

.css-15,
[data-css-15] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-15::placeholder,
[data-css-15]::placeholder,
.css-15[data-simulate-placeholder],
[data-css-15][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-input-placeholder,
[data-css-15]::-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15:-ms-input-placeholder,
[data-css-15]:-ms-input-placeholder,
.css-15[data-simulate-msinputplaceholder],
[data-css-15][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-15::-ms-clear,
[data-css-15]::-ms-clear,
.css-15[data-simulate-msclear],
[data-css-15][data-simulate-msclear] {
  display: none;
}

.css-15:focus ~ div:last-child,
[data-css-15]:focus ~ div:last-child,
.css-15[data-simulate-focus] ~ div:last-child,
[data-css-15][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #10a35a;
}

.css-29,
[data-css-29] {
  fill: #8e99ab;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.css-30,
[data-css-30] {
  background-color: #fff;
  border-color: #10a35a;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-31,
[data-css-31] {
  color: #06783f;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

.css-32,
[data-css-32] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-32 [role="img"],
[data-css-32] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-32 [role="img"]:last-of-type,
[data-css-32] [role="img"]:last-of-type {
  fill: #cf4615;
}

.css-34,
[data-css-34] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-34 *,
[data-css-34] *,
.css-34 *::before,
[data-css-34] *::before,
.css-34 *::after,
[data-css-34] *::after {
  box-sizing: inherit;
}

.css-34:hover > div:last-child,
[data-css-34]:hover > div:last-child,
.css-34[data-simulate-hover] > div:last-child,
[data-css-34][data-simulate-hover] > div:last-child {
  border-color: #cf4615;
}

.css-34:focus > div:last-child,
[data-css-34]:focus > div:last-child,
.css-34[data-simulate-focus] > div:last-child,
[data-css-34][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.css-34:active > div:last-child,
[data-css-34]:active > div:last-child,
.css-34[data-simulate-active] > div:last-child,
[data-css-34][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.css-34 [role="img"],
[data-css-34] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-34 [role="img"]:last-of-type,
[data-css-34] [role="img"]:last-of-type {
  fill: #cf4615;
}

.css-45,
[data-css-45] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-45::placeholder,
[data-css-45]::placeholder,
.css-45[data-simulate-placeholder],
[data-css-45][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-45::-ms-input-placeholder,
[data-css-45]::-ms-input-placeholder,
.css-45[data-simulate-msinputplaceholder],
[data-css-45][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-45:-ms-input-placeholder,
[data-css-45]:-ms-input-placeholder,
.css-45[data-simulate-msinputplaceholder],
[data-css-45][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-45::-ms-clear,
[data-css-45]::-ms-clear,
.css-45[data-simulate-msclear],
[data-css-45][data-simulate-msclear] {
  display: none;
}

.css-45:focus ~ div:last-child,
[data-css-45]:focus ~ div:last-child,
.css-45[data-simulate-focus] ~ div:last-child,
[data-css-45][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #e05b2b;
}

.css-59,
[data-css-59] {
  background-color: #fff;
  border-color: #e05b2b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-60,
[data-css-60] {
  color: #cf4615;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

.css-61,
[data-css-61] {
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-61 [role="img"],
[data-css-61] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-61 [role="img"]:last-of-type,
[data-css-61] [role="img"]:last-of-type {
  fill: #db2929;
}

.css-63,
[data-css-63] {
  box-sizing: border-box;
  color: #333840;
  font-family: Open Sans, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 100%;
  -webkit-box-align: center;
  -webkit-align-items: center;
}

.css-63 *,
[data-css-63] *,
.css-63 *::before,
[data-css-63] *::before,
.css-63 *::after,
[data-css-63] *::after {
  box-sizing: inherit;
}

.css-63:hover > div:last-child,
[data-css-63]:hover > div:last-child,
.css-63[data-simulate-hover] > div:last-child,
[data-css-63][data-simulate-hover] > div:last-child {
  border-color: #c71818;
}

.css-63:focus > div:last-child,
[data-css-63]:focus > div:last-child,
.css-63[data-simulate-focus] > div:last-child,
[data-css-63][data-simulate-focus] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.css-63:active > div:last-child,
[data-css-63]:active > div:last-child,
.css-63[data-simulate-active] > div:last-child,
[data-css-63][data-simulate-active] > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.css-63 [role="img"],
[data-css-63] [role="img"] {
  display: block;
  fill: #c8d1e0;
  flex: 0 0 auto;
  margin: 0 0.5em;
  -webkit-flex: 0 0 auto;
}

.css-63 [role="img"]:last-of-type,
[data-css-63] [role="img"]:last-of-type {
  fill: #db2929;
}

.css-74,
[data-css-74] {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
  -webkit-flex: 1 1 auto;
}

.css-74::placeholder,
[data-css-74]::placeholder,
.css-74[data-simulate-placeholder],
[data-css-74][data-simulate-placeholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-74::-ms-input-placeholder,
[data-css-74]::-ms-input-placeholder,
.css-74[data-simulate-msinputplaceholder],
[data-css-74][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-74:-ms-input-placeholder,
[data-css-74]:-ms-input-placeholder,
.css-74[data-simulate-msinputplaceholder],
[data-css-74][data-simulate-msinputplaceholder] {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.css-74::-ms-clear,
[data-css-74]::-ms-clear,
.css-74[data-simulate-msclear],
[data-css-74][data-simulate-msclear] {
  display: none;
}

.css-74:focus ~ div:last-child,
[data-css-74]:focus ~ div:last-child,
.css-74[data-simulate-focus] ~ div:last-child,
[data-css-74][data-simulate-focus] ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #fff, 0 0 0 2px #db2929;
}

.css-88,
[data-css-88] {
  background-color: #fff;
  border-color: #db2929;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.css-89,
[data-css-89] {
  color: #db2929;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<glamorous(div)>
  <div
    className="css-1p1xtzc"
  >
    <FormField
      caption="This is help text"
      input={[Function]}
      label="Success"
      requiredText="Required"
      variant="success"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-8-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-8-labelText"
                >
                  Success
                </span>
              </div>
            </glamorous(div)>
            <TextInput
              aria-describedby="formField-8-caption"
              key="formField-8-control"
              variant="success"
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": "formField-8-caption",
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
                variant="success"
              >
                <FauxControl
                  className="css-2"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-8-caption",
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="success"
                >
                  <FauxControl
                    className="css-2"
                    control={[Function]}
                    variant="success"
                  >
                    <div
                      className="css-4"
                    >
                      <glamorous(glamorous(input))
                        aria-describedby="formField-8-caption"
                        controlPropsIn={
                          Object {
                            "aria-describedby": "formField-8-caption",
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        key="control"
                        size="large"
                        type="text"
                        variant="success"
                      >
                        <input
                          aria-describedby="formField-8-caption"
                          className="css-15"
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <IconSuccess
                        key="iconEnd"
                        size="1.5em"
                      >
                        <Icon
                          rtl={false}
                          size="1.5em"
                        >
                          <glamorous(svg)
                            aria-hidden={true}
                            role="img"
                            rtl={false}
                            size="1.5em"
                            viewBox="0 0 24 24"
                          >
                            <svg
                              aria-hidden={true}
                              className="css-29"
                              role="img"
                              viewBox="0 0 24 24"
                            >
                              <g>
                                <path
                                  d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                />
                              </g>
                            </svg>
                          </glamorous(svg)>
                        </Icon>
                      </IconSuccess>
                      <Underlay
                        variant="success"
                      >
                        <div
                          className="css-30"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
          <glamorous(div)
            caption="This is help text"
            id="formField-8-caption"
            variant="success"
          >
            <div
              className="css-31"
              id="formField-8-caption"
            >
              This is help text
            </div>
          </glamorous(div)>
        </div>
      </FormField>
    </FormField>
    <FormField
      caption="This is help text"
      input={[Function]}
      label="Warning"
      requiredText="Required"
      variant="warning"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-10-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-10-labelText"
                >
                  Warning
                </span>
              </div>
            </glamorous(div)>
            <TextInput
              aria-describedby="formField-10-caption"
              key="formField-10-control"
              variant="warning"
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": "formField-10-caption",
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
                variant="warning"
              >
                <FauxControl
                  className="css-32"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-10-caption",
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="warning"
                >
                  <FauxControl
                    className="css-32"
                    control={[Function]}
                    variant="warning"
                  >
                    <div
                      className="css-34"
                    >
                      <glamorous(glamorous(input))
                        aria-describedby="formField-10-caption"
                        controlPropsIn={
                          Object {
                            "aria-describedby": "formField-10-caption",
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        key="control"
                        size="large"
                        type="text"
                        variant="warning"
                      >
                        <input
                          aria-describedby="formField-10-caption"
                          className="css-45"
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <IconWarning
                        key="iconEnd"
                        size="1.5em"
                      >
                        <Icon
                          rtl={false}
                          size="1.5em"
                        >
                          <glamorous(svg)
                            aria-hidden={true}
                            role="img"
                            rtl={false}
                            size="1.5em"
                            viewBox="0 0 24 24"
                          >
                            <svg
                              aria-hidden={true}
                              className="css-29"
                              role="img"
                              viewBox="0 0 24 24"
                            >
                              <g>
                                <path
                                  d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                />
                              </g>
                            </svg>
                          </glamorous(svg)>
                        </Icon>
                      </IconWarning>
                      <Underlay
                        variant="warning"
                      >
                        <div
                          className="css-59"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
          <glamorous(div)
            caption="This is help text"
            id="formField-10-caption"
            variant="warning"
          >
            <div
              className="css-60"
              id="formField-10-caption"
            >
              This is help text
            </div>
          </glamorous(div)>
        </div>
      </FormField>
    </FormField>
    <FormField
      caption="This is help text"
      input={[Function]}
      label="Danger"
      requiredText="Required"
      variant="danger"
    >
      <FormField>
        <div
          className="css-0"
        >
          <label>
            <glamorous(div)
              key="formField-12-textWrapper"
            >
              <div
                className="css-1"
              >
                <span
                  id="formField-12-labelText"
                >
                  Danger
                </span>
              </div>
            </glamorous(div)>
            <TextInput
              aria-describedby="formField-12-caption"
              key="formField-12-control"
              variant="danger"
            >
              <TextInput
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": "formField-12-caption",
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
                variant="danger"
              >
                <FauxControl
                  className="css-61"
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-12-caption",
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="danger"
                >
                  <FauxControl
                    className="css-61"
                    control={[Function]}
                    variant="danger"
                  >
                    <div
                      className="css-63"
                    >
                      <glamorous(glamorous(input))
                        aria-describedby="formField-12-caption"
                        controlPropsIn={
                          Object {
                            "aria-describedby": "formField-12-caption",
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        key="control"
                        size="large"
                        type="text"
                        variant="danger"
                      >
                        <input
                          aria-describedby="formField-12-caption"
                          className="css-74"
                          size="large"
                          type="text"
                        />
                      </glamorous(glamorous(input))>
                      <IconDanger
                        key="iconEnd"
                        size="1.5em"
                      >
                        <Icon
                          rtl={false}
                          size="1.5em"
                        >
                          <glamorous(svg)
                            aria-hidden={true}
                            role="img"
                            rtl={false}
                            size="1.5em"
                            viewBox="0 0 24 24"
                          >
                            <svg
                              aria-hidden={true}
                              className="css-29"
                              role="img"
                              viewBox="0 0 24 24"
                            >
                              <g>
                                <path
                                  d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                />
                              </g>
                            </svg>
                          </glamorous(svg)>
                        </Icon>
                      </IconDanger>
                      <Underlay
                        variant="danger"
                      >
                        <div
                          className="css-88"
                        />
                      </Underlay>
                    </div>
                  </FauxControl>
                </FauxControl>
              </TextInput>
            </TextInput>
          </label>
          <glamorous(div)
            caption="This is help text"
            id="formField-12-caption"
            variant="danger"
          >
            <div
              className="css-89"
              id="formField-12-caption"
            >
              This is help text
            </div>
          </glamorous(div)>
        </div>
      </FormField>
    </FormField>
  </div>
</glamorous(div)>
`;
