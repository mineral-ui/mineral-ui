// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormField demo examples Snapshots: basic 1`] = `
.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-18[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-12:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-12:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-12:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-10 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-18"
    >
      <FormField
        input={[Function]}
        label="Name"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-1-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-1-labelText"
                  >
                    Name
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-1-control"
                size="large"
                type="text"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-4"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                          >
                            <FauxControl
                              className="emotion-4"
                              control={[Function]}
                            >
                              <div
                                className="emotion-3"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    className="emotion-1"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-2"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
      <FormField
        label="Description"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-2-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-2-labelText"
                  >
                    Description
                  </span>
                </div>
              </Styled(div)>
              <TextArea
                key="formField-2-control"
              >
                <TextArea
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <TextArea
                    className="emotion-13"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-13"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      iconEnd={null}
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-13"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 8,
                                "size": "large",
                              }
                            }
                            iconEnd={null}
                            size="large"
                          >
                            <FauxControl
                              className="emotion-13"
                              control={[Function]}
                            >
                              <div
                                className="emotion-12"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "autoSize": undefined,
                                      "controlRef": [Function],
                                      "disabled": undefined,
                                      "onInput": [Function],
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "resizeable": true,
                                      "rows": 8,
                                      "size": "large",
                                    }
                                  }
                                  controlRef={[Function]}
                                  iconEnd={null}
                                  innerRef={[Function]}
                                  key="control"
                                  onInput={[Function]}
                                  resizeable={true}
                                  rows={8}
                                  size="large"
                                >
                                  <textarea
                                    className="emotion-10"
                                    onInput={[Function]}
                                    rows={8}
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-2"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextArea>
                </TextArea>
              </TextArea>
            </label>
          </div>
        </FormField>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`FormField demo examples Snapshots: caption 1`] = `
.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-8 {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<FormField
  caption="This is help text"
  input={[Function]}
  label="Name"
  requiredText="Required"
>
  <FormField>
    <div
      className="emotion-9"
    >
      <label>
        <Styled(div)
          key="formField-11-textWrapper"
        >
          <div
            className="emotion-0"
          >
            <span
              id="formField-11-labelText"
            >
              Name
            </span>
          </div>
        </Styled(div)>
        <TextInput
          aria-describedby="formField-11-caption"
          key="formField-11-control"
          size="large"
          type="text"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-describedby": "formField-11-caption",
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <TextInput
              className="emotion-4"
              control={[Function]}
              controlProps={
                Object {
                  "aria-describedby": "formField-11-caption",
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <Themed(FauxControl)
                className="emotion-4"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": "formField-11-caption",
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": "formField-11-caption",
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <FauxControl
                        className="emotion-4"
                        control={[Function]}
                      >
                        <div
                          className="emotion-3"
                        >
                          <Control
                            aria-describedby="formField-11-caption"
                            controlPropsIn={
                              Object {
                                "aria-describedby": "formField-11-caption",
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            key="control"
                            size="large"
                            type="text"
                          >
                            <input
                              aria-describedby="formField-11-caption"
                              className="emotion-1"
                              size="large"
                              type="text"
                            />
                          </Control>
                          <Underlay>
                            <div
                              className="emotion-2"
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </TextInput>
          </TextInput>
        </TextInput>
      </label>
      <Styled(div)
        caption="This is help text"
        id="formField-11-caption"
      >
        <div
          className="emotion-8"
          id="formField-11-caption"
        >
          This is help text
        </div>
      </Styled(div)>
    </div>
  </FormField>
</FormField>
`;

exports[`FormField demo examples Snapshots: hide-label 1`] = `
.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-18[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-9 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
  border: 0px;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-9 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-18"
    >
      <FormField
        input={[Function]}
        label="Address"
        placeholder="1234 Main St"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                key="formField-25-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-25-labelText"
                  >
                    Address
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-25-control"
                placeholder="1234 Main St"
                size="large"
                type="text"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "placeholder": "1234 Main St",
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-4"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "placeholder": "1234 Main St",
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "placeholder": "1234 Main St",
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "placeholder": "1234 Main St",
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                          >
                            <FauxControl
                              className="emotion-4"
                              control={[Function]}
                            >
                              <div
                                className="emotion-3"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "placeholder": "1234 Main St",
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  placeholder="1234 Main St"
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    className="emotion-1"
                                    placeholder="1234 Main St"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-2"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
      <FormField
        hideLabel={true}
        input={[Function]}
        label="Address Line 2"
        placeholder="Apt 101"
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-8"
          >
            <label>
              <Styled(div)
                hideLabel={true}
                key="formField-26-textWrapper"
              >
                <div
                  className="emotion-9"
                >
                  <span
                    id="formField-26-labelText"
                  >
                    Address Line 2
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-26-control"
                placeholder="Apt 101"
                size="large"
                type="text"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "placeholder": "Apt 101",
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-4"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "placeholder": "Apt 101",
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-4"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "placeholder": "Apt 101",
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "placeholder": "Apt 101",
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                          >
                            <FauxControl
                              className="emotion-4"
                              control={[Function]}
                            >
                              <div
                                className="emotion-3"
                              >
                                <Control
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "placeholder": "Apt 101",
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  placeholder="Apt 101"
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    className="emotion-1"
                                    placeholder="Apt 101"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-2"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`FormField demo examples Snapshots: required 1`] = `
.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-20[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-2 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-2[type="search"] {
  -webkit-appearance: none;
}

.emotion-2[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-0 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-20"
    >
      <FormField
        input={[Function]}
        label="Name"
        required={true}
        requiredText="Required"
      >
        <FormField>
          <div
            className="emotion-9"
          >
            <label>
              <Styled(div)
                key="formField-5-textWrapper"
              >
                <div
                  className="emotion-1"
                >
                  <span
                    id="formField-5-labelText"
                  >
                    Name
                  </span>
                  <Styled(span)>
                    <span
                      className="emotion-0"
                    >
                      Required
                    </span>
                  </Styled(span)>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-5-control"
                required={true}
                size="large"
                type="text"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-5"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-5"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-5"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": true,
                                "type": "text",
                              }
                            }
                            size="large"
                          >
                            <FauxControl
                              className="emotion-5"
                              control={[Function]}
                            >
                              <div
                                className="emotion-4"
                              >
                                <Control
                                  aria-required={true}
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": true,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": true,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  required={true}
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    aria-required={true}
                                    className="emotion-2"
                                    required={true}
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-3"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
      <FormField
        input={[Function]}
        label="Nombre"
        required={true}
        requiredText="Necesario"
      >
        <FormField>
          <div
            className="emotion-9"
          >
            <label>
              <Styled(div)
                key="formField-6-textWrapper"
              >
                <div
                  className="emotion-1"
                >
                  <span
                    id="formField-6-labelText"
                  >
                    Nombre
                  </span>
                  <Styled(span)>
                    <span
                      className="emotion-0"
                    >
                      Necesario
                    </span>
                  </Styled(span)>
                </div>
              </Styled(div)>
              <TextInput
                key="formField-6-control"
                required={true}
                size="large"
                type="text"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <TextInput
                    className="emotion-5"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-5"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-5"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": true,
                                "type": "text",
                              }
                            }
                            size="large"
                          >
                            <FauxControl
                              className="emotion-5"
                              control={[Function]}
                            >
                              <div
                                className="emotion-4"
                              >
                                <Control
                                  aria-required={true}
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": true,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": true,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  required={true}
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    aria-required={true}
                                    className="emotion-2"
                                    required={true}
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-3"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`FormField demo examples Snapshots: rtl 1`] = `
.emotion-10 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-6 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-6 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-5 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-5:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-5:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-0 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-2 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
  width: 1.5em;
}

.emotion-3 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-3[type="search"] {
  -webkit-appearance: none;
}

.emotion-3[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-3::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-ms-clear {
  display: none;
}

.emotion-3:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <FormField
        defaultValue="مرحبا بالعالم"
        iconStart={<IconBackspace />}
        input={[Function]}
        label="نموذج"
        required={true}
        requiredText="مطلوب"
      >
        <FormField>
          <div
            className="emotion-10"
          >
            <label>
              <Styled(div)
                key="formField-31-textWrapper"
              >
                <div
                  className="emotion-1"
                >
                  <span
                    id="formField-31-labelText"
                  >
                    نموذج
                  </span>
                  <Styled(span)>
                    <span
                      className="emotion-0"
                    >
                      مطلوب
                    </span>
                  </Styled(span)>
                </div>
              </Styled(div)>
              <TextInput
                defaultValue="مرحبا بالعالم"
                iconStart={<IconBackspace />}
                key="formField-31-control"
                required={true}
                size="large"
                type="text"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": undefined,
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  iconStart={<IconBackspace />}
                  size="large"
                >
                  <TextInput
                    className="emotion-6"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": undefined,
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": undefined,
                        "defaultValue": "مرحبا بالعالم",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                      }
                    }
                    iconStart={<IconBackspace />}
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-6"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": undefined,
                          "defaultValue": "مرحبا بالعالم",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                        }
                      }
                      iconStart={<IconBackspace />}
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-6"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "controlRef": undefined,
                                "defaultValue": "مرحبا بالعالم",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": true,
                                "type": "text",
                              }
                            }
                            iconStart={<IconBackspace />}
                            size="large"
                          >
                            <FauxControl
                              className="emotion-6"
                              control={[Function]}
                            >
                              <div
                                className="emotion-5"
                              >
                                <IconBackspace
                                  key="iconStart"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={true}
                                    size="1.5em"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={true}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-2"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconBackspace>
                                <Control
                                  aria-required={true}
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": undefined,
                                      "aria-invalid": undefined,
                                      "aria-required": true,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": true,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="مرحبا بالعالم"
                                  iconStart={<IconBackspace />}
                                  key="control"
                                  required={true}
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    aria-required={true}
                                    className="emotion-3"
                                    defaultValue="مرحبا بالعالم"
                                    required={true}
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <Underlay>
                                  <div
                                    className="emotion-4"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
          </div>
        </FormField>
      </FormField>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`FormField demo examples Snapshots: secondaryText 1`] = `
.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-0 {
  color: #58606e;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-2 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-2[type="search"] {
  -webkit-appearance: none;
}

.emotion-2[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<FormField
  input={[Function]}
  label="Name"
  requiredText="Required"
  secondaryText="Optional"
>
  <FormField>
    <div
      className="emotion-9"
    >
      <label>
        <Styled(div)
          key="formField-9-textWrapper"
        >
          <div
            className="emotion-1"
          >
            <span
              id="formField-9-labelText"
            >
              Name
            </span>
            <Styled(span)
              secondaryText="Optional"
            >
              <span
                className="emotion-0"
              >
                Optional
              </span>
            </Styled(span)>
          </div>
        </Styled(div)>
        <TextInput
          key="formField-9-control"
          size="large"
          type="text"
        >
          <TextInput
            control={[Function]}
            controlProps={
              Object {
                "aria-describedby": undefined,
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <TextInput
              className="emotion-5"
              control={[Function]}
              controlProps={
                Object {
                  "aria-describedby": undefined,
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <Themed(FauxControl)
                className="emotion-5"
                control={[Function]}
                controlProps={
                  Object {
                    "aria-describedby": undefined,
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-5"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <FauxControl
                        className="emotion-5"
                        control={[Function]}
                      >
                        <div
                          className="emotion-4"
                        >
                          <Control
                            controlPropsIn={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            key="control"
                            size="large"
                            type="text"
                          >
                            <input
                              className="emotion-2"
                              size="large"
                              type="text"
                            />
                          </Control>
                          <Underlay>
                            <div
                              className="emotion-3"
                            />
                          </Underlay>
                        </div>
                      </FauxControl>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </TextInput>
          </TextInput>
        </TextInput>
      </label>
    </div>
  </FormField>
</FormField>
`;

exports[`FormField demo examples Snapshots: validation 1`] = `
.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-13[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-2 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-2[type="search"] {
  -webkit-appearance: none;
}

.emotion-2[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-0 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-12:focus {
  background-color: #ebeff5;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-12:hover {
  background-color: #f5f7fa;
  color: #333840;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-12:active {
  background-color: #dde3ed;
  color: #333840;
}

.emotion-12::-moz-focus-inner {
  border: 0;
}

.emotion-12 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
}

.emotion-12 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-12 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-12 [role="img"]:only-child {
  margin: 0;
}

.emotion-11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-10 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-10:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-10:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-13"
        >
          <FormField
            input={[Function]}
            inputRef={[Function]}
            label="Example"
            onChange={[Function]}
            required={true}
            requiredText="Required"
            value=""
          >
            <FormField>
              <div
                className="emotion-9"
              >
                <label>
                  <Styled(div)
                    key="formField-29-textWrapper"
                  >
                    <div
                      className="emotion-1"
                    >
                      <span
                        id="formField-29-labelText"
                      >
                        Example
                      </span>
                      <Styled(span)>
                        <span
                          className="emotion-0"
                        >
                          Required
                        </span>
                      </Styled(span)>
                    </div>
                  </Styled(div)>
                  <TextInput
                    inputRef={[Function]}
                    key="formField-29-control"
                    onChange={[Function]}
                    required={true}
                    size="large"
                    type="text"
                    value=""
                  >
                    <TextInput
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": undefined,
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onChange": [Function],
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                          "value": "",
                        }
                      }
                      size="large"
                    >
                      <TextInput
                        className="emotion-5"
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": true,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "onChange": [Function],
                            "readOnly": undefined,
                            "required": true,
                            "type": "text",
                            "value": "",
                          }
                        }
                        size="large"
                      >
                        <Themed(FauxControl)
                          className="emotion-5"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-required": true,
                              "controlRef": [Function],
                              "disabled": undefined,
                              "onChange": [Function],
                              "readOnly": undefined,
                              "required": true,
                              "type": "text",
                              "value": "",
                            }
                          }
                          size="large"
                        >
                          <ThemeProvider>
                            <ThemeProvider>
                              <FauxControl
                                className="emotion-5"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-describedby": undefined,
                                    "aria-invalid": undefined,
                                    "aria-required": true,
                                    "controlRef": [Function],
                                    "disabled": undefined,
                                    "onChange": [Function],
                                    "readOnly": undefined,
                                    "required": true,
                                    "type": "text",
                                    "value": "",
                                  }
                                }
                                size="large"
                              >
                                <FauxControl
                                  className="emotion-5"
                                  control={[Function]}
                                >
                                  <div
                                    className="emotion-4"
                                  >
                                    <Control
                                      aria-required={true}
                                      controlPropsIn={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": true,
                                          "controlRef": [Function],
                                          "disabled": undefined,
                                          "onChange": [Function],
                                          "readOnly": undefined,
                                          "required": true,
                                          "type": "text",
                                          "value": "",
                                        }
                                      }
                                      controlRef={[Function]}
                                      innerRef={[Function]}
                                      key="control"
                                      onChange={[Function]}
                                      required={true}
                                      size="large"
                                      type="text"
                                      value=""
                                    >
                                      <input
                                        aria-required={true}
                                        className="emotion-2"
                                        onChange={[Function]}
                                        required={true}
                                        size="large"
                                        type="text"
                                        value=""
                                      />
                                    </Control>
                                    <Underlay>
                                      <div
                                        className="emotion-3"
                                      />
                                    </Underlay>
                                  </div>
                                </FauxControl>
                              </FauxControl>
                            </ThemeProvider>
                          </ThemeProvider>
                        </Themed(FauxControl)>
                      </TextInput>
                    </TextInput>
                  </TextInput>
                </label>
              </div>
            </FormField>
          </FormField>
          <Button
            element="button"
            onClick={[Function]}
            size="large"
            type="button"
          >
            <Button
              element="button"
              onClick={[Function]}
              size="large"
              text="Validate"
              type="button"
            >
              <button
                className="emotion-12"
                onClick={[Function]}
                type="button"
              >
                <Styled(span)>
                  <span
                    className="emotion-11"
                  >
                    <Styled(span)
                      size="large"
                    >
                      <span
                        className="emotion-10"
                      >
                        Validate
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Button>
          </Button>
        </div>
      </Styled(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`FormField demo examples Snapshots: variants 1`] = `
.emotion-10 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-33[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #2a854e;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #2a854e;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #3ba164;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-4 [role="img"] {
  color: #2a854e;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #2a854e;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-2 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-9 {
  color: #2a854e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

.emotion-16 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-16 [role="img"] {
  color: #ad5f00;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-16 [role="img"]:last-of-type {
  color: #ad5f00;
}

.emotion-15 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-15 *,
.emotion-15 *::before,
.emotion-15 *::after {
  box-sizing: inherit;
}

.emotion-15:hover > div:last-child {
  border-color: #cf7911;
}

.emotion-15:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-15:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-15 [role="img"] {
  color: #ad5f00;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-15 [role="img"]:last-of-type {
  color: #ad5f00;
}

.emotion-12 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-12[type="search"] {
  -webkit-appearance: none;
}

.emotion-12[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-12::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::-ms-clear {
  display: none;
}

.emotion-12:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-14 {
  background-color: #ffffff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-20 {
  color: #ad5f00;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

.emotion-27 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-27 [role="img"] {
  color: #de1b1b;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-27 [role="img"]:last-of-type {
  color: #de1b1b;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:hover > div:last-child {
  border-color: #f55353;
}

.emotion-26:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-26:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-26 [role="img"] {
  color: #de1b1b;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-26 [role="img"]:last-of-type {
  color: #de1b1b;
}

.emotion-23 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-23[type="search"] {
  -webkit-appearance: none;
}

.emotion-23[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-23::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-ms-clear {
  display: none;
}

.emotion-23:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-25 {
  background-color: #ffffff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-31 {
  color: #de1b1b;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-33"
    >
      <FormField
        caption="This is help text"
        input={[Function]}
        label="Success"
        requiredText="Required"
        variant="success"
      >
        <FormField>
          <div
            className="emotion-10"
          >
            <label>
              <Styled(div)
                key="formField-13-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-13-labelText"
                  >
                    Success
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                aria-describedby="formField-13-caption"
                key="formField-13-control"
                size="large"
                type="text"
                variant="success"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-13-caption",
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="success"
                >
                  <TextInput
                    className="emotion-5"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": "formField-13-caption",
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="success"
                  >
                    <Themed(FauxControl)
                      className="emotion-5"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": "formField-13-caption",
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                      variant="success"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-5"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": "formField-13-caption",
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                            variant="success"
                          >
                            <FauxControl
                              className="emotion-5"
                              control={[Function]}
                              variant="success"
                            >
                              <div
                                className="emotion-4"
                              >
                                <Control
                                  aria-describedby="formField-13-caption"
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": "formField-13-caption",
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  size="large"
                                  type="text"
                                  variant="success"
                                >
                                  <input
                                    aria-describedby="formField-13-caption"
                                    className="emotion-1"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <IconSuccess
                                  key="iconEnd"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={false}
                                    size="1.5em"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-2"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconSuccess>
                                <Underlay
                                  variant="success"
                                >
                                  <div
                                    className="emotion-3"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
            <Styled(div)
              caption="This is help text"
              id="formField-13-caption"
              variant="success"
            >
              <div
                className="emotion-9"
                id="formField-13-caption"
              >
                This is help text
              </div>
            </Styled(div)>
          </div>
        </FormField>
      </FormField>
      <FormField
        caption="This is help text"
        input={[Function]}
        label="Warning"
        requiredText="Required"
        variant="warning"
      >
        <FormField>
          <div
            className="emotion-10"
          >
            <label>
              <Styled(div)
                key="formField-15-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-15-labelText"
                  >
                    Warning
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                aria-describedby="formField-15-caption"
                key="formField-15-control"
                size="large"
                type="text"
                variant="warning"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-15-caption",
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="warning"
                >
                  <TextInput
                    className="emotion-16"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": "formField-15-caption",
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="warning"
                  >
                    <Themed(FauxControl)
                      className="emotion-16"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": "formField-15-caption",
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                      variant="warning"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-16"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": "formField-15-caption",
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                            variant="warning"
                          >
                            <FauxControl
                              className="emotion-16"
                              control={[Function]}
                              variant="warning"
                            >
                              <div
                                className="emotion-15"
                              >
                                <Control
                                  aria-describedby="formField-15-caption"
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": "formField-15-caption",
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  size="large"
                                  type="text"
                                  variant="warning"
                                >
                                  <input
                                    aria-describedby="formField-15-caption"
                                    className="emotion-12"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <IconWarning
                                  key="iconEnd"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={false}
                                    size="1.5em"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-2"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconWarning>
                                <Underlay
                                  variant="warning"
                                >
                                  <div
                                    className="emotion-14"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
            <Styled(div)
              caption="This is help text"
              id="formField-15-caption"
              variant="warning"
            >
              <div
                className="emotion-20"
                id="formField-15-caption"
              >
                This is help text
              </div>
            </Styled(div)>
          </div>
        </FormField>
      </FormField>
      <FormField
        caption="This is help text"
        input={[Function]}
        label="Danger"
        requiredText="Required"
        variant="danger"
      >
        <FormField>
          <div
            className="emotion-10"
          >
            <label>
              <Styled(div)
                key="formField-17-textWrapper"
              >
                <div
                  className="emotion-0"
                >
                  <span
                    id="formField-17-labelText"
                  >
                    Danger
                  </span>
                </div>
              </Styled(div)>
              <TextInput
                aria-describedby="formField-17-caption"
                key="formField-17-control"
                size="large"
                type="text"
                variant="danger"
              >
                <TextInput
                  control={[Function]}
                  controlProps={
                    Object {
                      "aria-describedby": "formField-17-caption",
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="danger"
                >
                  <TextInput
                    className="emotion-27"
                    control={[Function]}
                    controlProps={
                      Object {
                        "aria-describedby": "formField-17-caption",
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="danger"
                  >
                    <Themed(FauxControl)
                      className="emotion-27"
                      control={[Function]}
                      controlProps={
                        Object {
                          "aria-describedby": "formField-17-caption",
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                      variant="danger"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-27"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": "formField-17-caption",
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            size="large"
                            variant="danger"
                          >
                            <FauxControl
                              className="emotion-27"
                              control={[Function]}
                              variant="danger"
                            >
                              <div
                                className="emotion-26"
                              >
                                <Control
                                  aria-describedby="formField-17-caption"
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": "formField-17-caption",
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  key="control"
                                  size="large"
                                  type="text"
                                  variant="danger"
                                >
                                  <input
                                    aria-describedby="formField-17-caption"
                                    className="emotion-23"
                                    size="large"
                                    type="text"
                                  />
                                </Control>
                                <IconDanger
                                  key="iconEnd"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={false}
                                    size="1.5em"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-2"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconDanger>
                                <Underlay
                                  variant="danger"
                                >
                                  <div
                                    className="emotion-25"
                                  />
                                </Underlay>
                              </div>
                            </FauxControl>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </TextInput>
                </TextInput>
              </TextInput>
            </label>
            <Styled(div)
              caption="This is help text"
              id="formField-17-caption"
              variant="danger"
            >
              <div
                className="emotion-31"
                id="formField-17-caption"
              >
                This is help text
              </div>
            </Styled(div)>
          </div>
        </FormField>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;
