// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormFieldset demo examples Snapshots: basic 1`] = `
.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  border: 1px solid transparent;
  border-top-color: #c8d1e0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19 > legend {
  color: #333840;
  font-size: 0.875rem;
  font-weight: 700;
  line-height: 2rem;
  padding: 0;
  padding-right: 0.5rem;
}

.emotion-18[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875rem;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.5rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 1rem;
  padding-right: 1rem;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<FormFieldset
  legend="Login"
>
  <FormFieldset>
    <fieldset
      className="emotion-19"
    >
      <legend>
        Login
      </legend>
      <DemoLayout>
        <Styled(div)
          marginBottom="1rem"
        >
          <div
            className="emotion-18"
          >
            <FormField
              label="Email"
              requiredText="Required"
            >
              <FormField>
                <div
                  className="emotion-8"
                >
                  <label>
                    <Styled(div)
                      key="formField-1-textWrapper"
                    >
                      <div
                        className="emotion-0"
                      >
                        <span
                          id="formField-1-labelText"
                        >
                          Email
                        </span>
                      </div>
                    </Styled(div)>
                    <TextInput
                      key="formField-1-control"
                      size="large"
                      type="email"
                    >
                      <TextInput
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "email",
                          }
                        }
                        size="large"
                      >
                        <TextInput
                          className="emotion-4"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "email",
                            }
                          }
                          size="large"
                        >
                          <Themed(FauxControl)
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "email",
                              }
                            }
                            size="large"
                          >
                            <ThemeProvider>
                              <Fragment>
                                <DocumentFontSizeProvider>
                                  <ThemeProvider>
                                    <FauxControl
                                      className="emotion-4"
                                      control={[Function]}
                                      controlProps={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "email",
                                        }
                                      }
                                      size="large"
                                    >
                                      <FauxControl
                                        className="emotion-4"
                                        control={[Function]}
                                      >
                                        <div
                                          className="emotion-3"
                                        >
                                          <Control
                                            controlPropsIn={
                                              Object {
                                                "aria-describedby": undefined,
                                                "aria-invalid": undefined,
                                                "aria-required": undefined,
                                                "controlRef": undefined,
                                                "disabled": undefined,
                                                "readOnly": undefined,
                                                "required": undefined,
                                                "type": "email",
                                              }
                                            }
                                            key="control"
                                            size="large"
                                            type="email"
                                          >
                                            <input
                                              className="emotion-1"
                                              size="large"
                                              type="email"
                                            />
                                          </Control>
                                          <Underlay>
                                            <div
                                              className="emotion-2"
                                            />
                                          </Underlay>
                                        </div>
                                      </FauxControl>
                                    </FauxControl>
                                  </ThemeProvider>
                                </DocumentFontSizeProvider>
                                <EventListener
                                  listeners={
                                    Array [
                                      Object {
                                        "event": "DOMContentLoaded",
                                        "handler": [Function],
                                        "target": "document",
                                      },
                                    ]
                                  }
                                />
                              </Fragment>
                            </ThemeProvider>
                          </Themed(FauxControl)>
                        </TextInput>
                      </TextInput>
                    </TextInput>
                  </label>
                </div>
              </FormField>
            </FormField>
            <FormField
              label="Password"
              requiredText="Required"
            >
              <FormField>
                <div
                  className="emotion-8"
                >
                  <label>
                    <Styled(div)
                      key="formField-2-textWrapper"
                    >
                      <div
                        className="emotion-0"
                      >
                        <span
                          id="formField-2-labelText"
                        >
                          Password
                        </span>
                      </div>
                    </Styled(div)>
                    <TextInput
                      key="formField-2-control"
                      size="large"
                      type="password"
                    >
                      <TextInput
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "password",
                          }
                        }
                        size="large"
                      >
                        <TextInput
                          className="emotion-4"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "password",
                            }
                          }
                          size="large"
                        >
                          <Themed(FauxControl)
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "password",
                              }
                            }
                            size="large"
                          >
                            <ThemeProvider>
                              <Fragment>
                                <DocumentFontSizeProvider>
                                  <ThemeProvider>
                                    <FauxControl
                                      className="emotion-4"
                                      control={[Function]}
                                      controlProps={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "password",
                                        }
                                      }
                                      size="large"
                                    >
                                      <FauxControl
                                        className="emotion-4"
                                        control={[Function]}
                                      >
                                        <div
                                          className="emotion-3"
                                        >
                                          <Control
                                            controlPropsIn={
                                              Object {
                                                "aria-describedby": undefined,
                                                "aria-invalid": undefined,
                                                "aria-required": undefined,
                                                "controlRef": undefined,
                                                "disabled": undefined,
                                                "readOnly": undefined,
                                                "required": undefined,
                                                "type": "password",
                                              }
                                            }
                                            key="control"
                                            size="large"
                                            type="password"
                                          >
                                            <input
                                              className="emotion-1"
                                              size="large"
                                              type="password"
                                            />
                                          </Control>
                                          <Underlay>
                                            <div
                                              className="emotion-2"
                                            />
                                          </Underlay>
                                        </div>
                                      </FauxControl>
                                    </FauxControl>
                                  </ThemeProvider>
                                </DocumentFontSizeProvider>
                                <EventListener
                                  listeners={
                                    Array [
                                      Object {
                                        "event": "DOMContentLoaded",
                                        "handler": [Function],
                                        "target": "document",
                                      },
                                    ]
                                  }
                                />
                              </Fragment>
                            </ThemeProvider>
                          </Themed(FauxControl)>
                        </TextInput>
                      </TextInput>
                    </TextInput>
                  </label>
                </div>
              </FormField>
            </FormField>
          </div>
        </Styled(div)>
      </DemoLayout>
    </fieldset>
  </FormFieldset>
</FormFieldset>
`;

exports[`FormFieldset demo examples Snapshots: disabled 1`] = `
.emotion-18[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875rem;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  border: 1px solid transparent;
  border-top-color: #c8d1e0;
  padding: 0;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19 > legend {
  color: #afbacc;
  font-size: 0.875rem;
  font-weight: 700;
  line-height: 2rem;
  padding: 0;
  padding-right: 0.5rem;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.5rem;
  min-width: 0;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 1rem;
  padding-right: 1rem;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<FormFieldset
  disabled={true}
  legend="Login"
>
  <FormFieldset
    disabled={true}
  >
    <fieldset
      className="emotion-19"
      disabled={true}
    >
      <legend>
        Login
      </legend>
      <DemoLayout>
        <Styled(div)
          marginBottom="1rem"
        >
          <div
            className="emotion-18"
          >
            <FormField
              label="Email"
              requiredText="Required"
            >
              <FormField>
                <div
                  className="emotion-8"
                >
                  <label>
                    <Styled(div)
                      key="formField-5-textWrapper"
                    >
                      <div
                        className="emotion-0"
                      >
                        <span
                          id="formField-5-labelText"
                        >
                          Email
                        </span>
                      </div>
                    </Styled(div)>
                    <TextInput
                      disabled={true}
                      key="formField-5-control"
                      size="large"
                      type="email"
                    >
                      <TextInput
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": true,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "email",
                          }
                        }
                        disabled={true}
                        size="large"
                      >
                        <TextInput
                          className="emotion-4"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "disabled": true,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "email",
                            }
                          }
                          disabled={true}
                          size="large"
                        >
                          <Themed(FauxControl)
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": true,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "email",
                              }
                            }
                            disabled={true}
                            size="large"
                          >
                            <ThemeProvider>
                              <Fragment>
                                <DocumentFontSizeProvider>
                                  <ThemeProvider>
                                    <FauxControl
                                      className="emotion-4"
                                      control={[Function]}
                                      controlProps={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": true,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "email",
                                        }
                                      }
                                      disabled={true}
                                      size="large"
                                    >
                                      <FauxControl
                                        className="emotion-4"
                                        control={[Function]}
                                        disabled={true}
                                      >
                                        <div
                                          className="emotion-3"
                                        >
                                          <Control
                                            controlPropsIn={
                                              Object {
                                                "aria-describedby": undefined,
                                                "aria-invalid": undefined,
                                                "aria-required": undefined,
                                                "controlRef": undefined,
                                                "disabled": true,
                                                "readOnly": undefined,
                                                "required": undefined,
                                                "type": "email",
                                              }
                                            }
                                            disabled={true}
                                            key="control"
                                            size="large"
                                            type="email"
                                          >
                                            <input
                                              className="emotion-1"
                                              disabled={true}
                                              size="large"
                                              type="email"
                                            />
                                          </Control>
                                          <Underlay
                                            disabled={true}
                                          >
                                            <div
                                              className="emotion-2"
                                            />
                                          </Underlay>
                                        </div>
                                      </FauxControl>
                                    </FauxControl>
                                  </ThemeProvider>
                                </DocumentFontSizeProvider>
                                <EventListener
                                  listeners={
                                    Array [
                                      Object {
                                        "event": "DOMContentLoaded",
                                        "handler": [Function],
                                        "target": "document",
                                      },
                                    ]
                                  }
                                />
                              </Fragment>
                            </ThemeProvider>
                          </Themed(FauxControl)>
                        </TextInput>
                      </TextInput>
                    </TextInput>
                  </label>
                </div>
              </FormField>
            </FormField>
            <FormField
              label="Password"
              requiredText="Required"
            >
              <FormField>
                <div
                  className="emotion-8"
                >
                  <label>
                    <Styled(div)
                      key="formField-6-textWrapper"
                    >
                      <div
                        className="emotion-0"
                      >
                        <span
                          id="formField-6-labelText"
                        >
                          Password
                        </span>
                      </div>
                    </Styled(div)>
                    <TextInput
                      disabled={true}
                      key="formField-6-control"
                      size="large"
                      type="password"
                    >
                      <TextInput
                        control={[Function]}
                        controlProps={
                          Object {
                            "aria-describedby": undefined,
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": true,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "password",
                          }
                        }
                        disabled={true}
                        size="large"
                      >
                        <TextInput
                          className="emotion-4"
                          control={[Function]}
                          controlProps={
                            Object {
                              "aria-describedby": undefined,
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "disabled": true,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "password",
                            }
                          }
                          disabled={true}
                          size="large"
                        >
                          <Themed(FauxControl)
                            className="emotion-4"
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": true,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "password",
                              }
                            }
                            disabled={true}
                            size="large"
                          >
                            <ThemeProvider>
                              <Fragment>
                                <DocumentFontSizeProvider>
                                  <ThemeProvider>
                                    <FauxControl
                                      className="emotion-4"
                                      control={[Function]}
                                      controlProps={
                                        Object {
                                          "aria-describedby": undefined,
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "disabled": true,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "password",
                                        }
                                      }
                                      disabled={true}
                                      size="large"
                                    >
                                      <FauxControl
                                        className="emotion-4"
                                        control={[Function]}
                                        disabled={true}
                                      >
                                        <div
                                          className="emotion-3"
                                        >
                                          <Control
                                            controlPropsIn={
                                              Object {
                                                "aria-describedby": undefined,
                                                "aria-invalid": undefined,
                                                "aria-required": undefined,
                                                "controlRef": undefined,
                                                "disabled": true,
                                                "readOnly": undefined,
                                                "required": undefined,
                                                "type": "password",
                                              }
                                            }
                                            disabled={true}
                                            key="control"
                                            size="large"
                                            type="password"
                                          >
                                            <input
                                              className="emotion-1"
                                              disabled={true}
                                              size="large"
                                              type="password"
                                            />
                                          </Control>
                                          <Underlay
                                            disabled={true}
                                          >
                                            <div
                                              className="emotion-2"
                                            />
                                          </Underlay>
                                        </div>
                                      </FauxControl>
                                    </FauxControl>
                                  </ThemeProvider>
                                </DocumentFontSizeProvider>
                                <EventListener
                                  listeners={
                                    Array [
                                      Object {
                                        "event": "DOMContentLoaded",
                                        "handler": [Function],
                                        "target": "document",
                                      },
                                    ]
                                  }
                                />
                              </Fragment>
                            </ThemeProvider>
                          </Themed(FauxControl)>
                        </TextInput>
                      </TextInput>
                    </TextInput>
                  </label>
                </div>
              </FormField>
            </FormField>
          </div>
        </Styled(div)>
      </DemoLayout>
    </fieldset>
  </FormFieldset>
</FormFieldset>
`;

exports[`FormFieldset demo examples Snapshots: rtl 1`] = `
.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875rem;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.emotion-0 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5rem;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875rem;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-10 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 1rem;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  border: 1px solid transparent;
  border-top-color: #c8d1e0;
  padding: 0;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-10 > legend {
  color: #333840;
  font-size: 0.875rem;
  font-weight: 700;
  line-height: 2rem;
  padding: 0;
  padding-left: 0.5rem;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 1rem;
  height: 1.5rem;
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
  width: 1.5rem;
}

.emotion-2 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.5rem;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875rem;
  outline: 0;
  padding-left: 1rem;
  padding-right: 0;
}

.emotion-2[type="search"] {
  -webkit-appearance: none;
}

.emotion-2[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <Fragment>
      <DocumentFontSizeProvider>
        <ThemeProvider>
          <FormFieldset
            legend="أسطورة"
          >
            <FormFieldset>
              <fieldset
                className="emotion-10"
              >
                <legend>
                  أسطورة
                </legend>
                <FormField
                  label="مرحبا بالعالم"
                  requiredText="Required"
                >
                  <FormField>
                    <div
                      className="emotion-9"
                    >
                      <label>
                        <Styled(div)
                          key="formField-9-textWrapper"
                        >
                          <div
                            className="emotion-0"
                          >
                            <span
                              id="formField-9-labelText"
                            >
                              مرحبا بالعالم
                            </span>
                          </div>
                        </Styled(div)>
                        <TextInput
                          defaultValue="مرحبا بالعالم"
                          iconStart={<IconBackspace />}
                          key="formField-9-control"
                          size="large"
                          type="text"
                        >
                          <TextInput
                            control={[Function]}
                            controlProps={
                              Object {
                                "aria-describedby": undefined,
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "مرحبا بالعالم",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            iconStart={<IconBackspace />}
                            size="large"
                          >
                            <TextInput
                              className="emotion-5"
                              control={[Function]}
                              controlProps={
                                Object {
                                  "aria-describedby": undefined,
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "مرحبا بالعالم",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              iconStart={<IconBackspace />}
                              size="large"
                            >
                              <Themed(FauxControl)
                                className="emotion-5"
                                control={[Function]}
                                controlProps={
                                  Object {
                                    "aria-describedby": undefined,
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "مرحبا بالعالم",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                iconStart={<IconBackspace />}
                                size="large"
                              >
                                <ThemeProvider>
                                  <Fragment>
                                    <DocumentFontSizeProvider>
                                      <ThemeProvider>
                                        <FauxControl
                                          className="emotion-5"
                                          control={[Function]}
                                          controlProps={
                                            Object {
                                              "aria-describedby": undefined,
                                              "aria-invalid": undefined,
                                              "aria-required": undefined,
                                              "controlRef": undefined,
                                              "defaultValue": "مرحبا بالعالم",
                                              "disabled": undefined,
                                              "readOnly": undefined,
                                              "required": undefined,
                                              "type": "text",
                                            }
                                          }
                                          iconStart={<IconBackspace />}
                                          size="large"
                                        >
                                          <FauxControl
                                            className="emotion-5"
                                            control={[Function]}
                                          >
                                            <div
                                              className="emotion-4"
                                            >
                                              <IconBackspace
                                                key="iconStart"
                                                size="1.5rem"
                                              >
                                                <Icon
                                                  rtl={true}
                                                  size="1.5rem"
                                                >
                                                  <Styled(svg)
                                                    aria-hidden={true}
                                                    focusable="false"
                                                    role="img"
                                                    rtl={true}
                                                    size="1.5rem"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="emotion-1"
                                                      focusable="false"
                                                      role="img"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <g>
                                                        <path
                                                          d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </Styled(svg)>
                                                </Icon>
                                              </IconBackspace>
                                              <Control
                                                controlPropsIn={
                                                  Object {
                                                    "aria-describedby": undefined,
                                                    "aria-invalid": undefined,
                                                    "aria-required": undefined,
                                                    "controlRef": undefined,
                                                    "defaultValue": "مرحبا بالعالم",
                                                    "disabled": undefined,
                                                    "readOnly": undefined,
                                                    "required": undefined,
                                                    "type": "text",
                                                  }
                                                }
                                                defaultValue="مرحبا بالعالم"
                                                iconStart={<IconBackspace />}
                                                key="control"
                                                size="large"
                                                type="text"
                                              >
                                                <input
                                                  className="emotion-2"
                                                  defaultValue="مرحبا بالعالم"
                                                  size="large"
                                                  type="text"
                                                />
                                              </Control>
                                              <Underlay>
                                                <div
                                                  className="emotion-3"
                                                />
                                              </Underlay>
                                            </div>
                                          </FauxControl>
                                        </FauxControl>
                                      </ThemeProvider>
                                    </DocumentFontSizeProvider>
                                    <EventListener
                                      listeners={
                                        Array [
                                          Object {
                                            "event": "DOMContentLoaded",
                                            "handler": [Function],
                                            "target": "document",
                                          },
                                        ]
                                      }
                                    />
                                  </Fragment>
                                </ThemeProvider>
                              </Themed(FauxControl)>
                            </TextInput>
                          </TextInput>
                        </TextInput>
                      </label>
                    </div>
                  </FormField>
                </FormField>
              </fieldset>
            </FormFieldset>
          </FormFieldset>
        </ThemeProvider>
      </DocumentFontSizeProvider>
      <EventListener
        listeners={
          Array [
            Object {
              "event": "DOMContentLoaded",
              "handler": [Function],
              "target": "document",
            },
          ]
        }
      />
    </Fragment>
  </ThemeProvider>
</div>
`;
